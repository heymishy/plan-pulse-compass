name: Weekly Maintenance

on:
  schedule:
    # Run every Sunday at 2 AM UTC (9 PM Saturday EST/6 PM Saturday PST)
    - cron: '0 2 * * 0'
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '18'

jobs:
  maintenance:
    name: Weekly Maintenance Tasks
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache dependencies and build outputs
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            .next/cache
            playwright/.cache
          key: ${{ runner.os }}-weekly-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-weekly-

      - name: Install dependencies
        run: npm ci

      - name: Run comprehensive security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Generate dependency report
        run: |
          npm list --depth=0 > dependency-report.txt
          npm outdated > outdated-packages.txt || true

      - name: Run bundle analysis
        run: npm run build:analyze
        env:
          CI: true
        continue-on-error: true

      - name: Run comprehensive test suite
        run: npm run test:coverage
        env:
          CI: true
        continue-on-error: true

      - name: Check for large files
        run: |
          find . -type f -size +10M -not -path "./node_modules/*" -not -path "./.git/*" > large-files.txt || true

      - name: Generate maintenance report
        run: |
          echo "# Weekly Maintenance Report - $(date)" > maintenance-report.md
          echo "" >> maintenance-report.md
          echo "## Dependencies" >> maintenance-report.md
          echo "\`\`\`" >> maintenance-report.md
          cat dependency-report.txt >> maintenance-report.md
          echo "\`\`\`" >> maintenance-report.md
          echo "" >> maintenance-report.md
          echo "## Outdated Packages" >> maintenance-report.md
          echo "\`\`\`" >> maintenance-report.md
          cat outdated-packages.txt >> maintenance-report.md
          echo "\`\`\`" >> maintenance-report.md
          echo "" >> maintenance-report.md
          if [ -s large-files.txt ]; then
            echo "## Large Files Found" >> maintenance-report.md
            echo "\`\`\`" >> maintenance-report.md
            cat large-files.txt >> maintenance-report.md
            echo "\`\`\`" >> maintenance-report.md
          else
            echo "## Large Files: None found" >> maintenance-report.md
          fi

      - name: Upload maintenance artifacts
        uses: actions/upload-artifact@v4
        with:
          name: weekly-maintenance-report
          path: |
            maintenance-report.md
            dependency-report.txt
            outdated-packages.txt
            large-files.txt
            dist/
            coverage/
          retention-days: 30

      - name: Add GitHub Actions Summary
        run: |
          echo "## ðŸ“‹ Weekly Maintenance Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat maintenance-report.md >> $GITHUB_STEP_SUMMARY

  # Optional: Create issue for critical security vulnerabilities
  security-issue:
    name: Security Issue Creator
    runs-on: ubuntu-latest
    needs: [maintenance]
    if: failure() && github.ref == 'refs/heads/main'

    steps:
      - name: Create security issue
        uses: actions/github-script@v7
        with:
          script: |
            const title = `ðŸ”’ Security Alert - Weekly Maintenance Failed`;
            const body = `Weekly maintenance failed with potential security issues.

            **Action Required:**
            - Review the failed maintenance workflow
            - Check for high/critical security vulnerabilities
            - Update dependencies if needed

            **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            This issue was created automatically by the weekly maintenance workflow.`;

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'maintenance', 'priority-high']
            });
