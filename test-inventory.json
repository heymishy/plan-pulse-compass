{
  "metadata": {
    "generated": "2025-08-15T20:53:19.246Z",
    "version": "1.0.0",
    "totalTests": 2491,
    "totalSuites": 17
  },
  "testCases": [
    {
      "id": "src_components___tests___SkillsSettings_test_tsx__should_handle_missing_setSkills_function_gracefully__testing_defensive_coding_",
      "name": "should handle missing setSkills function gracefully (testing defensive coding)",
      "filePath": "src/components/__tests__/SkillsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "skills",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SkillsSettings - should handle missing setSkills function gracefully (testing defensive coding)",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.617Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components___tests___SkillsSettings_test_tsx__should_successfully_add_a_skill_when_setSkills_function_is_properly_available",
      "name": "should successfully add a skill when setSkills function is properly available",
      "filePath": "src/components/__tests__/SkillsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "skills",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SkillsSettings - should successfully add a skill when setSkills function is properly available",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.617Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components___tests___SidebarMinimize_test_tsx__should_render_minimize_button_in_expanded_state",
      "name": "should render minimize button in expanded state",
      "filePath": "src/components/__tests__/SidebarMinimize.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sidebar Minimize Functionality - CI Tests - should render minimize button in expanded state",
      "tags": ["async", "integration"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.618Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___SidebarMinimize_test_tsx__should_have_correct_accessibility_attributes",
      "name": "should have correct accessibility attributes",
      "filePath": "src/components/__tests__/SidebarMinimize.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sidebar Minimize Functionality - CI Tests - should have correct accessibility attributes",
      "tags": ["async", "integration"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.618Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___SidebarMinimize_test_tsx__should_have_proper_styling_classes",
      "name": "should have proper styling classes",
      "filePath": "src/components/__tests__/SidebarMinimize.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sidebar Minimize Functionality - CI Tests - should have proper styling classes",
      "tags": ["async", "integration"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.618Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___SidebarMinimize_test_tsx__should_be_clickable",
      "name": "should be clickable",
      "filePath": "src/components/__tests__/SidebarMinimize.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sidebar Minimize Functionality - CI Tests - should be clickable",
      "tags": ["async", "integration"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.618Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___SidebarMinimize_test_tsx__should_be_keyboard_accessible",
      "name": "should be keyboard accessible",
      "filePath": "src/components/__tests__/SidebarMinimize.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sidebar Minimize Functionality - CI Tests - should be keyboard accessible",
      "tags": ["async", "integration"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.618Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___SidebarMinimize_test_tsx__should_respond_to_Enter_key",
      "name": "should respond to Enter key",
      "filePath": "src/components/__tests__/SidebarMinimize.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sidebar Minimize Functionality - CI Tests - should respond to Enter key",
      "tags": ["async", "integration"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.618Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___SidebarMinimize_test_tsx__should_respond_to_Space_key",
      "name": "should respond to Space key",
      "filePath": "src/components/__tests__/SidebarMinimize.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sidebar Minimize Functionality - CI Tests - should respond to Space key",
      "tags": ["async", "integration"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.618Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___SidebarMinimize_test_tsx__should_be_positioned_in_sidebar_header",
      "name": "should be positioned in sidebar header",
      "filePath": "src/components/__tests__/SidebarMinimize.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sidebar Minimize Functionality - CI Tests - should be positioned in sidebar header",
      "tags": ["async", "integration"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.619Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___SidebarMinimize_test_tsx__should_be_positioned_after_the_title",
      "name": "should be positioned after the title",
      "filePath": "src/components/__tests__/SidebarMinimize.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sidebar Minimize Functionality - CI Tests - should be positioned after the title",
      "tags": ["async", "integration"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.619Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___SidebarMinimize_test_tsx__should_display_PanelLeft_icon",
      "name": "should display PanelLeft icon",
      "filePath": "src/components/__tests__/SidebarMinimize.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sidebar Minimize Functionality - CI Tests - should display PanelLeft icon",
      "tags": ["async", "integration"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.619Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___SidebarMinimize_test_tsx__should_have_tooltip_structure",
      "name": "should have tooltip structure",
      "filePath": "src/components/__tests__/SidebarMinimize.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sidebar Minimize Functionality - CI Tests - should have tooltip structure",
      "tags": ["async", "integration"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.619Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___SidebarMinimize_test_tsx__should_have_minimizeSidebar_function_available",
      "name": "should have minimizeSidebar function available",
      "filePath": "src/components/__tests__/SidebarMinimize.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sidebar Minimize Functionality - CI Tests - should have minimizeSidebar function available",
      "tags": ["async", "integration"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.620Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___ProjectTable_test_tsx__should_handle_undefined_project_status_gracefully__defensive_coding_test_",
      "name": "should handle undefined project status gracefully (defensive coding test)",
      "filePath": "src/components/__tests__/ProjectTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable - should handle undefined project status gracefully (defensive coding test)",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.621Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___ProjectTable_test_tsx__should_handle_valid_project_status_correctly",
      "name": "should handle valid project status correctly",
      "filePath": "src/components/__tests__/ProjectTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable - should handle valid project status correctly",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.621Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___ProjectTable_test_tsx__should_handle_invalid_project_status_gracefully_after_fix",
      "name": "should handle invalid project status gracefully after fix",
      "filePath": "src/components/__tests__/ProjectTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable - should handle invalid project status gracefully after fix",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.621Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___ProjectTable_test_tsx__should_handle_all_valid_status_types",
      "name": "should handle all valid status types",
      "filePath": "src/components/__tests__/ProjectTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable - should handle all valid status types",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.621Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Navigation_test_tsx__renders_navigation_component_with_proper_structure",
      "name": "renders navigation component with proper structure",
      "filePath": "src/components/__tests__/Navigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Navigation - renders navigation component with proper structure",
      "tags": [],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.622Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Navigation_test_tsx__contains_all_navigation_links",
      "name": "contains all navigation links",
      "filePath": "src/components/__tests__/Navigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Navigation - contains all navigation links",
      "tags": [],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.622Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Navigation_test_tsx__renders_version_info_component",
      "name": "renders version info component",
      "filePath": "src/components/__tests__/Navigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Navigation - renders version info component",
      "tags": [],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.622Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Navigation_test_tsx__renders_all_navigation_items",
      "name": "renders all navigation items",
      "filePath": "src/components/__tests__/Navigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Navigation - renders all navigation items",
      "tags": [],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.622Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Navigation_test_tsx__has_proper_link_structure_for_navigation_items",
      "name": "has proper link structure for navigation items",
      "filePath": "src/components/__tests__/Navigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Navigation - has proper link structure for navigation items",
      "tags": [],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.622Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Layout_test_tsx__renders_the_sidebar_with_proper_structure",
      "name": "renders the sidebar with proper structure",
      "filePath": "src/components/__tests__/Layout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Layout and Navigation UI - renders the sidebar with proper structure",
      "tags": [],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.622Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Layout_test_tsx__renders_version_info_in_sidebar_header",
      "name": "renders version info in sidebar header",
      "filePath": "src/components/__tests__/Layout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Layout and Navigation UI - renders version info in sidebar header",
      "tags": [],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.622Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Layout_test_tsx__renders_minimize_button_when_sidebar_is_expanded",
      "name": "renders minimize button when sidebar is expanded",
      "filePath": "src/components/__tests__/Layout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Layout and Navigation UI - renders minimize button when sidebar is expanded",
      "tags": [],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.622Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Layout_test_tsx__minimize_button_has_proper_tooltip",
      "name": "minimize button has proper tooltip",
      "filePath": "src/components/__tests__/Layout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Layout and Navigation UI - minimize button has proper tooltip",
      "tags": [],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.622Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Layout_test_tsx__minimize_button_is_positioned_correctly_in_header",
      "name": "minimize button is positioned correctly in header",
      "filePath": "src/components/__tests__/Layout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Layout and Navigation UI - minimize button is positioned correctly in header",
      "tags": [],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.623Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Layout_test_tsx__minimize_functionality_is_accessible_via_keyboard",
      "name": "minimize functionality is accessible via keyboard",
      "filePath": "src/components/__tests__/Layout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Layout and Navigation UI - minimize functionality is accessible via keyboard",
      "tags": [],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.623Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Layout_test_tsx__renders_all_navigation_items_with_proper_icons",
      "name": "renders all navigation items with proper icons",
      "filePath": "src/components/__tests__/Layout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Layout and Navigation UI - renders all navigation items with proper icons",
      "tags": [],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.623Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Layout_test_tsx__has_proper_link_structure_for_navigation_items",
      "name": "has proper link structure for navigation items",
      "filePath": "src/components/__tests__/Layout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Layout and Navigation UI - has proper link structure for navigation items",
      "tags": [],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.623Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Layout_test_tsx__has_proper_ARIA_labels_and_roles",
      "name": "has proper ARIA labels and roles",
      "filePath": "src/components/__tests__/Layout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Layout and Navigation UI - has proper ARIA labels and roles",
      "tags": [],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.623Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Layout_test_tsx__has_proper_heading_structure",
      "name": "has proper heading structure",
      "filePath": "src/components/__tests__/Layout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Layout and Navigation UI - has proper heading structure",
      "tags": [],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.623Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Footer_test_tsx__renders_without_crashing",
      "name": "renders without crashing",
      "filePath": "src/components/__tests__/Footer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Footer - renders without crashing",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.624Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Footer_test_tsx__displays_version_information",
      "name": "displays version information",
      "filePath": "src/components/__tests__/Footer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Footer - displays version information",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.624Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Footer_test_tsx__has_proper_semantic_structure",
      "name": "has proper semantic structure",
      "filePath": "src/components/__tests__/Footer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Footer - has proper semantic structure",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.624Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___FinancialImpactAnalysis_test_tsx__renders_the_component_with_initial_state",
      "name": "renders the component with initial state",
      "filePath": "src/components/__tests__/FinancialImpactAnalysis.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "FinancialImpactAnalysis - renders the component with initial state",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.624Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components___tests___Calendar_test_tsx__should_render_without_crashing",
      "name": "should render without crashing",
      "filePath": "src/components/__tests__/Calendar.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Calendar Component - should render without crashing",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.624Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components___tests___Calendar_test_tsx__should_display_current_month_by_default",
      "name": "should display current month by default",
      "filePath": "src/components/__tests__/Calendar.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Calendar Component - should display current month by default",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.624Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components___tests___Calendar_test_tsx__should_display_events_on_calendar",
      "name": "should display events on calendar",
      "filePath": "src/components/__tests__/Calendar.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Calendar Component - should display events on calendar",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.624Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components___tests___Calendar_test_tsx__should_navigate_between_months",
      "name": "should navigate between months",
      "filePath": "src/components/__tests__/Calendar.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Calendar Component - should navigate between months",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.625Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components___tests___Calendar_test_tsx__should_display_event_details_on_click",
      "name": "should display event details on click",
      "filePath": "src/components/__tests__/Calendar.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Calendar Component - should display event details on click",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.625Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components___tests___Calendar_test_tsx__should_handle_month_year_navigation",
      "name": "should handle month/year navigation",
      "filePath": "src/components/__tests__/Calendar.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Calendar Component - should handle month/year navigation",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.625Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components___tests___Calendar_test_tsx__should_create_new_events",
      "name": "should create new events",
      "filePath": "src/components/__tests__/Calendar.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Calendar Component - should create new events",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.625Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components___tests___Calendar_test_tsx__should_integrate_with_existing_milestone_data",
      "name": "should integrate with existing milestone data",
      "filePath": "src/components/__tests__/Calendar.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Calendar Component - should integrate with existing milestone data",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.625Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components___tests___Calendar_test_tsx__should_handle_different_event_types_with_proper_styling",
      "name": "should handle different event types with proper styling",
      "filePath": "src/components/__tests__/Calendar.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Calendar Component - should handle different event types with proper styling",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.625Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components___tests___Calendar_test_tsx__should_filter_events_by_project",
      "name": "should filter events by project",
      "filePath": "src/components/__tests__/Calendar.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Calendar Component - should filter events by project",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.626Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components___tests___Calendar_test_tsx__should_show_add_event_dialog",
      "name": "should show add event dialog",
      "filePath": "src/components/__tests__/Calendar.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Calendar Component - should show add event dialog",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.626Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_render_table_with_data",
      "name": "should render table with data",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should render table with data",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.627Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_render_empty_message_when_no_data",
      "name": "should render empty message when no data",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should render empty message when no data",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.627Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_render_with_custom_class_name",
      "name": "should render with custom class name",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should render with custom class name",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.627Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_render_custom_cell_content_using_render_function",
      "name": "should render custom cell content using render function",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should render custom cell content using render function",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.628Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_show_search_input_when_searchable_is_true",
      "name": "should show search input when searchable is true",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should show search input when searchable is true",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.628Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_filter_data_based_on_search_term",
      "name": "should filter data based on search term",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should filter data based on search term",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.628Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_search_across_all_columns",
      "name": "should search across all columns",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should search across all columns",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.628Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_show_no_results_when_search_term_has_no_matches",
      "name": "should show no results when search term has no matches",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should show no results when search term has no matches",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.629Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_show_sort_buttons_for_sortable_columns",
      "name": "should show sort buttons for sortable columns",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should show sort buttons for sortable columns",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.629Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_sort_data_in_ascending_order_on_first_click",
      "name": "should sort data in ascending order on first click",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should sort data in ascending order on first click",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.629Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_sort_data_in_descending_order_on_second_click",
      "name": "should sort data in descending order on second click",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should sort data in descending order on second click",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.629Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_clear_sort_on_third_click",
      "name": "should clear sort on third click",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should clear sort on third click",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.629Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_call_onRowClick_when_row_is_clicked",
      "name": "should call onRowClick when row is clicked",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should call onRowClick when row is clicked",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.629Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_not_throw_error_when_onRowClick_is_not_provided",
      "name": "should not throw error when onRowClick is not provided",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should not throw error when onRowClick is not provided",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.629Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_display_performance_statistics",
      "name": "should display performance statistics",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should display performance statistics",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.630Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_handle_large_datasets_efficiently",
      "name": "should handle large datasets efficiently",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should handle large datasets efficiently",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.630Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_use_custom_item_size_when_provided",
      "name": "should use custom item size when provided",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should use custom item size when provided",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.630Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_handle_empty_columns_array",
      "name": "should handle empty columns array",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should handle empty columns array",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.630Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_handle_missing_column_data_gracefully",
      "name": "should handle missing column data gracefully",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should handle missing column data gracefully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.630Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_handle_null_or_undefined_values_in_data",
      "name": "should handle null or undefined values in data",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should handle null or undefined values in data",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.630Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_have_proper_ARIA_attributes_for_table_structure",
      "name": "should have proper ARIA attributes for table structure",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should have proper ARIA attributes for table structure",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.631Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___virtual_table_test_tsx__should_support_keyboard_navigation_for_sort_buttons",
      "name": "should support keyboard navigation for sort buttons",
      "filePath": "src/components/ui/__tests__/virtual-table.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "VirtualTable - should support keyboard navigation for sort buttons",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.631Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__renders_with_default_props",
      "name": "renders with default props",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - renders with default props",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.631Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__renders_with_custom_placeholder",
      "name": "renders with custom placeholder",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - renders with custom placeholder",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.632Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__renders_without_search_input_when_searchable_is_false",
      "name": "renders without search input when searchable is false",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - renders without search input when searchable is false",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.632Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__calls_onSelectionChange_when_item_is_selected",
      "name": "calls onSelectionChange when item is selected",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - calls onSelectionChange when item is selected",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.633Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__supports_multi_select_mode",
      "name": "supports multi-select mode",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - supports multi-select mode",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.633Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__supports_single_select_mode",
      "name": "supports single-select mode",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - supports single-select mode",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.633Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__displays_selected_items",
      "name": "displays selected items",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - displays selected items",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.633Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__allows_removing_selected_items",
      "name": "allows removing selected items",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - allows removing selected items",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.633Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__filters_items_based_on_search_term",
      "name": "filters items based on search term",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - filters items based on search term",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.634Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__filters_items_by_category",
      "name": "filters items by category",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - filters items by category",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.634Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__shows_",
      "name": "shows ",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - shows ",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.634Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__groups_items_by_category_when_enabled",
      "name": "groups items by category when enabled",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - groups items by category when enabled",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.634Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__displays_compatibility_scores_when_enabled",
      "name": "displays compatibility scores when enabled",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - displays compatibility scores when enabled",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.634Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__sorts_items_by_compatibility_score",
      "name": "sorts items by compatibility score",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - sorts items by compatibility score",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.634Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__displays_recommendations_when_enabled",
      "name": "displays recommendations when enabled",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - displays recommendations when enabled",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.635Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__allows_selecting_from_recommendations",
      "name": "allows selecting from recommendations",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - allows selecting from recommendations",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.635Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__supports_arrow_key_navigation",
      "name": "supports arrow key navigation",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - supports arrow key navigation",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.635Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__closes_dropdown_on_Escape_key",
      "name": "closes dropdown on Escape key",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - closes dropdown on Escape key",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.635Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__has_proper_ARIA_attributes",
      "name": "has proper ARIA attributes",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - has proper ARIA attributes",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.635Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__updates_aria_expanded_when_dropdown_opens",
      "name": "updates aria-expanded when dropdown opens",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - updates aria-expanded when dropdown opens",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.636Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__provides_screen_reader_feedback_for_selected_items",
      "name": "provides screen reader feedback for selected items",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - provides screen reader feedback for selected items",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.636Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__uses_custom_item_renderer_when_provided",
      "name": "uses custom item renderer when provided",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - uses custom item renderer when provided",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.636Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___unified_selector_test_tsx__uses_custom_selected_item_renderer_when_provided",
      "name": "uses custom selected item renderer when provided",
      "filePath": "src/components/ui/__tests__/unified-selector.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "UnifiedSelector - uses custom selected item renderer when provided",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.636Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_with_default_props",
      "name": "should render with default props",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should render with default props",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.637Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_custom_title_when_provided",
      "name": "should render custom title when provided",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should render custom title when provided",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.637Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_empty_state_when_no_trends_provided",
      "name": "should render empty state when no trends provided",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should render empty state when no trends provided",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.638Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_trends_with_proper_direction_indicators",
      "name": "should render trends with proper direction indicators",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should render trends with proper direction indicators",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.638Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_trends_with_strength_indicators",
      "name": "should render trends with strength indicators",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should render trends with strength indicators",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.638Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_trends_with_confidence_levels",
      "name": "should render trends with confidence levels",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should render trends with confidence levels",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.639Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_handle_trend_click_events",
      "name": "should handle trend click events",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should handle trend click events",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.639Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_expand_trend_details_on_click",
      "name": "should expand trend details on click",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should expand trend details on click",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.639Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_handle_trend_drill_down",
      "name": "should handle trend drill-down",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should handle trend drill-down",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.640Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_toggle_forecast_display",
      "name": "should toggle forecast display",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should toggle forecast display",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.641Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_filter_trends_by_type",
      "name": "should filter trends by type",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should filter trends by type",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.641Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_filter_trends_by_direction",
      "name": "should filter trends by direction",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should filter trends by direction",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.641Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_switch_between_chart_views",
      "name": "should switch between chart views",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should switch between chart views",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.641Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_show_trends_in_compact_mode",
      "name": "should show trends in compact mode",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should show trends in compact mode",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.642Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_handle_period_changes",
      "name": "should handle period changes",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should handle period changes",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.642Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_display_trend_charts_with_historical_data",
      "name": "should display trend charts with historical data",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should display trend charts with historical data",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.642Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_display_forecast_data_when_enabled",
      "name": "should display forecast data when enabled",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should display forecast data when enabled",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.642Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_compare_trends_across_time_periods",
      "name": "should compare trends across time periods",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should compare trends across time periods",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.643Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_trend_value_with_proper_formatting",
      "name": "should render trend value with proper formatting",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should render trend value with proper formatting",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.643Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_display_percentage_changes",
      "name": "should display percentage changes",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should display percentage changes",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.643Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_trend_line_charts",
      "name": "should render trend line charts",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should render trend line charts",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.643Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_display_trend_indicators",
      "name": "should display trend indicators",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should display trend indicators",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.644Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_trend_metrics_summary",
      "name": "should render trend metrics summary",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should render trend metrics summary",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.644Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_handle_real_time_trend_updates",
      "name": "should handle real-time trend updates",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should handle real-time trend updates",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.644Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_show_loading_state_during_updates",
      "name": "should show loading state during updates",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should show loading state during updates",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.645Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_auto_refresh_trends_when_enabled",
      "name": "should auto-refresh trends when enabled",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should auto-refresh trends when enabled",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.645Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_pause_and_resume_auto_refresh",
      "name": "should pause and resume auto-refresh",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should pause and resume auto-refresh",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.645Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_display_trend_summary_statistics",
      "name": "should display trend summary statistics",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should display trend summary statistics",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.646Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_show_confidence_distribution",
      "name": "should show confidence distribution",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should show confidence distribution",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.647Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_calculate_overall_trend_health_score",
      "name": "should calculate overall trend health score",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should calculate overall trend health score",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.647Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_display_trend_correlation_matrix",
      "name": "should display trend correlation matrix",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should display trend correlation matrix",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.647Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_export_trends_as_CSV",
      "name": "should export trends as CSV",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should export trends as CSV",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.647Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_export_trends_as_PDF",
      "name": "should export trends as PDF",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should export trends as PDF",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.647Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_generate_trend_summary_report",
      "name": "should generate trend summary report",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should generate trend summary report",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.648Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_have_proper_ARIA_attributes",
      "name": "should have proper ARIA attributes",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should have proper ARIA attributes",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.648Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_support_keyboard_navigation",
      "name": "should support keyboard navigation",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should support keyboard navigation",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.648Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_announce_updates_to_screen_readers",
      "name": "should announce updates to screen readers",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should announce updates to screen readers",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.648Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_provide_alternative_data_representations",
      "name": "should provide alternative data representations",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should provide alternative data representations",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.648Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_handle_invalid_trend_data_gracefully",
      "name": "should handle invalid trend data gracefully",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should handle invalid trend data gracefully",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.649Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_handle_missing_forecast_data",
      "name": "should handle missing forecast data",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should handle missing forecast data",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.649Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_display_error_state_for_processing_failures",
      "name": "should display error state for processing failures",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should display error state for processing failures",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.649Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_validate_trend_value_ranges",
      "name": "should validate trend value ranges",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should validate trend value ranges",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.649Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_virtualize_large_trend_lists",
      "name": "should virtualize large trend lists",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should virtualize large trend lists",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.650Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_lazy_load_trend_details",
      "name": "should lazy load trend details",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should lazy load trend details",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.650Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_debounce_period_selector_changes",
      "name": "should debounce period selector changes",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should debounce period selector changes",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.650Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_support_custom_trend_cards",
      "name": "should support custom trend cards",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should support custom trend cards",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.651Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_support_trend_grouping_by_type",
      "name": "should support trend grouping by type",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should support trend grouping by type",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.651Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_calculate_trend_significance_scores",
      "name": "should calculate trend significance scores",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should calculate trend significance scores",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.651Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_support_trend_annotations",
      "name": "should support trend annotations",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should support trend annotations",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.651Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_apply_light_theme_correctly",
      "name": "should apply light theme correctly",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should apply light theme correctly",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.651Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_apply_dark_theme_correctly",
      "name": "should apply dark theme correctly",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should apply dark theme correctly",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.652Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_support_high_contrast_mode",
      "name": "should support high contrast mode",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should support high contrast mode",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.652Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_support_custom_color_schemes",
      "name": "should support custom color schemes",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should support custom color schemes",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.652Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_adapt_to_mobile_viewport",
      "name": "should adapt to mobile viewport",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should adapt to mobile viewport",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.652Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_stack_trends_vertically_on_small_screens",
      "name": "should stack trends vertically on small screens",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should stack trends vertically on small screens",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.652Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_show_grid_layout_on_large_screens",
      "name": "should show grid layout on large screens",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should show grid layout on large screens",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.653Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_adjust_columns_based_on_screen_size",
      "name": "should adjust columns based on screen size",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should adjust columns based on screen size",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.653Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_integrate_with_external_analytics_systems",
      "name": "should integrate with external analytics systems",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should integrate with external analytics systems",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.653Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_display_trend_collection_timestamps",
      "name": "should display trend collection timestamps",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should display trend collection timestamps",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.653Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_handle_webhook_notifications",
      "name": "should handle webhook notifications",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should handle webhook notifications",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.653Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___trend_analysis_component_test_tsx__should_support_trend_alerts_and_notifications",
      "name": "should support trend alerts and notifications",
      "filePath": "src/components/ui/__tests__/trend-analysis-component.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "TrendAnalysisComponent - should support trend alerts and notifications",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.654Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_render_with_default_props",
      "name": "should render with default props",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should render with default props",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.654Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_render_custom_title",
      "name": "should render custom title",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should render custom title",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.654Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_display_all_health_metrics",
      "name": "should display all health metrics",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should display all health metrics",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.654Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_show_metric_values_and_units",
      "name": "should show metric values and units",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should show metric values and units",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.655Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_display_metric_status_indicators",
      "name": "should display metric status indicators",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should display metric status indicators",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.655Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_show_overall_system_health_status",
      "name": "should show overall system health status",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should show overall system health status",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.655Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_render_loading_state",
      "name": "should render loading state",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should render loading state",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.655Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_render_error_state",
      "name": "should render error state",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should render error state",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.656Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_display_all_system_alerts",
      "name": "should display all system alerts",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should display all system alerts",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.656Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_show_alert_severity_levels",
      "name": "should show alert severity levels",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should show alert severity levels",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.656Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_handle_alert_acknowledgment",
      "name": "should handle alert acknowledgment",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should handle alert acknowledgment",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.656Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_display_alert_timestamps",
      "name": "should display alert timestamps",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should display alert timestamps",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.656Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_filter_alerts_by_severity",
      "name": "should filter alerts by severity",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should filter alerts by severity",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.657Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_handle_metric_clicks",
      "name": "should handle metric clicks",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should handle metric clicks",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.657Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_show_metric_trends",
      "name": "should show metric trends",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should show metric trends",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.657Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_display_metric_details_on_expand",
      "name": "should display metric details on expand",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should display metric details on expand",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.657Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_show_auto_refresh_indicator",
      "name": "should show auto-refresh indicator",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should show auto-refresh indicator",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.657Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_handle_manual_refresh",
      "name": "should handle manual refresh",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should handle manual refresh",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.657Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_handle_real_time_metric_updates",
      "name": "should handle real-time metric updates",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should handle real-time metric updates",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.657Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_filter_metrics_by_category",
      "name": "should filter metrics by category",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should filter metrics by category",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.658Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_group_metrics_by_category",
      "name": "should group metrics by category",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should group metrics by category",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.658Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_sort_metrics_by_status",
      "name": "should sort metrics by status",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should sort metrics by status",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.658Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_display_performance_summary",
      "name": "should display performance summary",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should display performance summary",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.658Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_show_system_uptime",
      "name": "should show system uptime",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should show system uptime",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.658Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_display_resource_utilization_chart",
      "name": "should display resource utilization chart",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should display resource utilization chart",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.658Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_have_proper_ARIA_attributes",
      "name": "should have proper ARIA attributes",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should have proper ARIA attributes",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.658Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_support_keyboard_navigation",
      "name": "should support keyboard navigation",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should support keyboard navigation",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.659Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_announce_status_changes",
      "name": "should announce status changes",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should announce status changes",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.659Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_export_health_report",
      "name": "should export health report",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should export health report",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.659Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_support_custom_metric_templates",
      "name": "should support custom metric templates",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should support custom metric templates",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.659Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_display_historical_data",
      "name": "should display historical data",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should display historical data",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.659Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_handle_threshold_configuration",
      "name": "should handle threshold configuration",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should handle threshold configuration",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.659Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_handle_invalid_metric_data",
      "name": "should handle invalid metric data",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should handle invalid metric data",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.659Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___system_health_monitor_test_tsx__should_handle_metric_loading_failures",
      "name": "should handle metric loading failures",
      "filePath": "src/components/ui/__tests__/system-health-monitor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "SystemHealthMonitor - should handle metric loading failures",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.660Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_render_with_default_configuration",
      "name": "should render with default configuration",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should render with default configuration",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.660Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_render_custom_title_when_provided",
      "name": "should render custom title when provided",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should render custom title when provided",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.661Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_render_empty_state_when_no_nodes_provided",
      "name": "should render empty state when no nodes provided",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should render empty state when no nodes provided",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.661Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_render_all_node_types_correctly",
      "name": "should render all node types correctly",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should render all node types correctly",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.662Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_render_node_statuses_correctly",
      "name": "should render node statuses correctly",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should render node statuses correctly",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.662Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_render_loading_state",
      "name": "should render loading state",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should render loading state",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.662Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_workflow_execution_start",
      "name": "should handle workflow execution start",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should handle workflow execution start",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.663Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_automatic_execution_mode",
      "name": "should handle automatic execution mode",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should handle automatic execution mode",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.664Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_node_execution",
      "name": "should handle node execution",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should handle node execution",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.664Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_conditional_execution",
      "name": "should handle conditional execution",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should handle conditional execution",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.665Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_show_execution_progress",
      "name": "should show execution progress",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should show execution progress",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.665Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_node_addition",
      "name": "should handle node addition",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should handle node addition",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.665Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_node_deletion",
      "name": "should handle node deletion",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should handle node deletion",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.666Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_node_configuration",
      "name": "should handle node configuration",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should handle node configuration",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.666Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_node_connections",
      "name": "should handle node connections",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should handle node connections",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.667Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_display_automation_rules",
      "name": "should display automation rules",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should display automation rules",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.667Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_rule_creation",
      "name": "should handle rule creation",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should handle rule creation",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.667Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_rule_execution",
      "name": "should handle rule execution",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should handle rule execution",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.668Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_toggle_rule_status",
      "name": "should toggle rule status",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should toggle rule status",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.668Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_display_workflow_templates",
      "name": "should display workflow templates",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should display workflow templates",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.669Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_apply_template",
      "name": "should apply template",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should apply template",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.669Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_save_workflow_as_template",
      "name": "should save workflow as template",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should save workflow as template",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.669Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_filter_templates_by_category",
      "name": "should filter templates by category",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should filter templates by category",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.670Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_display_workflow_metrics",
      "name": "should display workflow metrics",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should display workflow metrics",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.670Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_show_execution_time_analytics",
      "name": "should show execution time analytics",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should show execution time analytics",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.670Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_identify_bottlenecks",
      "name": "should identify bottlenecks",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should identify bottlenecks",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.671Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_update_metrics_in_real_time",
      "name": "should update metrics in real-time",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should update metrics in real-time",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.671Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_show_active_users",
      "name": "should show active users",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should show active users",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.672Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_comments_and_annotations",
      "name": "should handle comments and annotations",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should handle comments and annotations",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.673Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_show_version_history",
      "name": "should show version history",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should show version history",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.673Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_export_workflow",
      "name": "should export workflow",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should export workflow",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.674Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_integrate_with_external_systems",
      "name": "should integrate with external systems",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should integrate with external systems",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.674Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_webhook_notifications",
      "name": "should handle webhook notifications",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should handle webhook notifications",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.674Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_have_proper_ARIA_attributes",
      "name": "should have proper ARIA attributes",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should have proper ARIA attributes",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.675Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_support_keyboard_navigation",
      "name": "should support keyboard navigation",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should support keyboard navigation",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.675Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_announce_workflow_changes",
      "name": "should announce workflow changes",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should announce workflow changes",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.675Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_invalid_workflow_configuration",
      "name": "should handle invalid workflow configuration",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should handle invalid workflow configuration",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.676Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_execution_errors_gracefully",
      "name": "should handle execution errors gracefully",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should handle execution errors gracefully",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.676Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_recover_from_connection_failures",
      "name": "should recover from connection failures",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should recover from connection failures",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.677Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_virtualize_large_workflows",
      "name": "should virtualize large workflows",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should virtualize large workflows",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.677Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_lazy_load_node_details",
      "name": "should lazy load node details",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should lazy load node details",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.677Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_support_custom_node_components",
      "name": "should support custom node components",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should support custom node components",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.678Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_support_parallel_execution_paths",
      "name": "should support parallel execution paths",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should support parallel execution paths",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.678Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_workflow_scheduling",
      "name": "should handle workflow scheduling",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should handle workflow scheduling",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.679Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___smart_workflow_engine_test_tsx__should_support_workflow_versioning",
      "name": "should support workflow versioning",
      "filePath": "src/components/ui/__tests__/smart-workflow-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SmartWorkflowEngine - should support workflow versioning",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.679Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_render_with_default_props",
      "name": "should render with default props",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should render with default props",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.680Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_render_step_indicator_with_all_steps",
      "name": "should render step indicator with all steps",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should render step indicator with all steps",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.680Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_render_with_custom_title",
      "name": "should render with custom title",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should render with custom title",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.680Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_render_with_custom_subtitle",
      "name": "should render with custom subtitle",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should render with custom subtitle",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.682Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_start_at_specified_initial_step",
      "name": "should start at specified initial step",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should start at specified initial step",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.682Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_navigate_to_next_step_when_valid",
      "name": "should navigate to next step when valid",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should navigate to next step when valid",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.682Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_prevent_next_step_navigation_when_validation_fails",
      "name": "should prevent next step navigation when validation fails",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should prevent next step navigation when validation fails",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.683Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_navigate_to_previous_step",
      "name": "should navigate to previous step",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should navigate to previous step",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.683Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_support_step_indicator_click_navigation",
      "name": "should support step indicator click navigation",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should support step indicator click navigation",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.683Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_prevent_step_indicator_click_when_not_allowed",
      "name": "should prevent step indicator click when not allowed",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should prevent step indicator click when not allowed",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.683Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_handle_data_changes_and_persist_across_steps",
      "name": "should handle data changes and persist across steps",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should handle data changes and persist across steps",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.684Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_initialize_with_provided_initial_data",
      "name": "should initialize with provided initial data",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should initialize with provided initial data",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.684Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_validate_step_data_before_navigation",
      "name": "should validate step data before navigation",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should validate step data before navigation",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.684Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_complete_workflow_when_all_steps_are_valid",
      "name": "should complete workflow when all steps are valid",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should complete workflow when all steps are valid",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.684Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_handle_workflow_cancellation",
      "name": "should handle workflow cancellation",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should handle workflow cancellation",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.685Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_show_progress_indicator",
      "name": "should show progress indicator",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should show progress indicator",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.685Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_update_progress_as_steps_complete",
      "name": "should update progress as steps complete",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should update progress as steps complete",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.685Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_apply_custom_className",
      "name": "should apply custom className",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should apply custom className",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.685Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_show_compact_view_when_enabled",
      "name": "should show compact view when enabled",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should show compact view when enabled",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.686Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_hide_step_descriptions_when_configured",
      "name": "should hide step descriptions when configured",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should hide step descriptions when configured",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.686Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_apply_custom_step_indicator_style",
      "name": "should apply custom step indicator style",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should apply custom step indicator style",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.686Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_have_proper_ARIA_attributes",
      "name": "should have proper ARIA attributes",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should have proper ARIA attributes",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.686Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_support_keyboard_navigation",
      "name": "should support keyboard navigation",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should support keyboard navigation",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.687Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_announce_step_changes_to_screen_readers",
      "name": "should announce step changes to screen readers",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should announce step changes to screen readers",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.687Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_provide_step_indicator_labels",
      "name": "should provide step indicator labels",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should provide step indicator labels",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.687Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_handle_step_component_errors_gracefully",
      "name": "should handle step component errors gracefully",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should handle step component errors gracefully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.687Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_handle_validation_errors_gracefully",
      "name": "should handle validation errors gracefully",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should handle validation errors gracefully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.688Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_validate_prop_requirements",
      "name": "should validate prop requirements",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should validate prop requirements",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.688Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_support_conditional_step_visibility",
      "name": "should support conditional step visibility",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should support conditional step visibility",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.688Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_support_custom_step_validation",
      "name": "should support custom step validation",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should support custom step validation",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.688Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___progressive_workflow_test_tsx__should_support_async_validation",
      "name": "should support async validation",
      "filePath": "src/components/ui/__tests__/progressive-workflow.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressiveWorkflow - should support async validation",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.689Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_render_with_default_props",
      "name": "should render with default props",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should render with default props",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.690Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_render_custom_title_when_provided",
      "name": "should render custom title when provided",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should render custom title when provided",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.690Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_render_empty_state_when_no_insights_provided",
      "name": "should render empty state when no insights provided",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should render empty state when no insights provided",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.691Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_render_insights_with_proper_priority_indicators",
      "name": "should render insights with proper priority indicators",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should render insights with proper priority indicators",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.691Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_render_insights_with_confidence_indicators",
      "name": "should render insights with confidence indicators",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should render insights with confidence indicators",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.691Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_handle_insight_click_events",
      "name": "should handle insight click events",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should handle insight click events",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.691Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_expand_insight_details_on_click",
      "name": "should expand insight details on click",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should expand insight details on click",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.692Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_handle_recommendation_action_buttons",
      "name": "should handle recommendation action buttons",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should handle recommendation action buttons",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.692Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_toggle_insight_favorites",
      "name": "should toggle insight favorites",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should toggle insight favorites",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.692Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_filter_insights_by_category",
      "name": "should filter insights by category",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should filter insights by category",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.692Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_filter_insights_by_priority",
      "name": "should filter insights by priority",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should filter insights by priority",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.692Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_sort_insights_by_impact_score",
      "name": "should sort insights by impact score",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should sort insights by impact score",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.693Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_search_insights_by_text",
      "name": "should search insights by text",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should search insights by text",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.693Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_handle_real_time_insight_updates",
      "name": "should handle real-time insight updates",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should handle real-time insight updates",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.693Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_show_loading_state_during_updates",
      "name": "should show loading state during updates",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should show loading state during updates",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.693Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_auto_refresh_insights_when_enabled",
      "name": "should auto-refresh insights when enabled",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should auto-refresh insights when enabled",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.693Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_display_insight_metrics_correctly",
      "name": "should display insight metrics correctly",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should display insight metrics correctly",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.694Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_show_trend_indicators",
      "name": "should show trend indicators",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should show trend indicators",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.694Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_display_impact_and_likelihood_scores",
      "name": "should display impact and likelihood scores",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should display impact and likelihood scores",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.694Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_format_timeframes_correctly",
      "name": "should format timeframes correctly",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should format timeframes correctly",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.694Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_display_recommendation_lists",
      "name": "should display recommendation lists",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should display recommendation lists",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.694Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_handle_recommendation_acceptance",
      "name": "should handle recommendation acceptance",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should handle recommendation acceptance",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.695Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_handle_recommendation_dismissal",
      "name": "should handle recommendation dismissal",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should handle recommendation dismissal",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.695Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_render_metric_charts_for_insights",
      "name": "should render metric charts for insights",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should render metric charts for insights",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.696Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_display_confidence_visualization",
      "name": "should display confidence visualization",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should display confidence visualization",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.696Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_show_impact_vs_likelihood_scatter_plot",
      "name": "should show impact vs likelihood scatter plot",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should show impact vs likelihood scatter plot",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.697Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_have_proper_ARIA_attributes",
      "name": "should have proper ARIA attributes",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should have proper ARIA attributes",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.697Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_support_keyboard_navigation",
      "name": "should support keyboard navigation",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should support keyboard navigation",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.697Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_announce_insights_to_screen_readers",
      "name": "should announce insights to screen readers",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should announce insights to screen readers",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.697Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_provide_alternative_data_representations",
      "name": "should provide alternative data representations",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should provide alternative data representations",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.698Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_export_insights_as_CSV",
      "name": "should export insights as CSV",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should export insights as CSV",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.698Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_export_insights_as_PDF_report",
      "name": "should export insights as PDF report",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should export insights as PDF report",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.698Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_handle_invalid_insight_data_gracefully",
      "name": "should handle invalid insight data gracefully",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should handle invalid insight data gracefully",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.698Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_handle_missing_metrics_gracefully",
      "name": "should handle missing metrics gracefully",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should handle missing metrics gracefully",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.698Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_display_error_state_for_processing_failures",
      "name": "should display error state for processing failures",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should display error state for processing failures",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.699Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_virtualize_large_insight_lists",
      "name": "should virtualize large insight lists",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should virtualize large insight lists",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.699Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_lazy_load_insight_details",
      "name": "should lazy load insight details",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should lazy load insight details",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.699Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_debounce_search_input",
      "name": "should debounce search input",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should debounce search input",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.699Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_support_insight_comparison_mode",
      "name": "should support insight comparison mode",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should support insight comparison mode",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.699Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_track_insight_history_and_changes",
      "name": "should track insight history and changes",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should track insight history and changes",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.699Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_support_custom_insight_templates",
      "name": "should support custom insight templates",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should support custom insight templates",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.700Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_integrate_with_notification_system",
      "name": "should integrate with notification system",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should integrate with notification system",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.700Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_apply_light_theme_correctly",
      "name": "should apply light theme correctly",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should apply light theme correctly",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.700Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_apply_dark_theme_correctly",
      "name": "should apply dark theme correctly",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should apply dark theme correctly",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.700Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_support_high_contrast_mode",
      "name": "should support high contrast mode",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should support high contrast mode",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.700Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_adapt_to_mobile_viewport",
      "name": "should adapt to mobile viewport",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should adapt to mobile viewport",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.701Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_stack_insights_vertically_on_small_screens",
      "name": "should stack insights vertically on small screens",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should stack insights vertically on small screens",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.701Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___predictive_insights_panel_test_tsx__should_show_horizontal_layout_on_large_screens",
      "name": "should show horizontal layout on large screens",
      "filePath": "src/components/ui/__tests__/predictive-insights-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PredictiveInsightsPanel - should show horizontal layout on large screens",
      "tags": ["async", "mocked", "unit", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.701Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_with_default_props",
      "name": "should render with default props",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should render with default props",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.702Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_custom_title_when_provided",
      "name": "should render custom title when provided",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should render custom title when provided",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.702Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_empty_state_when_no_metrics_provided",
      "name": "should render empty state when no metrics provided",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should render empty state when no metrics provided",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.702Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_metrics_with_proper_status_indicators",
      "name": "should render metrics with proper status indicators",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should render metrics with proper status indicators",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.702Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_metrics_with_trend_indicators",
      "name": "should render metrics with trend indicators",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should render metrics with trend indicators",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.703Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_alerts_when_present",
      "name": "should render alerts when present",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should render alerts when present",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.703Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_metric_click_events",
      "name": "should handle metric click events",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should handle metric click events",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.703Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_expand_metric_details_on_click",
      "name": "should expand metric details on click",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should expand metric details on click",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.703Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_alert_acknowledgment",
      "name": "should handle alert acknowledgment",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should handle alert acknowledgment",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.703Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_toggle_metric_favorites",
      "name": "should toggle metric favorites",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should toggle metric favorites",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.704Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_filter_metrics_by_category",
      "name": "should filter metrics by category",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should filter metrics by category",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.704Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_filter_metrics_by_status",
      "name": "should filter metrics by status",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should filter metrics by status",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.704Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_switch_between_grid_and_list_views",
      "name": "should switch between grid and list views",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should switch between grid and list views",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.704Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_show_metrics_in_compact_mode",
      "name": "should show metrics in compact mode",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should show metrics in compact mode",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.704Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_real_time_metric_updates",
      "name": "should handle real-time metric updates",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should handle real-time metric updates",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.705Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_show_loading_state_during_updates",
      "name": "should show loading state during updates",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should show loading state during updates",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.705Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_auto_refresh_metrics_when_enabled",
      "name": "should auto-refresh metrics when enabled",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should auto-refresh metrics when enabled",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.705Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_pause_and_resume_auto_refresh",
      "name": "should pause and resume auto-refresh",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should pause and resume auto-refresh",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.706Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_time_range_changes",
      "name": "should handle time range changes",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should handle time range changes",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.706Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_display_historical_trend_charts",
      "name": "should display historical trend charts",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should display historical trend charts",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.706Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_compare_metrics_across_time_periods",
      "name": "should compare metrics across time periods",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should compare metrics across time periods",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.706Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_display_threshold_indicators",
      "name": "should display threshold indicators",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should display threshold indicators",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.707Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_threshold_changes",
      "name": "should handle threshold changes",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should handle threshold changes",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.707Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_validate_threshold_ranges",
      "name": "should validate threshold ranges",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should validate threshold ranges",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.707Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_display_active_alerts",
      "name": "should display active alerts",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should display active alerts",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.708Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_alert_acknowledgment",
      "name": "should handle alert acknowledgment",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should handle alert acknowledgment",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.708Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_show_alert_severity_levels",
      "name": "should show alert severity levels",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should show alert severity levels",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.708Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_group_alerts_by_severity",
      "name": "should group alerts by severity",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should group alerts by severity",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.708Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_metric_value_with_proper_formatting",
      "name": "should render metric value with proper formatting",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should render metric value with proper formatting",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.709Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_display_percentage_changes",
      "name": "should display percentage changes",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should display percentage changes",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.709Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_mini_sparkline_charts",
      "name": "should render mini sparkline charts",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should render mini sparkline charts",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.709Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_display_target_vs_actual_comparison",
      "name": "should display target vs actual comparison",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should display target vs actual comparison",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.709Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_metric_progress_bars",
      "name": "should render metric progress bars",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should render metric progress bars",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.710Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_export_metrics_as_CSV",
      "name": "should export metrics as CSV",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should export metrics as CSV",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.710Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_export_metrics_as_PDF",
      "name": "should export metrics as PDF",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should export metrics as PDF",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.710Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_generate_performance_summary_report",
      "name": "should generate performance summary report",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should generate performance summary report",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.711Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_have_proper_ARIA_attributes",
      "name": "should have proper ARIA attributes",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should have proper ARIA attributes",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.711Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_support_keyboard_navigation",
      "name": "should support keyboard navigation",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should support keyboard navigation",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.711Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_announce_updates_to_screen_readers",
      "name": "should announce updates to screen readers",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should announce updates to screen readers",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.712Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_provide_alternative_text_representations",
      "name": "should provide alternative text representations",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should provide alternative text representations",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.712Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_invalid_metric_data_gracefully",
      "name": "should handle invalid metric data gracefully",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should handle invalid metric data gracefully",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.712Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_missing_threshold_data",
      "name": "should handle missing threshold data",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should handle missing threshold data",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.712Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_display_error_state_for_data_processing_failures",
      "name": "should display error state for data processing failures",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should display error state for data processing failures",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.713Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_validate_metric_value_ranges",
      "name": "should validate metric value ranges",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should validate metric value ranges",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.713Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_virtualize_large_metric_lists",
      "name": "should virtualize large metric lists",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should virtualize large metric lists",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.713Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_lazy_load_metric_details",
      "name": "should lazy load metric details",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should lazy load metric details",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.713Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_debounce_threshold_input_changes",
      "name": "should debounce threshold input changes",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should debounce threshold input changes",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.713Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_support_custom_metric_cards",
      "name": "should support custom metric cards",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should support custom metric cards",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.714Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_support_metric_drill_down",
      "name": "should support metric drill-down",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should support metric drill-down",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.714Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_support_metric_grouping_by_category",
      "name": "should support metric grouping by category",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should support metric grouping by category",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.714Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_calculate_performance_scores",
      "name": "should calculate performance scores",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should calculate performance scores",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.714Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_support_metric_annotations",
      "name": "should support metric annotations",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should support metric annotations",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.715Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_apply_light_theme_correctly",
      "name": "should apply light theme correctly",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should apply light theme correctly",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.715Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_apply_dark_theme_correctly",
      "name": "should apply dark theme correctly",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should apply dark theme correctly",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.715Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_support_high_contrast_mode",
      "name": "should support high contrast mode",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should support high contrast mode",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.716Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_support_custom_color_schemes",
      "name": "should support custom color schemes",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should support custom color schemes",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.716Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_adapt_to_mobile_viewport",
      "name": "should adapt to mobile viewport",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should adapt to mobile viewport",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.716Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_stack_metrics_vertically_on_small_screens",
      "name": "should stack metrics vertically on small screens",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should stack metrics vertically on small screens",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.716Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_show_grid_layout_on_large_screens",
      "name": "should show grid layout on large screens",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should show grid layout on large screens",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.716Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_adjust_columns_based_on_screen_size",
      "name": "should adjust columns based on screen size",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should adjust columns based on screen size",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.717Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_integrate_with_external_monitoring_systems",
      "name": "should integrate with external monitoring systems",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should integrate with external monitoring systems",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.717Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_display_metric_collection_timestamps",
      "name": "should display metric collection timestamps",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should display metric collection timestamps",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.717Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_webhook_notifications",
      "name": "should handle webhook notifications",
      "filePath": "src/components/ui/__tests__/performance-metrics-widget.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "PerformanceMetricsWidget - should handle webhook notifications",
      "tags": [
        "async",
        "mocked",
        "integration",
        "unit",
        "responsive",
        "mobile"
      ],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.717Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_render_with_default_props",
      "name": "should render with default props",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should render with default props",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.718Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_render_custom_title",
      "name": "should render custom title",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should render custom title",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.718Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_show_notification_count",
      "name": "should show notification count",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should show notification count",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.719Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_show_unread_notification_count",
      "name": "should show unread notification count",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should show unread notification count",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.719Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_render_empty_state_when_no_notifications",
      "name": "should render empty state when no notifications",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should render empty state when no notifications",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.719Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_render_loading_state",
      "name": "should render loading state",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should render loading state",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.719Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_render_error_state",
      "name": "should render error state",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should render error state",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.720Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_render_all_notification_types",
      "name": "should render all notification types",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should render all notification types",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.720Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_show_notification_priorities",
      "name": "should show notification priorities",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should show notification priorities",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.720Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_show_notification_categories",
      "name": "should show notification categories",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should show notification categories",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.721Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_show_read_unread_status",
      "name": "should show read/unread status",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should show read/unread status",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.721Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_display_timestamps",
      "name": "should display timestamps",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should display timestamps",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.722Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_handle_notification_clicks",
      "name": "should handle notification clicks",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should handle notification clicks",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.722Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_handle_notification_dismissal",
      "name": "should handle notification dismissal",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should handle notification dismissal",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.722Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_handle_notification_actions",
      "name": "should handle notification actions",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should handle notification actions",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.723Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_mark_all_notifications_as_read",
      "name": "should mark all notifications as read",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should mark all notifications as read",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.723Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_clear_all_notifications",
      "name": "should clear all notifications",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should clear all notifications",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.723Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_filter_notifications_by_type",
      "name": "should filter notifications by type",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should filter notifications by type",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.724Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_filter_notifications_by_priority",
      "name": "should filter notifications by priority",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should filter notifications by priority",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.724Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_filter_notifications_by_category",
      "name": "should filter notifications by category",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should filter notifications by category",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.724Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_filter_notifications_by_read_status",
      "name": "should filter notifications by read status",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should filter notifications by read status",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.725Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_sort_notifications_by_timestamp",
      "name": "should sort notifications by timestamp",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should sort notifications by timestamp",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.725Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_group_notifications_by_category",
      "name": "should group notifications by category",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should group notifications by category",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.725Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_group_notifications_by_priority",
      "name": "should group notifications by priority",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should group notifications by priority",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.726Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_group_notifications_by_date",
      "name": "should group notifications by date",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should group notifications by date",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.726Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_collapse_and_expand_groups",
      "name": "should collapse and expand groups",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should collapse and expand groups",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.726Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_search_notifications_by_title",
      "name": "should search notifications by title",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should search notifications by title",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.727Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_search_notifications_by_message_content",
      "name": "should search notifications by message content",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should search notifications by message content",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.727Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_search_notifications_by_tags",
      "name": "should search notifications by tags",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should search notifications by tags",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.727Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_display_notification_rules",
      "name": "should display notification rules",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should display notification rules",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.728Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_create_new_notification_rule",
      "name": "should create new notification rule",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should create new notification rule",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.728Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_toggle_rule_enabled_status",
      "name": "should toggle rule enabled status",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should toggle rule enabled status",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.728Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_display_notification_settings",
      "name": "should display notification settings",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should display notification settings",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.729Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_toggle_global_notifications",
      "name": "should toggle global notifications",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should toggle global notifications",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.729Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_toggle_sound_notifications",
      "name": "should toggle sound notifications",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should toggle sound notifications",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.729Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_configure_do_not_disturb",
      "name": "should configure do not disturb",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should configure do not disturb",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.731Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_configure_notification_channels",
      "name": "should configure notification channels",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should configure notification channels",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.731Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_handle_real_time_notification_updates",
      "name": "should handle real-time notification updates",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should handle real-time notification updates",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.732Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_show_auto_refresh_indicator",
      "name": "should show auto-refresh indicator",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should show auto-refresh indicator",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.732Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_handle_notification_sound",
      "name": "should handle notification sound",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should handle notification sound",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.732Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_have_proper_ARIA_attributes",
      "name": "should have proper ARIA attributes",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should have proper ARIA attributes",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.733Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_support_keyboard_navigation",
      "name": "should support keyboard navigation",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should support keyboard navigation",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.733Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_announce_updates_to_screen_readers",
      "name": "should announce updates to screen readers",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should announce updates to screen readers",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.733Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_provide_notification_count_for_screen_readers",
      "name": "should provide notification count for screen readers",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should provide notification count for screen readers",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.734Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_virtualize_large_notification_lists",
      "name": "should virtualize large notification lists",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should virtualize large notification lists",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.734Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_lazy_load_notification_details",
      "name": "should lazy load notification details",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should lazy load notification details",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.734Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_handle_invalid_notification_data",
      "name": "should handle invalid notification data",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should handle invalid notification data",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.735Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_display_error_state_for_data_loading_failures",
      "name": "should display error state for data loading failures",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should display error state for data loading failures",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.735Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_export_notifications",
      "name": "should export notifications",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should export notifications",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.736Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligent_notification_system_test_tsx__should_show_notification_analytics",
      "name": "should show notification analytics",
      "filePath": "src/components/ui/__tests__/intelligent-notification-system.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntelligentNotificationSystem - should show notification analytics",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.736Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__renders_with_default_props",
      "name": "renders with default props",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - renders with default props",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.736Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__renders_with_custom_header_icon",
      "name": "renders with custom header icon",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - renders with custom header icon",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.737Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__renders_empty_state_when_no_insights_or_recommendations",
      "name": "renders empty state when no insights or recommendations",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - renders empty state when no insights or recommendations",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.737Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__applies_severity_styling_correctly",
      "name": "applies severity styling correctly",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - applies severity styling correctly",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.737Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__is_expanded_by_default",
      "name": "is expanded by default",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - is expanded by default",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.737Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__can_be_collapsed_and_expanded",
      "name": "can be collapsed and expanded",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - can be collapsed and expanded",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.737Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__cannot_be_collapsed_when_collapsible_is_false",
      "name": "cannot be collapsed when collapsible is false",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - cannot be collapsed when collapsible is false",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.737Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__starts_collapsed_when_defaultExpanded_is_false",
      "name": "starts collapsed when defaultExpanded is false",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - starts collapsed when defaultExpanded is false",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.738Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__displays_insights_grouped_by_severity",
      "name": "displays insights grouped by severity",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - displays insights grouped by severity",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.738Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__displays_insight_metrics_correctly",
      "name": "displays insight metrics correctly",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - displays insight metrics correctly",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.738Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__displays_trend_information",
      "name": "displays trend information",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - displays trend information",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.738Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__shows_confidence_when_enabled",
      "name": "shows confidence when enabled",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - shows confidence when enabled",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.738Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__hides_confidence_when_disabled",
      "name": "hides confidence when disabled",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - hides confidence when disabled",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.738Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__calls_onInsightView_when_insight_is_clicked",
      "name": "calls onInsightView when insight is clicked",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - calls onInsightView when insight is clicked",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.738Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__displays_recommendations_sorted_by_priority",
      "name": "displays recommendations sorted by priority",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - displays recommendations sorted by priority",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.738Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__displays_effort_and_impact_indicators",
      "name": "displays effort and impact indicators",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - displays effort and impact indicators",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.739Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__calls_onRecommendationView_when_recommendation_is_clicked",
      "name": "calls onRecommendationView when recommendation is clicked",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - calls onRecommendationView when recommendation is clicked",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.740Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__handles_primary_action_clicks",
      "name": "handles primary action clicks",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - handles primary action clicks",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.740Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__handles_secondary_action_clicks",
      "name": "handles secondary action clicks",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - handles secondary action clicks",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.740Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__handles_external_action_clicks",
      "name": "handles external action clicks",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - handles external action clicks",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.740Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__prevents_event_bubbling_when_action_is_clicked",
      "name": "prevents event bubbling when action is clicked",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - prevents event bubbling when action is clicked",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.740Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__shows_tab_navigation_when_both_insights_and_recommendations_exist",
      "name": "shows tab navigation when both insights and recommendations exist",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - shows tab navigation when both insights and recommendations exist",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.741Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__does_not_show_tabs_when_only_insights_exist",
      "name": "does not show tabs when only insights exist",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - does not show tabs when only insights exist",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.741Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__does_not_show_tabs_when_only_recommendations_exist",
      "name": "does not show tabs when only recommendations exist",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - does not show tabs when only recommendations exist",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.741Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__switches_between_tabs_correctly",
      "name": "switches between tabs correctly",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - switches between tabs correctly",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.741Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__has_proper_ARIA_attributes",
      "name": "has proper ARIA attributes",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - has proper ARIA attributes",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.741Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__supports_keyboard_navigation",
      "name": "supports keyboard navigation",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - supports keyboard navigation",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.741Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__applies_custom_className",
      "name": "applies custom className",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - applies custom className",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.742Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___intelligence_panel_test_tsx__respects_maxHeight_setting",
      "name": "respects maxHeight setting",
      "filePath": "src/components/ui/__tests__/intelligence-panel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "IntelligencePanel - respects maxHeight setting",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.742Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_render_with_default_configuration",
      "name": "should render with default configuration",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should render with default configuration",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.743Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_render_custom_title_when_provided",
      "name": "should render custom title when provided",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should render custom title when provided",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.743Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_render_empty_state_when_no_widgets_provided",
      "name": "should render empty state when no widgets provided",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should render empty state when no widgets provided",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.743Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_render_all_widget_types_correctly",
      "name": "should render all widget types correctly",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should render all widget types correctly",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.744Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_render_widgets_with_proper_sizes",
      "name": "should render widgets with proper sizes",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should render widgets with proper sizes",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.744Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_render_loading_state_for_widgets",
      "name": "should render loading state for widgets",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should render loading state for widgets",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.744Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_widget_addition",
      "name": "should handle widget addition",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should handle widget addition",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.744Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_widget_removal",
      "name": "should handle widget removal",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should handle widget removal",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.745Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_widget_configuration_changes",
      "name": "should handle widget configuration changes",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should handle widget configuration changes",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.745Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_widget_duplication",
      "name": "should handle widget duplication",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should handle widget duplication",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.745Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_drag_and_drop_layout_changes",
      "name": "should handle drag and drop layout changes",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should handle drag and drop layout changes",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.746Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_responsive_layout_breakpoints",
      "name": "should handle responsive layout breakpoints",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should handle responsive layout breakpoints",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.746Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_save_and_restore_layout_preferences",
      "name": "should save and restore layout preferences",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should save and restore layout preferences",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.747Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_reset_layout_to_defaults",
      "name": "should reset layout to defaults",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should reset layout to defaults",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.747Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_auto_refresh_functionality",
      "name": "should handle auto-refresh functionality",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should handle auto-refresh functionality",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.748Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_pause_auto_refresh_when_dashboard_is_inactive",
      "name": "should pause auto-refresh when dashboard is inactive",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should pause auto-refresh when dashboard is inactive",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.748Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_manual_refresh",
      "name": "should handle manual refresh",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should handle manual refresh",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.748Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_widget_specific_refresh",
      "name": "should handle widget-specific refresh",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should handle widget-specific refresh",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.749Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_show_real_time_data_updates",
      "name": "should show real-time data updates",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should show real-time data updates",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.749Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_global_filters",
      "name": "should handle global filters",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should handle global filters",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.749Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_filter_widgets_based_on_search",
      "name": "should filter widgets based on search",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should filter widgets based on search",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.749Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_widget_specific_filters",
      "name": "should handle widget-specific filters",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should handle widget-specific filters",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.750Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_apply_light_theme_correctly",
      "name": "should apply light theme correctly",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should apply light theme correctly",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.750Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_apply_dark_theme_correctly",
      "name": "should apply dark theme correctly",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should apply dark theme correctly",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.750Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_support_high_contrast_mode",
      "name": "should support high contrast mode",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should support high contrast mode",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.751Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_apply_custom_color_schemes",
      "name": "should apply custom color schemes",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should apply custom color schemes",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.751Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_export_dashboard_as_PDF",
      "name": "should export dashboard as PDF",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should export dashboard as PDF",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.751Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_export_dashboard_as_JSON",
      "name": "should export dashboard as JSON",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should export dashboard as JSON",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.751Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_dashboard_sharing",
      "name": "should handle dashboard sharing",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should handle dashboard sharing",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.752Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_generate_dashboard_snapshots",
      "name": "should generate dashboard snapshots",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should generate dashboard snapshots",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.752Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_virtualize_large_widget_lists",
      "name": "should virtualize large widget lists",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should virtualize large widget lists",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.752Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_lazy_load_widget_data",
      "name": "should lazy load widget data",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should lazy load widget data",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.753Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_debounce_layout_changes",
      "name": "should debounce layout changes",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should debounce layout changes",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.753Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_have_proper_ARIA_attributes",
      "name": "should have proper ARIA attributes",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should have proper ARIA attributes",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.754Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_support_keyboard_navigation",
      "name": "should support keyboard navigation",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should support keyboard navigation",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.754Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_announce_updates_to_screen_readers",
      "name": "should announce updates to screen readers",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should announce updates to screen readers",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.754Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_provide_alternative_content_for_screen_readers",
      "name": "should provide alternative content for screen readers",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should provide alternative content for screen readers",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.754Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_widget_error_states_gracefully",
      "name": "should handle widget error states gracefully",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should handle widget error states gracefully",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.755Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_configuration_validation_errors",
      "name": "should handle configuration validation errors",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should handle configuration validation errors",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.755Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_recover_from_data_loading_failures",
      "name": "should recover from data loading failures",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should recover from data loading failures",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.755Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_support_custom_widget_templates",
      "name": "should support custom widget templates",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should support custom widget templates",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.755Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_support_dashboard_templates",
      "name": "should support dashboard templates",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should support dashboard templates",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.756Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_support_dashboard_versioning",
      "name": "should support dashboard versioning",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should support dashboard versioning",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.756Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_support_collaborative_editing",
      "name": "should support collaborative editing",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should support collaborative editing",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.756Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_support_dashboard_permissions",
      "name": "should support dashboard permissions",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should support dashboard permissions",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.757Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_integrate_with_external_data_sources",
      "name": "should integrate with external data sources",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should integrate with external data sources",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.757Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_display_refresh_timestamps",
      "name": "should display refresh timestamps",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should display refresh timestamps",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.757Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_webhook_notifications",
      "name": "should handle webhook notifications",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should handle webhook notifications",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.758Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___dynamic_dashboard_test_tsx__should_support_dashboard_embedding",
      "name": "should support dashboard embedding",
      "filePath": "src/components/ui/__tests__/dynamic-dashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DynamicDashboard - should support dashboard embedding",
      "tags": ["async", "mocked", "integration", "unit", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.758Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_render_with_default_props",
      "name": "should render with default props",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should render with default props",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.759Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_render_different_chart_types_correctly",
      "name": "should render different chart types correctly",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should render different chart types correctly",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.759Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_render_with_custom_title_and_description",
      "name": "should render with custom title and description",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should render with custom title and description",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.759Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_render_chart_controls_when_enabled",
      "name": "should render chart controls when enabled",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should render chart controls when enabled",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.759Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_render_export_controls_when_enabled",
      "name": "should render export controls when enabled",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should render export controls when enabled",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.759Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_data_point_clicks",
      "name": "should handle data point clicks",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should handle data point clicks",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.760Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_zoom_interactions",
      "name": "should handle zoom interactions",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should handle zoom interactions",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.761Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_brush_selection_for_time_range",
      "name": "should handle brush selection for time range",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should handle brush selection for time range",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.761Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_legend_toggle_interactions",
      "name": "should handle legend toggle interactions",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should handle legend toggle interactions",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.762Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_switch_between_chart_types",
      "name": "should switch between chart types",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should switch between chart types",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.762Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_maintain_data_integrity_when_switching_chart_types",
      "name": "should maintain data integrity when switching chart types",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should maintain data integrity when switching chart types",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.762Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_disable_incompatible_chart_types_for_data_structure",
      "name": "should disable incompatible chart types for data structure",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should disable incompatible chart types for data structure",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.763Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_filter_data_by_category",
      "name": "should filter data by category",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should filter data by category",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.763Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_date_range_filtering",
      "name": "should handle date range filtering",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should handle date range filtering",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.763Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_aggregate_data_when_requested",
      "name": "should aggregate data when requested",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should aggregate data when requested",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.763Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_export_chart_as_PNG",
      "name": "should export chart as PNG",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should export chart as PNG",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.764Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_export_data_as_CSV",
      "name": "should export data as CSV",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should export data as CSV",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.764Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_export_data_as_JSON",
      "name": "should export data as JSON",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should export data as JSON",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.764Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_data_updates_gracefully",
      "name": "should handle data updates gracefully",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should handle data updates gracefully",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.765Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_streaming_data_updates",
      "name": "should handle streaming data updates",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should handle streaming data updates",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.765Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_pause_and_resume_real_time_updates",
      "name": "should pause and resume real-time updates",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should pause and resume real-time updates",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.765Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_have_proper_ARIA_attributes",
      "name": "should have proper ARIA attributes",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should have proper ARIA attributes",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.765Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_provide_data_table_alternative",
      "name": "should provide data table alternative",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should provide data table alternative",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.766Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_support_keyboard_navigation_for_interactive_elements",
      "name": "should support keyboard navigation for interactive elements",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should support keyboard navigation for interactive elements",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.766Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_announce_data_changes_to_screen_readers",
      "name": "should announce data changes to screen readers",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should announce data changes to screen readers",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.766Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_support_high_contrast_mode",
      "name": "should support high contrast mode",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should support high contrast mode",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.767Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_virtualize_large_datasets",
      "name": "should virtualize large datasets",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should virtualize large datasets",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.767Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_debounce_user_interactions",
      "name": "should debounce user interactions",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should debounce user interactions",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.767Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_lazy_load_chart_components",
      "name": "should lazy load chart components",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should lazy load chart components",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.768Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_invalid_data_gracefully",
      "name": "should handle invalid data gracefully",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should handle invalid data gracefully",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.769Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_chart_rendering_errors",
      "name": "should handle chart rendering errors",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should handle chart rendering errors",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.769Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_validate_prop_requirements",
      "name": "should validate prop requirements",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should validate prop requirements",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.769Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_support_multiple_datasets",
      "name": "should support multiple datasets",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should support multiple datasets",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.769Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_support_custom_color_schemes",
      "name": "should support custom color schemes",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should support custom color schemes",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.770Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_support_annotations_and_markers",
      "name": "should support annotations and markers",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should support annotations and markers",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.770Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_support_drill_down_interactions",
      "name": "should support drill-down interactions",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should support drill-down interactions",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.770Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_support_comparison_mode",
      "name": "should support comparison mode",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should support comparison mode",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.771Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_adapt_to_container_size_changes",
      "name": "should adapt to container size changes",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should adapt to container size changes",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.771Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_provide_mobile_optimized_view",
      "name": "should provide mobile-optimized view",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should provide mobile-optimized view",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.771Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_apply_light_theme_correctly",
      "name": "should apply light theme correctly",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should apply light theme correctly",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.772Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_apply_dark_theme_correctly",
      "name": "should apply dark theme correctly",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should apply dark theme correctly",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.772Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___data_visualization_engine_test_tsx__should_support_custom_theme_configuration",
      "name": "should support custom theme configuration",
      "filePath": "src/components/ui/__tests__/data-visualization-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DataVisualizationEngine - should support custom theme configuration",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.772Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_render_with_default_props",
      "name": "should render with default props",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should render with default props",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.773Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_render_matrix_grid_with_proper_structure",
      "name": "should render matrix grid with proper structure",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should render matrix grid with proper structure",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.773Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_display_compatibility_scores_in_cells",
      "name": "should display compatibility scores in cells",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should display compatibility scores in cells",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.774Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_render_with_custom_title",
      "name": "should render with custom title",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should render with custom title",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.774Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_render_empty_state_when_no_items_provided",
      "name": "should render empty state when no items provided",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should render empty state when no items provided",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.774Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_handle_cell_click_events",
      "name": "should handle cell click events",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should handle cell click events",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.774Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_show_hover_tooltips_when_enabled",
      "name": "should show hover tooltips when enabled",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should show hover tooltips when enabled",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.775Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_support_keyboard_navigation",
      "name": "should support keyboard navigation",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should support keyboard navigation",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.775Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_handle_Enter_key_for_cell_selection",
      "name": "should handle Enter key for cell selection",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should handle Enter key for cell selection",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.775Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_apply_custom_color_scheme",
      "name": "should apply custom color scheme",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should apply custom color scheme",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.776Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_show_compact_view_when_enabled",
      "name": "should show compact view when enabled",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should show compact view when enabled",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.776Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_hide_scores_when_showScores_is_false",
      "name": "should hide scores when showScores is false",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should hide scores when showScores is false",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.776Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_use_custom_cell_renderer_when_provided",
      "name": "should use custom cell renderer when provided",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should use custom cell renderer when provided",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.776Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_filter_rows_based_on_search_term",
      "name": "should filter rows based on search term",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should filter rows based on search term",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.777Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_sort_rows_by_compatibility_score",
      "name": "should sort rows by compatibility score",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should sort rows by compatibility score",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.777Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_filter_by_minimum_compatibility_threshold",
      "name": "should filter by minimum compatibility threshold",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should filter by minimum compatibility threshold",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.778Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_support_CSV_export",
      "name": "should support CSV export",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should support CSV export",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.779Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_support_JSON_export",
      "name": "should support JSON export",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should support JSON export",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.779Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_have_proper_ARIA_attributes",
      "name": "should have proper ARIA attributes",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should have proper ARIA attributes",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.779Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_support_screen_reader_descriptions",
      "name": "should support screen reader descriptions",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should support screen reader descriptions",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.779Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_provide_cell_descriptions_for_screen_readers",
      "name": "should provide cell descriptions for screen readers",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should provide cell descriptions for screen readers",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.780Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_support_high_contrast_mode",
      "name": "should support high contrast mode",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should support high contrast mode",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.780Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_handle_large_datasets_efficiently",
      "name": "should handle large datasets efficiently",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should handle large datasets efficiently",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.780Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_use_virtualization_for_large_matrices",
      "name": "should use virtualization for large matrices",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should use virtualization for large matrices",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.780Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_handle_scorer_function_errors_gracefully",
      "name": "should handle scorer function errors gracefully",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should handle scorer function errors gracefully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.781Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___compatibility_matrix_test_tsx__should_validate_prop_types_and_show_warnings",
      "name": "should validate prop types and show warnings",
      "filePath": "src/components/ui/__tests__/compatibility-matrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CompatibilityMatrix - should validate prop types and show warnings",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.781Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_render_with_default_props",
      "name": "should render with default props",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should render with default props",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.782Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_render_custom_title",
      "name": "should render custom title",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should render custom title",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.782Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_data_points_summary",
      "name": "should display data points summary",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should display data points summary",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.782Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_render_loading_state",
      "name": "should render loading state",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should render loading state",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.782Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_render_error_state",
      "name": "should render error state",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should render error state",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.783Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_render_empty_state_when_no_data",
      "name": "should render empty state when no data",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should render empty state when no data",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.783Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_all_charts",
      "name": "should display all charts",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should display all charts",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.783Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_show_chart_types",
      "name": "should show chart types",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should show chart types",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.783Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_handle_chart_clicks",
      "name": "should handle chart clicks",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should handle chart clicks",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.784Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_chart_titles",
      "name": "should display chart titles",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should display chart titles",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.784Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_show_chart_data_point_counts",
      "name": "should show chart data point counts",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should show chart data point counts",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.784Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_support_chart_zoom",
      "name": "should support chart zoom",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should support chart zoom",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.784Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_handle_chart_drill_down",
      "name": "should handle chart drill down",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should handle chart drill down",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.785Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_all_insights",
      "name": "should display all insights",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should display all insights",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.785Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_show_insight_types_and_severity",
      "name": "should show insight types and severity",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should show insight types and severity",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.785Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_insight_confidence_levels",
      "name": "should display insight confidence levels",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should display insight confidence levels",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.786Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_handle_insight_clicks",
      "name": "should handle insight clicks",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should handle insight clicks",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.786Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_show_insight_recommendations",
      "name": "should show insight recommendations",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should show insight recommendations",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.786Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_filter_insights_by_severity",
      "name": "should filter insights by severity",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should filter insights by severity",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.787Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_time_range_selector",
      "name": "should display time range selector",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should display time range selector",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.787Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_handle_time_range_changes",
      "name": "should handle time range changes",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should handle time range changes",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.787Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_custom_time_range_picker",
      "name": "should display custom time range picker",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should display custom time range picker",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.787Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_show_real_time_indicator",
      "name": "should show real-time indicator",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should show real-time indicator",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.787Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_filter_controls",
      "name": "should display filter controls",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should display filter controls",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.788Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_apply_metric_filters",
      "name": "should apply metric filters",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should apply metric filters",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.788Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_apply_category_filters",
      "name": "should apply category filters",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should apply category filters",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.788Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_support_text_search",
      "name": "should support text search",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should support text search",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.789Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_clear_all_filters",
      "name": "should clear all filters",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should clear all filters",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.789Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_reports_section",
      "name": "should display reports section",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should display reports section",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.789Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_generate_new_report",
      "name": "should generate new report",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should generate new report",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.789Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_schedule_reports",
      "name": "should schedule reports",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should schedule reports",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.789Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_report_metadata",
      "name": "should display report metadata",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should display report metadata",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.790Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_export_charts_as_images",
      "name": "should export charts as images",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should export charts as images",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.790Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_export_data_as_CSV",
      "name": "should export data as CSV",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should export data as CSV",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.790Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_export_reports_as_PDF",
      "name": "should export reports as PDF",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should export reports as PDF",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.791Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_share_analytics_dashboard",
      "name": "should share analytics dashboard",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should share analytics dashboard",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.791Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_configuration_panel",
      "name": "should display configuration panel",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should display configuration panel",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.791Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_toggle_real_time_updates",
      "name": "should toggle real-time updates",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should toggle real-time updates",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.791Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_configure_refresh_interval",
      "name": "should configure refresh interval",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should configure refresh interval",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.793Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_configure_data_thresholds",
      "name": "should configure data thresholds",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should configure data thresholds",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.793Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_show_auto_refresh_indicator",
      "name": "should show auto-refresh indicator",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should show auto-refresh indicator",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.793Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_handle_manual_refresh",
      "name": "should handle manual refresh",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should handle manual refresh",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.793Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_update_data_in_real_time",
      "name": "should update data in real-time",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should update data in real-time",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.794Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_virtualize_large_datasets",
      "name": "should virtualize large datasets",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should virtualize large datasets",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.794Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_lazy_load_chart_details",
      "name": "should lazy load chart details",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should lazy load chart details",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.794Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_cache_analytics_results",
      "name": "should cache analytics results",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should cache analytics results",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.794Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_have_proper_ARIA_attributes",
      "name": "should have proper ARIA attributes",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should have proper ARIA attributes",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.795Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_support_keyboard_navigation",
      "name": "should support keyboard navigation",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should support keyboard navigation",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.795Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_announce_updates_to_screen_readers",
      "name": "should announce updates to screen readers",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should announce updates to screen readers",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.795Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_provide_chart_data_in_accessible_format",
      "name": "should provide chart data in accessible format",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should provide chart data in accessible format",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.795Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_handle_invalid_data_points",
      "name": "should handle invalid data points",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should handle invalid data points",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.795Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_handle_chart_rendering_errors",
      "name": "should handle chart rendering errors",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should handle chart rendering errors",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.796Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_handle_API_failures_gracefully",
      "name": "should handle API failures gracefully",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should handle API failures gracefully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.796Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_recover_from_network_errors",
      "name": "should recover from network errors",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should recover from network errors",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.796Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_support_custom_chart_renderers",
      "name": "should support custom chart renderers",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should support custom chart renderers",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.796Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_support_drill_down_analytics",
      "name": "should support drill-down analytics",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should support drill-down analytics",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.797Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_support_predictive_analytics",
      "name": "should support predictive analytics",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should support predictive analytics",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.797Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_support_anomaly_detection",
      "name": "should support anomaly detection",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should support anomaly detection",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.797Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_support_correlation_analysis",
      "name": "should support correlation analysis",
      "filePath": "src/components/ui/__tests__/advanced-analytics-engine.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "AdvancedAnalyticsEngine - should support correlation analysis",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.797Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_render_with_default_props",
      "name": "should render with default props",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should render with default props",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.798Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_render_custom_title",
      "name": "should render custom title",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should render custom title",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.798Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_show_empty_state_when_no_resources",
      "name": "should show empty state when no resources",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should show empty state when no resources",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.799Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_display_resource_metrics",
      "name": "should display resource metrics",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should display resource metrics",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.799Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_render_all_resource_types",
      "name": "should render all resource types",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should render all resource types",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.800Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_show_resource_statuses",
      "name": "should show resource statuses",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should show resource statuses",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.800Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_render_loading_state",
      "name": "should render loading state",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should render loading state",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.800Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_optimization_trigger",
      "name": "should handle optimization trigger",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should handle optimization trigger",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.800Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_show_optimization_strategies",
      "name": "should show optimization strategies",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should show optimization strategies",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.801Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_resource_scaling",
      "name": "should handle resource scaling",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should handle resource scaling",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.801Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_display_optimization_recommendations",
      "name": "should display optimization recommendations",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should display optimization recommendations",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.801Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_auto_optimization_toggle",
      "name": "should handle auto-optimization toggle",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should handle auto-optimization toggle",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.801Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_filter_resources_by_type",
      "name": "should filter resources by type",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should filter resources by type",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.801Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_filter_resources_by_status",
      "name": "should filter resources by status",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should filter resources by status",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.801Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_show_resource_details_on_expand",
      "name": "should show resource details on expand",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should show resource details on expand",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.802Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_resource_tagging",
      "name": "should handle resource tagging",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should handle resource tagging",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.802Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_display_efficiency_analytics",
      "name": "should display efficiency analytics",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should display efficiency analytics",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.802Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_show_cost_analysis",
      "name": "should show cost analysis",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should show cost analysis",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.802Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_export_optimization_report",
      "name": "should export optimization report",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should export optimization report",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.802Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_display_historical_trends",
      "name": "should display historical trends",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should display historical trends",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.803Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_display_optimization_rules",
      "name": "should display optimization rules",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should display optimization rules",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.803Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_rule_toggle",
      "name": "should handle rule toggle",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should handle rule toggle",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.803Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_create_new_optimization_rule",
      "name": "should create new optimization rule",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should create new optimization rule",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.803Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_real_time_resource_updates",
      "name": "should handle real-time resource updates",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should handle real-time resource updates",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.803Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_show_auto_refresh_indicator",
      "name": "should show auto-refresh indicator",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should show auto-refresh indicator",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.804Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_optimization_in_progress",
      "name": "should handle optimization in progress",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should handle optimization in progress",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.804Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_invalid_resource_data",
      "name": "should handle invalid resource data",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should handle invalid resource data",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.804Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_display_optimization_errors",
      "name": "should display optimization errors",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should display optimization errors",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.804Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_have_proper_ARIA_attributes",
      "name": "should have proper ARIA attributes",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should have proper ARIA attributes",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.804Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_support_keyboard_navigation",
      "name": "should support keyboard navigation",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should support keyboard navigation",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.805Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_announce_optimization_updates",
      "name": "should announce optimization updates",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should announce optimization updates",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.805Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_support_custom_optimization_templates",
      "name": "should support custom optimization templates",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should support custom optimization templates",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.805Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_resource_predictions",
      "name": "should handle resource predictions",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should handle resource predictions",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.805Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_support_batch_operations",
      "name": "should support batch operations",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should support batch operations",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.805Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_display_optimization_history",
      "name": "should display optimization history",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should display optimization history",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.806Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_support_resource_scheduling",
      "name": "should support resource scheduling",
      "filePath": "src/components/ui/__tests__/adaptive-resource-optimizer.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AdaptiveResourceOptimizer - should support resource scheduling",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.806Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui___tests___Input_test_tsx__renders_input_with_default_props",
      "name": "renders input with default props",
      "filePath": "src/components/ui/__tests__/Input.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Input - renders input with default props",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.806Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Input_test_tsx__renders_input_with_different_types",
      "name": "renders input with different types",
      "filePath": "src/components/ui/__tests__/Input.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Input - renders input with different types",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.806Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Input_test_tsx__applies_disabled_state",
      "name": "applies disabled state",
      "filePath": "src/components/ui/__tests__/Input.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Input - applies disabled state",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.806Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Input_test_tsx__forwards_ref_correctly",
      "name": "forwards ref correctly",
      "filePath": "src/components/ui/__tests__/Input.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Input - forwards ref correctly",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.806Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Input_test_tsx__handles_value_changes",
      "name": "handles value changes",
      "filePath": "src/components/ui/__tests__/Input.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Input - handles value changes",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.806Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Input_test_tsx__applies_custom_className",
      "name": "applies custom className",
      "filePath": "src/components/ui/__tests__/Input.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Input - applies custom className",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.806Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Input_test_tsx__renders_with_aria_attributes",
      "name": "renders with aria attributes",
      "filePath": "src/components/ui/__tests__/Input.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Input - renders with aria attributes",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.806Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Card_test_tsx__renders_card_with_basic_content",
      "name": "renders card with basic content",
      "filePath": "src/components/ui/__tests__/Card.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Card - renders card with basic content",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.807Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Card_test_tsx__renders_card_with_header",
      "name": "renders card with header",
      "filePath": "src/components/ui/__tests__/Card.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Card - renders card with header",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.807Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Card_test_tsx__renders_card_with_footer",
      "name": "renders card with footer",
      "filePath": "src/components/ui/__tests__/Card.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Card - renders card with footer",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.807Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Card_test_tsx__renders_complete_card_structure",
      "name": "renders complete card structure",
      "filePath": "src/components/ui/__tests__/Card.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Card - renders complete card structure",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.807Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Card_test_tsx__applies_custom_className",
      "name": "applies custom className",
      "filePath": "src/components/ui/__tests__/Card.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Card - applies custom className",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.807Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Button_test_tsx__renders_button_with_default_variant",
      "name": "renders button with default variant",
      "filePath": "src/components/ui/__tests__/Button.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Button - renders button with default variant",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.807Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Button_test_tsx__renders_button_with_different_variants",
      "name": "renders button with different variants",
      "filePath": "src/components/ui/__tests__/Button.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Button - renders button with different variants",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.807Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Button_test_tsx__renders_button_with_different_sizes",
      "name": "renders button with different sizes",
      "filePath": "src/components/ui/__tests__/Button.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Button - renders button with different sizes",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.807Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Button_test_tsx__applies_disabled_state",
      "name": "applies disabled state",
      "filePath": "src/components/ui/__tests__/Button.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Button - applies disabled state",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.807Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Button_test_tsx__renders_as_a_link_when_asChild_is_true",
      "name": "renders as a link when asChild is true",
      "filePath": "src/components/ui/__tests__/Button.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Button - renders as a link when asChild is true",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.807Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui___tests___Button_test_tsx__forwards_ref_correctly",
      "name": "forwards ref correctly",
      "filePath": "src/components/ui/__tests__/Button.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Button - forwards ref correctly",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.807Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_display_skills_column_header",
      "name": "should display skills column header",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should display skills column header",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.808Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_display_skill_names_for_teams_with_valid_skills",
      "name": "should display skill names for teams with valid skills",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should display skill names for teams with valid skills",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.809Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_display_first_3_skills_with_overflow_indicator",
      "name": "should display first 3 skills with overflow indicator",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should display first 3 skills with overflow indicator",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.810Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_display_",
      "name": "should display ",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should display ",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.810Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_handle_teams_with_invalid_skill_references_gracefully",
      "name": "should handle teams with invalid skill references gracefully",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should handle teams with invalid skill references gracefully",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.810Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_display_skills_with_proper_badge_styling",
      "name": "should display skills with proper badge styling",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should display skills with proper badge styling",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.810Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_handle_empty_skills_array_gracefully",
      "name": "should handle empty skills array gracefully",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should handle empty skills array gracefully",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.811Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_handle_null_undefined_skills_gracefully",
      "name": "should handle null/undefined skills gracefully",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should handle null/undefined skills gracefully",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.811Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_handle_teams_with_null_targetSkills",
      "name": "should handle teams with null targetSkills",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should handle teams with null targetSkills",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.811Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_handle_teams_with_undefined_targetSkills",
      "name": "should handle teams with undefined targetSkills",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should handle teams with undefined targetSkills",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.812Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_maintain_correct_column_count_with_skills_column",
      "name": "should maintain correct column count with skills column",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should maintain correct column count with skills column",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.812Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_handle_team_editing_interaction",
      "name": "should handle team editing interaction",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should handle team editing interaction",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.812Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_handle_team_selection_with_skills_display",
      "name": "should handle team selection with skills display",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should handle team selection with skills display",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.812Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_efficiently_render_large_numbers_of_teams_with_skills",
      "name": "should efficiently render large numbers of teams with skills",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should efficiently render large numbers of teams with skills",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.812Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_handle_teams_with_many_skills_efficiently",
      "name": "should handle teams with many skills efficiently",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should handle teams with many skills efficiently",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.813Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_have_proper_ARIA_labels_for_team_selection",
      "name": "should have proper ARIA labels for team selection",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should have proper ARIA labels for team selection",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.813Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_maintain_table_accessibility_with_skills_column",
      "name": "should maintain table accessibility with skills column",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should maintain table accessibility with skills column",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.813Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_have_proper_semantic_markup_for_skills_badges",
      "name": "should have proper semantic markup for skills badges",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should have proper semantic markup for skills badges",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.814Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_update_skills_display_when_team_data_changes",
      "name": "should update skills display when team data changes",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should update skills display when team data changes",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.814Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_handle_skill_data_updates_correctly",
      "name": "should handle skill data updates correctly",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should handle skill data updates correctly",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.814Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_display_Contract_Perm___column_instead_of_Capacity",
      "name": "should display Contract/Perm % column instead of Capacity",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should display Contract/Perm % column instead of Capacity",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.814Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_display_SE_QE_Roles___column_instead_of_Utilization",
      "name": "should display SE/QE Roles % column instead of Utilization",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should display SE/QE Roles % column instead of Utilization",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.815Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_calculate_permanent_vs_contractor_percentages_correctly",
      "name": "should calculate permanent vs contractor percentages correctly",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should calculate permanent vs contractor percentages correctly",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.815Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_calculate_SE_vs_QE_role_percentages_correctly",
      "name": "should calculate SE vs QE role percentages correctly",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should calculate SE vs QE role percentages correctly",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.815Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_display_role_composition_with_visual_indicators",
      "name": "should display role composition with visual indicators",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should display role composition with visual indicators",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.815Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_not_display_",
      "name": "should not display ",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should not display ",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.816Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_handle_teams_with_no_members_gracefully",
      "name": "should handle teams with no members gracefully",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should handle teams with no members gracefully",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.816Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_handle_edge_case_with_only_contractors",
      "name": "should handle edge case with only contractors",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should handle edge case with only contractors",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.816Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamTable_test_tsx__should_handle_edge_case_with_only_permanent_employees",
      "name": "should handle edge case with only permanent employees",
      "filePath": "src/components/teams/__tests__/TeamTable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "TeamTable Skills Display - should handle edge case with only permanent employees",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.816Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__renders_without_crashing",
      "name": "renders without crashing",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - renders without crashing",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.817Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__renders_edit_mode_when_team_is_provided",
      "name": "renders edit mode when team is provided",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - renders edit mode when team is provided",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.818Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__displays_team_form_fields",
      "name": "displays team form fields",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - displays team form fields",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.818Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__populates_form_fields_when_editing_existing_team",
      "name": "populates form fields when editing existing team",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - populates form fields when editing existing team",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.819Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__handles_team_name_change",
      "name": "handles team name change",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - handles team name change",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.819Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__handles_description_change",
      "name": "handles description change",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - handles description change",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.819Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__handles_capacity_change",
      "name": "handles capacity change",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - handles capacity change",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.820Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__displays_team_tabs_correctly",
      "name": "displays team tabs correctly",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - displays team tabs correctly",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.820Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__handles_skills_tab_functionality",
      "name": "handles skills tab functionality",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - handles skills tab functionality",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.820Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__handles_timeline_tab_functionality",
      "name": "handles timeline tab functionality",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - handles timeline tab functionality",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.821Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__handles_members_tab_functionality",
      "name": "handles members tab functionality",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - handles members tab functionality",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.821Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__validates_required_fields",
      "name": "validates required fields",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - validates required fields",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.821Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__validates_capacity_value",
      "name": "validates capacity value",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - validates capacity value",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.822Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__creates_new_team_successfully",
      "name": "creates new team successfully",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - creates new team successfully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.822Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__updates_existing_team_successfully",
      "name": "updates existing team successfully",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - updates existing team successfully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.822Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__handles_cancel_action",
      "name": "handles cancel action",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - handles cancel action",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.823Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__shows_team_member_management_section",
      "name": "shows team member management section",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - shows team member management section",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.823Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__allows_switching_between_tabs",
      "name": "allows switching between tabs",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - allows switching between tabs",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.823Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__handles_team_type_selection",
      "name": "handles team type selection",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - handles team type selection",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.823Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamDialog_test_tsx__handles_team_status_selection",
      "name": "handles team status selection",
      "filePath": "src/components/teams/__tests__/TeamDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamDialog - handles team status selection",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.824Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_display_skills_section_with_proper_label",
      "name": "should display skills section with proper label",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should display skills section with proper label",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.825Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_display_skills_with_Target_icon",
      "name": "should display skills with Target icon",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should display skills with Target icon",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.825Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_display_skill_names_for_teams_with_valid_skills",
      "name": "should display skill names for teams with valid skills",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should display skill names for teams with valid skills",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.825Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_display_up_to_4_skills_without_overflow_indicator",
      "name": "should display up to 4 skills without overflow indicator",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should display up to 4 skills without overflow indicator",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.825Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_display_overflow_indicator_for_teams_with_more_than_4_skills",
      "name": "should display overflow indicator for teams with more than 4 skills",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should display overflow indicator for teams with more than 4 skills",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.826Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_display_",
      "name": "should display ",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should display ",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.826Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_handle_teams_with_invalid_skill_references_gracefully",
      "name": "should handle teams with invalid skill references gracefully",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should handle teams with invalid skill references gracefully",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.826Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_display_skills_with_proper_badge_styling",
      "name": "should display skills with proper badge styling",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should display skills with proper badge styling",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.826Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_display_skills_section_in_correct_position_within_card",
      "name": "should display skills section in correct position within card",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should display skills section in correct position within card",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.827Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_maintain_card_responsive_layout_with_skills_section",
      "name": "should maintain card responsive layout with skills section",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should maintain card responsive layout with skills section",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.827Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_handle_card_interactions_with_skills_display",
      "name": "should handle card interactions with skills display",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should handle card interactions with skills display",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.828Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_handle_empty_skills_array_gracefully",
      "name": "should handle empty skills array gracefully",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should handle empty skills array gracefully",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.828Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_handle_null_undefined_skills_gracefully",
      "name": "should handle null/undefined skills gracefully",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should handle null/undefined skills gracefully",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.828Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_handle_teams_with_null_targetSkills",
      "name": "should handle teams with null targetSkills",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should handle teams with null targetSkills",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.828Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_handle_teams_with_undefined_targetSkills",
      "name": "should handle teams with undefined targetSkills",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should handle teams with undefined targetSkills",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.828Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_handle_empty_teams_array",
      "name": "should handle empty teams array",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should handle empty teams array",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.829Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_show_exactly_4_skills_without_overflow_indicator",
      "name": "should show exactly 4 skills without overflow indicator",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should show exactly 4 skills without overflow indicator",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.829Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_show_correct_overflow_count_for_teams_with_more_than_4_skills",
      "name": "should show correct overflow count for teams with more than 4 skills",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should show correct overflow count for teams with more than 4 skills",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.829Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_handle_large_numbers_of_skills_correctly",
      "name": "should handle large numbers of skills correctly",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should handle large numbers of skills correctly",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.829Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_efficiently_render_many_teams_with_skills",
      "name": "should efficiently render many teams with skills",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should efficiently render many teams with skills",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.830Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_handle_skill_lookup_efficiently",
      "name": "should handle skill lookup efficiently",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should handle skill lookup efficiently",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.830Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_have_proper_ARIA_labels_for_team_selection",
      "name": "should have proper ARIA labels for team selection",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should have proper ARIA labels for team selection",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.830Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_maintain_card_accessibility_with_skills_section",
      "name": "should maintain card accessibility with skills section",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should maintain card accessibility with skills section",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.830Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_have_semantic_markup_for_skills_with_icons",
      "name": "should have semantic markup for skills with icons",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should have semantic markup for skills with icons",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.830Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_update_skills_display_when_team_data_changes",
      "name": "should update skills display when team data changes",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should update skills display when team data changes",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.831Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_handle_skill_data_updates_correctly",
      "name": "should handle skill data updates correctly",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should handle skill data updates correctly",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.831Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamCards_test_tsx__should_maintain_team_selection_state_during_skills_updates",
      "name": "should maintain team selection state during skills updates",
      "filePath": "src/components/teams/__tests__/TeamCards.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCards Skills Display - should maintain team selection state during skills updates",
      "tags": ["async", "mocked", "integration", "responsive"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.831Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_render_without_crashing",
      "name": "should render without crashing",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should render without crashing",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.832Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_display_teams_in_the_left_panel",
      "name": "should display teams in the left panel",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should display teams in the left panel",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.832Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_display_unassigned_people_in_the_right_panel",
      "name": "should display unassigned people in the right panel",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should display unassigned people in the right panel",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.832Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_show_team_details_when_a_team_is_selected",
      "name": "should show team details when a team is selected",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should show team details when a team is selected",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.833Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_display_team_members_when_team_is_selected",
      "name": "should display team members when team is selected",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should display team members when team is selected",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.833Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_remove_person_with_TeamMember_record__existing_functionality_",
      "name": "should remove person with TeamMember record (existing functionality)",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should remove person with TeamMember record (existing functionality)",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.833Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_remove_person_without_TeamMember_record__bug_fix_for_temp_IDs_",
      "name": "should remove person without TeamMember record (bug fix for temp IDs)",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should remove person without TeamMember record (bug fix for temp IDs)",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.833Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_display_role_title_for_unassigned_people",
      "name": "should display role title for unassigned people",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should display role title for unassigned people",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.834Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_display_employment_type_for_unassigned_people",
      "name": "should display employment type for unassigned people",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should display employment type for unassigned people",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.834Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_display_role_type_for_unassigned_people",
      "name": "should display role type for unassigned people",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should display role type for unassigned people",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.834Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_display_division_for_unassigned_people",
      "name": "should display division for unassigned people",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should display division for unassigned people",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.834Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_display_enhanced_details_for_team_members",
      "name": "should display enhanced details for team members",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should display enhanced details for team members",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.835Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_display_perm_contractor_ratio",
      "name": "should display perm/contractor ratio",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should display perm/contractor ratio",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.835Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_display_role_type_split",
      "name": "should display role type split",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should display role type split",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.835Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_display_total_cost_per_financial_year",
      "name": "should display total cost per financial year",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should display total cost per financial year",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.835Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_allow_selecting_unassigned_people",
      "name": "should allow selecting unassigned people",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should allow selecting unassigned people",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.836Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_assign_selected_people_to_team",
      "name": "should assign selected people to team",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should assign selected people to team",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.837Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_filter_people_by_search_term",
      "name": "should filter people by search term",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should filter people by search term",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.837Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_show_assigned_people_when_toggle_is_enabled",
      "name": "should show assigned people when toggle is enabled",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should show assigned people when toggle is enabled",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.837Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_open_create_team_dialog",
      "name": "should open create team dialog",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should open create team dialog",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.838Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_teams___tests___TeamBuilder_test_tsx__should_create_new_team_with_provided_data",
      "name": "should create new team with provided data",
      "filePath": "src/components/teams/__tests__/TeamBuilder.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamBuilder - should create new team with provided data",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.838Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_render_the_initial_step_with_file_upload_options",
      "name": "should render the initial step with file upload options",
      "filePath": "src/components/settings/__tests__/PowerBiImportWizard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBiImportWizard - should render the initial step with file upload options",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.838Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_show_validation_errors_for_missing_files",
      "name": "should show validation errors for missing files",
      "filePath": "src/components/settings/__tests__/PowerBiImportWizard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBiImportWizard - should show validation errors for missing files",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.838Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_enable_next_button_when_files_are_uploaded_and_cycle_is_selected",
      "name": "should enable next button when files are uploaded and cycle is selected",
      "filePath": "src/components/settings/__tests__/PowerBiImportWizard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBiImportWizard - should enable next button when files are uploaded and cycle is selected",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.838Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_show_step_indicators",
      "name": "should show step indicators",
      "filePath": "src/components/settings/__tests__/PowerBiImportWizard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBiImportWizard - should show step indicators",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.839Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_allow_closing_the_wizard",
      "name": "should allow closing the wizard",
      "filePath": "src/components/settings/__tests__/PowerBiImportWizard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBiImportWizard - should allow closing the wizard",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.839Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_show_progress_through_steps",
      "name": "should show progress through steps",
      "filePath": "src/components/settings/__tests__/PowerBiImportWizard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBiImportWizard - should show progress through steps",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.839Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_show_separate_financial_year_and_quarter_dropdowns",
      "name": "should show separate financial year and quarter dropdowns",
      "filePath": "src/components/settings/__tests__/PowerBiImportWizard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBiImportWizard - should show separate financial year and quarter dropdowns",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.839Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_show_helpful_text_for_quarter_selection",
      "name": "should show helpful text for quarter selection",
      "filePath": "src/components/settings/__tests__/PowerBiImportWizard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBiImportWizard - should show helpful text for quarter selection",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.839Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_show_validation_error_when_quarter_selection_is_cleared",
      "name": "should show validation error when quarter selection is cleared",
      "filePath": "src/components/settings/__tests__/PowerBiImportWizard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBiImportWizard - should show validation error when quarter selection is cleared",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.839Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___IntegrationsSettings_test_tsx__should_display_O365_integration_section",
      "name": "should display O365 integration section",
      "filePath": "src/components/settings/__tests__/IntegrationsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntegrationsSettings - should display O365 integration section",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.839Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___IntegrationsSettings_test_tsx__should_show_current_O365_configuration_values",
      "name": "should show current O365 configuration values",
      "filePath": "src/components/settings/__tests__/IntegrationsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntegrationsSettings - should show current O365 configuration values",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.840Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___IntegrationsSettings_test_tsx__should_show_O365_integration_as_enabled",
      "name": "should show O365 integration as enabled",
      "filePath": "src/components/settings/__tests__/IntegrationsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntegrationsSettings - should show O365 integration as enabled",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.840Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___IntegrationsSettings_test_tsx__should_show_empty_form_fields",
      "name": "should show empty form fields",
      "filePath": "src/components/settings/__tests__/IntegrationsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntegrationsSettings - should show empty form fields",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.840Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___IntegrationsSettings_test_tsx__should_show_O365_integration_as_disabled",
      "name": "should show O365 integration as disabled",
      "filePath": "src/components/settings/__tests__/IntegrationsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntegrationsSettings - should show O365 integration as disabled",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.840Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___IntegrationsSettings_test_tsx__should_update_client_ID_field",
      "name": "should update client ID field",
      "filePath": "src/components/settings/__tests__/IntegrationsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntegrationsSettings - should update client ID field",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.840Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___IntegrationsSettings_test_tsx__should_update_tenant_ID_field",
      "name": "should update tenant ID field",
      "filePath": "src/components/settings/__tests__/IntegrationsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntegrationsSettings - should update tenant ID field",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.840Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___IntegrationsSettings_test_tsx__should_update_redirect_URI_field",
      "name": "should update redirect URI field",
      "filePath": "src/components/settings/__tests__/IntegrationsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntegrationsSettings - should update redirect URI field",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.840Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___IntegrationsSettings_test_tsx__should_toggle_enabled_state",
      "name": "should toggle enabled state",
      "filePath": "src/components/settings/__tests__/IntegrationsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntegrationsSettings - should toggle enabled state",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.841Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___IntegrationsSettings_test_tsx__should_save_configuration_with_valid_data",
      "name": "should save configuration with valid data",
      "filePath": "src/components/settings/__tests__/IntegrationsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntegrationsSettings - should save configuration with valid data",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.841Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___IntegrationsSettings_test_tsx__should_show_error_when_client_ID_is_missing",
      "name": "should show error when client ID is missing",
      "filePath": "src/components/settings/__tests__/IntegrationsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntegrationsSettings - should show error when client ID is missing",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.841Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___IntegrationsSettings_test_tsx__should_show_test_connection_button",
      "name": "should show test connection button",
      "filePath": "src/components/settings/__tests__/IntegrationsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntegrationsSettings - should show test connection button",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.841Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___IntegrationsSettings_test_tsx__should_attempt_connection_test_when_clicked",
      "name": "should attempt connection test when clicked",
      "filePath": "src/components/settings/__tests__/IntegrationsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntegrationsSettings - should attempt connection test when clicked",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.841Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___IntegrationsSettings_test_tsx__should_show_reset_button",
      "name": "should show reset button",
      "filePath": "src/components/settings/__tests__/IntegrationsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntegrationsSettings - should show reset button",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.841Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___IntegrationsSettings_test_tsx__should_reset_to_default_values_when_clicked",
      "name": "should reset to default values when clicked",
      "filePath": "src/components/settings/__tests__/IntegrationsSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "IntegrationsSettings - should reset to default values when clicked",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.841Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_settings___tests___GeneralSettings_test_tsx__renders_without_crashing",
      "name": "renders without crashing",
      "filePath": "src/components/settings/__tests__/GeneralSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "GeneralSettings - renders without crashing",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.842Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_settings___tests___GeneralSettings_test_tsx__displays_theme_and_appearance_section",
      "name": "displays theme and appearance section",
      "filePath": "src/components/settings/__tests__/GeneralSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "GeneralSettings - displays theme and appearance section",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.842Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_settings___tests___GeneralSettings_test_tsx__displays_application_name_field",
      "name": "displays application name field",
      "filePath": "src/components/settings/__tests__/GeneralSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "GeneralSettings - displays application name field",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.842Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_settings___tests___GeneralSettings_test_tsx__displays_default_capacity_field",
      "name": "displays default capacity field",
      "filePath": "src/components/settings/__tests__/GeneralSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "GeneralSettings - displays default capacity field",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.842Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_settings___tests___GeneralSettings_test_tsx__displays_default_employment_type_select",
      "name": "displays default employment type select",
      "filePath": "src/components/settings/__tests__/GeneralSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "GeneralSettings - displays default employment type select",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.842Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_settings___tests___GeneralSettings_test_tsx__displays_date_format_select",
      "name": "displays date format select",
      "filePath": "src/components/settings/__tests__/GeneralSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "GeneralSettings - displays date format select",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.842Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_settings___tests___GeneralSettings_test_tsx__displays_build_information_section",
      "name": "displays build information section",
      "filePath": "src/components/settings/__tests__/GeneralSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "GeneralSettings - displays build information section",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.842Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_settings___tests___GeneralSettings_test_tsx__handles_application_name_change",
      "name": "handles application name change",
      "filePath": "src/components/settings/__tests__/GeneralSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "GeneralSettings - handles application name change",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.842Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_settings___tests___GeneralSettings_test_tsx__handles_capacity_change",
      "name": "handles capacity change",
      "filePath": "src/components/settings/__tests__/GeneralSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "GeneralSettings - handles capacity change",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.842Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_settings___tests___GeneralSettings_test_tsx__handles_save_button_click",
      "name": "handles save button click",
      "filePath": "src/components/settings/__tests__/GeneralSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "GeneralSettings - handles save button click",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.842Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_settings___tests___GeneralSettings_test_tsx__toggles_theme_preview_visibility",
      "name": "toggles theme preview visibility",
      "filePath": "src/components/settings/__tests__/GeneralSettings.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "GeneralSettings - toggles theme preview visibility",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.842Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_render_the_impact_summary_correctly",
      "name": "should render the impact summary correctly",
      "filePath": "src/components/scenarios/__tests__/ScenarioVisualDiff.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioVisualDiff - should render the impact summary correctly",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.843Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_render_financial_impact_when_present",
      "name": "should render financial impact when present",
      "filePath": "src/components/scenarios/__tests__/ScenarioVisualDiff.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioVisualDiff - should render financial impact when present",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.843Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_render_resource_impact_when_present",
      "name": "should render resource impact when present",
      "filePath": "src/components/scenarios/__tests__/ScenarioVisualDiff.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioVisualDiff - should render resource impact when present",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.843Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_group_and_display_changes_by_category",
      "name": "should group and display changes by category",
      "filePath": "src/components/scenarios/__tests__/ScenarioVisualDiff.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioVisualDiff - should group and display changes by category",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.843Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_display_change_details_with_old_and_new_values",
      "name": "should display change details with old and new values",
      "filePath": "src/components/scenarios/__tests__/ScenarioVisualDiff.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioVisualDiff - should display change details with old and new values",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.843Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_display_appropriate_impact_badges",
      "name": "should display appropriate impact badges",
      "filePath": "src/components/scenarios/__tests__/ScenarioVisualDiff.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioVisualDiff - should display appropriate impact badges",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.843Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_handle_empty_comparison_gracefully",
      "name": "should handle empty comparison gracefully",
      "filePath": "src/components/scenarios/__tests__/ScenarioVisualDiff.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioVisualDiff - should handle empty comparison gracefully",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.843Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_handle_negative_financial_changes_correctly",
      "name": "should handle negative financial changes correctly",
      "filePath": "src/components/scenarios/__tests__/ScenarioVisualDiff.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioVisualDiff - should handle negative financial changes correctly",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.844Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_render_correctly_with_no_people_removed",
      "name": "should render correctly with no people removed",
      "filePath": "src/components/scenarios/__tests__/ScenarioVisualDiff.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioVisualDiff - should render correctly with no people removed",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.844Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_render_change_icons_correctly",
      "name": "should render change icons correctly",
      "filePath": "src/components/scenarios/__tests__/ScenarioVisualDiff.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioVisualDiff - should render change icons correctly",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.844Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_scenarios___tests___ScenarioSwitcher_test_tsx__should_render_in_live_mode_initially",
      "name": "should render in live mode initially",
      "filePath": "src/components/scenarios/__tests__/ScenarioSwitcher.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioSwitcher - should render in live mode initially",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.844Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_scenarios___tests___ScenarioSwitcher_test_tsx__should_show_compact_view_correctly",
      "name": "should show compact view correctly",
      "filePath": "src/components/scenarios/__tests__/ScenarioSwitcher.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioSwitcher - should show compact view correctly",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.844Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_scenarios___tests___ScenarioSwitcher_test_tsx__should_open_create_scenario_dialog_when_clicked",
      "name": "should open create scenario dialog when clicked",
      "filePath": "src/components/scenarios/__tests__/ScenarioSwitcher.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioSwitcher - should open create scenario dialog when clicked",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.845Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_scenarios___tests___ScenarioSwitcher_test_tsx__should_display_scenarios_in_dropdown_when_available",
      "name": "should display scenarios in dropdown when available",
      "filePath": "src/components/scenarios/__tests__/ScenarioSwitcher.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioSwitcher - should display scenarios in dropdown when available",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.845Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_scenarios___tests___ScenarioSwitcher_test_tsx__should_show_unsaved_changes_indicator_when_applicable",
      "name": "should show unsaved changes indicator when applicable",
      "filePath": "src/components/scenarios/__tests__/ScenarioSwitcher.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioSwitcher - should show unsaved changes indicator when applicable",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.845Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_scenarios___tests___ScenarioSwitcher_test_tsx__should_handle_manage_scenarios_click",
      "name": "should handle manage scenarios click",
      "filePath": "src/components/scenarios/__tests__/ScenarioSwitcher.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioSwitcher - should handle manage scenarios click",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.845Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_budget_column_header",
      "name": "should display budget column header",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should display budget column header",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.846Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_project_budget_values_in_correct_format",
      "name": "should display project budget values in correct format",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should display project budget values in correct format",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.846Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_",
      "name": "should display ",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should display ",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.846Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_sortable_column_headers",
      "name": "should display sortable column headers",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should display sortable column headers",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.846Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_sort_projects_by_name_in_ascending_order_when_clicked",
      "name": "should sort projects by name in ascending order when clicked",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should sort projects by name in ascending order when clicked",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.847Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_sort_projects_by_name_in_descending_order_when_clicked_twice",
      "name": "should sort projects by name in descending order when clicked twice",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should sort projects by name in descending order when clicked twice",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.847Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_sort_projects_by_budget_amount",
      "name": "should sort projects by budget amount",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should sort projects by budget amount",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.848Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_sort_projects_by_priority",
      "name": "should sort projects by priority",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should sort projects by priority",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.848Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_sort_projects_by_start_date",
      "name": "should sort projects by start date",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should sort projects by start date",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.849Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_filter_controls",
      "name": "should display filter controls",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should display filter controls",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.849Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_filter_projects_by_name",
      "name": "should filter projects by name",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should filter projects by name",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.849Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_filter_projects_by_status",
      "name": "should filter projects by status",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should filter projects by status",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.850Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_filter_projects_by_priority",
      "name": "should filter projects by priority",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should filter projects by priority",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.850Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_clear_filters_when_clear_button_is_clicked",
      "name": "should clear filters when clear button is clicked",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should clear filters when clear button is clicked",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.850Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_combine_multiple_filters_correctly",
      "name": "should combine multiple filters correctly",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should combine multiple filters correctly",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.851Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_total_budget_for_all_projects",
      "name": "should display total budget for all projects",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should display total budget for all projects",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.851Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_filtered_budget_total_when_filters_are_applied",
      "name": "should display filtered budget total when filters are applied",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should display filtered budget total when filters are applied",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.851Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_update_budget_total_when_projects_are_filtered_by_name",
      "name": "should update budget total when projects are filtered by name",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should update budget total when projects are filtered by name",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.852Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_show_project_count_in_budget_totals",
      "name": "should show project count in budget totals",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should show project count in budget totals",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.852Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_update_project_count_when_filters_are_applied",
      "name": "should update project count when filters are applied",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should update project count when filters are applied",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.852Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_handle_projects_without_budget_in_totals",
      "name": "should handle projects without budget in totals",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should handle projects without budget in totals",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.853Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_priority_column_header",
      "name": "should display priority column header",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should display priority column header",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.853Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_project_priority_values",
      "name": "should display project priority values",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should display project priority values",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.853Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_priority_badge_with_appropriate_styling",
      "name": "should display priority badge with appropriate styling",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should display priority badge with appropriate styling",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.854Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_maintain_sorting_when_filters_are_applied",
      "name": "should maintain sorting when filters are applied",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should maintain sorting when filters are applied",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.854Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_update_budget_totals_when_sorting_changes_visible_projects",
      "name": "should update budget totals when sorting changes visible projects",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should update budget totals when sorting changes visible projects",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.854Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_preserve_user_selections_when_applying_filters",
      "name": "should preserve user selections when applying filters",
      "filePath": "src/components/projects/__tests__/ProjectTableEnhancements.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Enhancements - should preserve user selections when applying filters",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.855Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_render_drag_and_drop_enabled_table",
      "name": "should render drag-and-drop enabled table",
      "filePath": "src/components/projects/__tests__/ProjectTableDragDrop.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Drag and Drop - should render drag-and-drop enabled table",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.855Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_display_drag_handles_in_priority_order_column",
      "name": "should display drag handles in priority order column",
      "filePath": "src/components/projects/__tests__/ProjectTableDragDrop.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Drag and Drop - should display drag handles in priority order column",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.855Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_show_drag_indicator_when_no_sorting_is_applied",
      "name": "should show drag indicator when no sorting is applied",
      "filePath": "src/components/projects/__tests__/ProjectTableDragDrop.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Drag and Drop - should show drag indicator when no sorting is applied",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.855Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_display_priority_order_values_correctly",
      "name": "should display priority order values correctly",
      "filePath": "src/components/projects/__tests__/ProjectTableDragDrop.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Drag and Drop - should display priority order values correctly",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.855Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_handle_projects_without_priority_order_gracefully",
      "name": "should handle projects without priority order gracefully",
      "filePath": "src/components/projects/__tests__/ProjectTableDragDrop.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Drag and Drop - should handle projects without priority order gracefully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.856Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_show_sortable_projects_in_priority_order",
      "name": "should show sortable projects in priority order",
      "filePath": "src/components/projects/__tests__/ProjectTableDragDrop.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Drag and Drop - should show sortable projects in priority order",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.856Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_handle_empty_projects_array",
      "name": "should handle empty projects array",
      "filePath": "src/components/projects/__tests__/ProjectTableDragDrop.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Drag and Drop - should handle empty projects array",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.856Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_maintain_drag_functionality_with_filtering",
      "name": "should maintain drag functionality with filtering",
      "filePath": "src/components/projects/__tests__/ProjectTableDragDrop.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Drag and Drop - should maintain drag functionality with filtering",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.856Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_integrate_with_existing_table_features",
      "name": "should integrate with existing table features",
      "filePath": "src/components/projects/__tests__/ProjectTableDragDrop.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Drag and Drop - should integrate with existing table features",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.856Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectSolutionsSkillsSection_test_tsx__should_render_without_crashing",
      "name": "should render without crashing",
      "filePath": "src/components/projects/__tests__/ProjectSolutionsSkillsSection.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectSolutionsSkillsSection - Basic - should render without crashing",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.856Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectSolutionsSkillsSection_test_tsx__should_display_empty_state_messages",
      "name": "should display empty state messages",
      "filePath": "src/components/projects/__tests__/ProjectSolutionsSkillsSection.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectSolutionsSkillsSection - Basic - should display empty state messages",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.856Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectSolutionsSkillsSection_test_tsx__should_allow_switching_between_tabs",
      "name": "should allow switching between tabs",
      "filePath": "src/components/projects/__tests__/ProjectSolutionsSkillsSection.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectSolutionsSkillsSection - Basic - should allow switching between tabs",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.856Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectSolutionsSkillsSection_test_tsx__should_handle_props_correctly",
      "name": "should handle props correctly",
      "filePath": "src/components/projects/__tests__/ProjectSolutionsSkillsSection.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectSolutionsSkillsSection - Basic - should handle props correctly",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.856Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_render_priority_and_priority_order_fields",
      "name": "should render priority and priority order fields",
      "filePath": "src/components/projects/__tests__/ProjectPriorityEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "ProjectPriorityEditor - should render priority and priority order fields",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.858Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_show_priority_level_descriptions",
      "name": "should show priority level descriptions",
      "filePath": "src/components/projects/__tests__/ProjectPriorityEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "ProjectPriorityEditor - should show priority level descriptions",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.858Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_update_priority_value",
      "name": "should update priority value",
      "filePath": "src/components/projects/__tests__/ProjectPriorityEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "ProjectPriorityEditor - should update priority value",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.858Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_update_priority_order_value",
      "name": "should update priority order value",
      "filePath": "src/components/projects/__tests__/ProjectPriorityEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "ProjectPriorityEditor - should update priority order value",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.858Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_show_fallback_behavior_explanation_when_priority_order_is_not_set",
      "name": "should show fallback behavior explanation when priority order is not set",
      "filePath": "src/components/projects/__tests__/ProjectPriorityEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "ProjectPriorityEditor - should show fallback behavior explanation when priority order is not set",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.858Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_validate_priority_order_as_positive_integer",
      "name": "should validate priority order as positive integer",
      "filePath": "src/components/projects/__tests__/ProjectPriorityEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "ProjectPriorityEditor - should validate priority order as positive integer",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.858Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_handle_empty_priority_order_input",
      "name": "should handle empty priority order input",
      "filePath": "src/components/projects/__tests__/ProjectPriorityEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "ProjectPriorityEditor - should handle empty priority order input",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.858Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_display_priority_badges_with_correct_colors",
      "name": "should display priority badges with correct colors",
      "filePath": "src/components/projects/__tests__/ProjectPriorityEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "ProjectPriorityEditor - should display priority badges with correct colors",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.858Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_show_help_text_explaining_the_difference_between_priority_and_priority_order",
      "name": "should show help text explaining the difference between priority and priority order",
      "filePath": "src/components/projects/__tests__/ProjectPriorityEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "ProjectPriorityEditor - should show help text explaining the difference between priority and priority order",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.858Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_detect_projects_with_legacy_budget_structure",
      "name": "should detect projects with legacy budget structure",
      "filePath": "src/components/projects/__tests__/ProjectLegacyBudgetMigration.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Project Legacy Budget Migration - should detect projects with legacy budget structure",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.859Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_show_migration_prompt_for_projects_with_legacy_budgets",
      "name": "should show migration prompt for projects with legacy budgets",
      "filePath": "src/components/projects/__tests__/ProjectLegacyBudgetMigration.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Project Legacy Budget Migration - should show migration prompt for projects with legacy budgets",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.859Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_not_show_migration_prompt_when_all_projects_have_financial_year_budgets",
      "name": "should not show migration prompt when all projects have financial year budgets",
      "filePath": "src/components/projects/__tests__/ProjectLegacyBudgetMigration.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Project Legacy Budget Migration - should not show migration prompt when all projects have financial year budgets",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.860Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_migrate_single_legacy_project_when_migration_button_is_clicked",
      "name": "should migrate single legacy project when migration button is clicked",
      "filePath": "src/components/projects/__tests__/ProjectLegacyBudgetMigration.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Project Legacy Budget Migration - should migrate single legacy project when migration button is clicked",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.860Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_migrate_all_legacy_projects_in_bulk",
      "name": "should migrate all legacy projects in bulk",
      "filePath": "src/components/projects/__tests__/ProjectLegacyBudgetMigration.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Project Legacy Budget Migration - should migrate all legacy projects in bulk",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.860Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_show_confirmation_dialog_before_bulk_migration",
      "name": "should show confirmation dialog before bulk migration",
      "filePath": "src/components/projects/__tests__/ProjectLegacyBudgetMigration.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Project Legacy Budget Migration - should show confirmation dialog before bulk migration",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.860Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_handle_projects_with_zero_or_undefined_legacy_budgets",
      "name": "should handle projects with zero or undefined legacy budgets",
      "filePath": "src/components/projects/__tests__/ProjectLegacyBudgetMigration.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Project Legacy Budget Migration - should handle projects with zero or undefined legacy budgets",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.861Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_show_success_message_after_successful_migration",
      "name": "should show success message after successful migration",
      "filePath": "src/components/projects/__tests__/ProjectLegacyBudgetMigration.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Project Legacy Budget Migration - should show success message after successful migration",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.861Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_show_migration_progress_for_bulk_operations",
      "name": "should show migration progress for bulk operations",
      "filePath": "src/components/projects/__tests__/ProjectLegacyBudgetMigration.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Project Legacy Budget Migration - should show migration progress for bulk operations",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.861Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_disable_migration_button_during_migration_process",
      "name": "should disable migration button during migration process",
      "filePath": "src/components/projects/__tests__/ProjectLegacyBudgetMigration.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Project Legacy Budget Migration - should disable migration button during migration process",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.861Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_use_current_financial_year_from_settings_for_migration",
      "name": "should use current financial year from settings for migration",
      "filePath": "src/components/projects/__tests__/ProjectLegacyBudgetMigration.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Project Legacy Budget Migration - should use current financial year from settings for migration",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.861Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_preserve_existing_financial_year_budgets_during_migration",
      "name": "should preserve existing financial year budgets during migration",
      "filePath": "src/components/projects/__tests__/ProjectLegacyBudgetMigration.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Project Legacy Budget Migration - should preserve existing financial year budgets during migration",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.862Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_calculate_total_budget_from_financial_year_budgets",
      "name": "should calculate total budget from financial year budgets",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgets.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Financial Year Budgets - should calculate total budget from financial year budgets",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.862Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_show_",
      "name": "should show ",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgets.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Financial Year Budgets - should show ",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.862Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_calculate_budget_totals_correctly_with_financial_year_budgets",
      "name": "should calculate budget totals correctly with financial year budgets",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgets.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Financial Year Budgets - should calculate budget totals correctly with financial year budgets",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.862Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_sort_projects_by_total_budget_correctly",
      "name": "should sort projects by total budget correctly",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgets.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Financial Year Budgets - should sort projects by total budget correctly",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.862Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_display_priority_order_column",
      "name": "should display priority order column",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgets.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Financial Year Budgets - should display priority order column",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.863Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_sort_projects_by_priority_order",
      "name": "should sort projects by priority order",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgets.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Financial Year Budgets - should sort projects by priority order",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.863Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_filter_projects_by_priority_order",
      "name": "should filter projects by priority order",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgets.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Financial Year Budgets - should filter projects by priority order",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.863Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_display_priority_badges_with_correct_styling",
      "name": "should display priority badges with correct styling",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgets.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Financial Year Budgets - should display priority badges with correct styling",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.863Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_update_budget_totals_when_filtering_projects_with_FY_budgets",
      "name": "should update budget totals when filtering projects with FY budgets",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgets.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Financial Year Budgets - should update budget totals when filtering projects with FY budgets",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.863Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_handle_projects_with_empty_financial_year_budgets_gracefully",
      "name": "should handle projects with empty financial year budgets gracefully",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgets.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectTable Financial Year Budgets - should handle projects with empty financial year budgets gracefully",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.863Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_render_financial_year_budgets_table",
      "name": "should render financial year budgets table",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor - should render financial year budgets table",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.863Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_calculate_and_display_total_budget",
      "name": "should calculate and display total budget",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor - should calculate and display total budget",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.864Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_add_new_financial_year_budget",
      "name": "should add new financial year budget",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor - should add new financial year budget",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.864Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_update_budget_amount",
      "name": "should update budget amount",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor - should update budget amount",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.864Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_update_financial_year_selection",
      "name": "should update financial year selection",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor - should update financial year selection",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.864Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_remove_financial_year_budget",
      "name": "should remove financial year budget",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor - should remove financial year budget",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.864Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_handle_empty_budgets_array",
      "name": "should handle empty budgets array",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor - should handle empty budgets array",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.864Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_show_legacy_budget_migration_option_when_available",
      "name": "should show legacy budget migration option when available",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor - should show legacy budget migration option when available",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.864Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_migrate_legacy_budget_to_current_financial_year",
      "name": "should migrate legacy budget to current financial year",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor - should migrate legacy budget to current financial year",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.864Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_validate_financial_year_selection_uniqueness",
      "name": "should validate financial year selection uniqueness",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor - should validate financial year selection uniqueness",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.864Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_handle_invalid_budget_amounts_gracefully",
      "name": "should handle invalid budget amounts gracefully",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor - should handle invalid budget amounts gracefully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.864Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_display_total_budget_with_proper_comma_formatting_for_thousands",
      "name": "should display total budget with proper comma formatting for thousands",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor Currency Formatting - should display total budget with proper comma formatting for thousands",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.865Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_display_total_budget_with_proper_comma_formatting_for_millions",
      "name": "should display total budget with proper comma formatting for millions",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor Currency Formatting - should display total budget with proper comma formatting for millions",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.865Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_display_legacy_budget_migration_message_with_proper_formatting",
      "name": "should display legacy budget migration message with proper formatting",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor Currency Formatting - should display legacy budget migration message with proper formatting",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.865Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_update_total_budget_display_when_budget_amounts_change",
      "name": "should update total budget display when budget amounts change",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor Currency Formatting - should update total budget display when budget amounts change",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.865Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_handle_various_currency_amounts_correctly",
      "name": "should handle various currency amounts correctly",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor Currency Formatting - should handle various currency amounts correctly",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.865Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_handle_negative_values_correctly_by_converting_to_positive",
      "name": "should handle negative values correctly by converting to positive",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor Currency Formatting - should handle negative values correctly by converting to positive",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.865Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_handle_decimal_values_correctly",
      "name": "should handle decimal values correctly",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor Currency Formatting - should handle decimal values correctly",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.865Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_handle_empty_input_correctly",
      "name": "should handle empty input correctly",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor Currency Formatting - should handle empty input correctly",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.865Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_have_proper_labels_and_testids_for_budget_inputs",
      "name": "should have proper labels and testids for budget inputs",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor Currency Formatting - should have proper labels and testids for budget inputs",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.865Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_display_empty_state_message_when_no_budgets_exist",
      "name": "should display empty state message when no budgets exist",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor Currency Formatting - should display empty state message when no budgets exist",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.865Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_show_total_budget_label_and_value_prominently",
      "name": "should show total budget label and value prominently",
      "filePath": "src/components/projects/__tests__/ProjectFinancialYearBudgetEditor.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectFinancialYearBudgetEditor Currency Formatting - should show total budget label and value prominently",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.865Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__renders_without_crashing",
      "name": "renders without crashing",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - renders without crashing",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.866Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__renders_edit_mode_when_project_is_provided",
      "name": "renders edit mode when project is provided",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - renders edit mode when project is provided",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.866Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__displays_project_form_fields",
      "name": "displays project form fields",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - displays project form fields",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.866Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__displays_tabs_for_different_sections",
      "name": "displays tabs for different sections",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - displays tabs for different sections",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.866Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__populates_form_fields_when_editing_existing_project",
      "name": "populates form fields when editing existing project",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - populates form fields when editing existing project",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.867Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__handles_form_field_changes",
      "name": "handles form field changes",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - handles form field changes",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.867Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__handles_status_change",
      "name": "handles status change",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - handles status change",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.867Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__handles_priority_change",
      "name": "handles priority change",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - handles priority change",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.867Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__handles_budget_changes",
      "name": "handles budget changes",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - handles budget changes",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.867Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__handles_date_changes",
      "name": "handles date changes",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - handles date changes",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.868Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__handles_form_data_correctly",
      "name": "handles form data correctly",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - handles form data correctly",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.868Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__switches_between_tabs",
      "name": "switches between tabs",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - switches between tabs",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.868Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__handles_skills_section_updates",
      "name": "handles skills section updates",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - handles skills section updates",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.868Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__handles_solutions_section_updates",
      "name": "handles solutions section updates",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - handles solutions section updates",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.868Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__validates_required_fields",
      "name": "validates required fields",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - validates required fields",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.869Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__validates_date_range",
      "name": "validates date range",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - validates date range",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.869Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__validates_budget_values",
      "name": "validates budget values",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - validates budget values",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.869Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__creates_new_project_successfully",
      "name": "creates new project successfully",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - creates new project successfully",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.869Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__updates_existing_project_successfully",
      "name": "updates existing project successfully",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - updates existing project successfully",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.870Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__handles_save_error_gracefully",
      "name": "handles save error gracefully",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - handles save error gracefully",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.870Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__handles_cancel_action",
      "name": "handles cancel action",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - handles cancel action",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.870Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__handles_dialog_close",
      "name": "handles dialog close",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - handles dialog close",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.870Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__resets_form_when_dialog_is_closed_and_reopened",
      "name": "resets form when dialog is closed and reopened",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - resets form when dialog is closed and reopened",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.870Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__displays_progress_indicator_when_provided",
      "name": "displays progress indicator when provided",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - displays progress indicator when provided",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.871Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__handles_milestone_management",
      "name": "handles milestone management",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - handles milestone management",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.871Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__shows_project_statistics",
      "name": "shows project statistics",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - shows project statistics",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.871Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__handles_tag_management",
      "name": "handles tag management",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - handles tag management",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.871Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectDialog_test_tsx__removes_tags_when_clicked",
      "name": "removes tags when clicked",
      "filePath": "src/components/projects/__tests__/ProjectDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectDialog - removes tags when clicked",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.872Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_not_render_when_isOpen_is_false",
      "name": "should not render when isOpen is false",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should not render when isOpen is false",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.872Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_not_render_when_project_is_null",
      "name": "should not render when project is null",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should not render when project is null",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.872Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_render_the_modal_with_project_name_in_header",
      "name": "should render the modal with project name in header",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should render the modal with project name in header",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.873Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_render_all_six_tabs",
      "name": "should render all six tabs",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should render all six tabs",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.873Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_render_close_button_and_handle_close_action",
      "name": "should render close button and handle close action",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should render close button and handle close action",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.873Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_always_be_in_edit_mode_and_show_form_fields",
      "name": "should always be in edit mode and show form fields",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should always be in edit mode and show form fields",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.873Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_display_basic_project_information_in_editable_form_fields",
      "name": "should display basic project information in editable form fields",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should display basic project information in editable form fields",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.875Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_display_projected_end_date_from_calculation",
      "name": "should display projected end date from calculation",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should display projected end date from calculation",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.875Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_projects_with_missing_optional_fields",
      "name": "should handle projects with missing optional fields",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should handle projects with missing optional fields",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.875Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_always_show_edit_actions_and_form_fields",
      "name": "should always show edit actions and form fields",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should always show edit actions and form fields",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.876Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_cancel_button_click",
      "name": "should handle cancel button click",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should handle cancel button click",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.876Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_save_button_click",
      "name": "should handle save button click",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should handle save button click",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.876Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_render_all_tab_buttons_as_clickable",
      "name": "should render all tab buttons as clickable",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should render all tab buttons as clickable",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.876Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_maintain_accessibility_for_keyboard_navigation",
      "name": "should maintain accessibility for keyboard navigation",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should maintain accessibility for keyboard navigation",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.876Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_use_project_data_from_context_when_available",
      "name": "should use project data from context when available",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should use project data from context when available",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.877Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_context_with_related_data__epics__milestones_",
      "name": "should handle context with related data (epics, milestones)",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should handle context with related data (epics, milestones)",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.877Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_empty_context_gracefully",
      "name": "should handle empty context gracefully",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should handle empty context gracefully",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.877Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_invalid_project_data_gracefully",
      "name": "should handle invalid project data gracefully",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should handle invalid project data gracefully",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.877Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_always_be_in_edit_mode_with_form_fields",
      "name": "should always be in edit mode with form fields",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should always be in edit mode with form fields",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.877Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_missing_context_provider",
      "name": "should handle missing context provider",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should handle missing context provider",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.878Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_have_proper_ARIA_attributes_for_modal",
      "name": "should have proper ARIA attributes for modal",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should have proper ARIA attributes for modal",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.878Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_support_keyboard_navigation_for_tabs",
      "name": "should support keyboard navigation for tabs",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should support keyboard navigation for tabs",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.878Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_focus_management_correctly",
      "name": "should handle focus management correctly",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should handle focus management correctly",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.878Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_not_re_render_unnecessarily",
      "name": "should not re-render unnecessarily",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should not re-render unnecessarily",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.878Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_large_datasets_efficiently",
      "name": "should handle large datasets efficiently",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal - should handle large datasets efficiently",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.878Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_display_estimated_cost_with_proper_comma_formatting",
      "name": "should display estimated cost with proper comma formatting",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal Currency Formatting - should display estimated cost with proper comma formatting",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.879Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_display_monthly_burn_rate_with_proper_comma_formatting",
      "name": "should display monthly burn rate with proper comma formatting",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal Currency Formatting - should display monthly burn rate with proper comma formatting",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.879Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_display_budget_variance_with_proper_comma_formatting",
      "name": "should display budget variance with proper comma formatting",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal Currency Formatting - should display budget variance with proper comma formatting",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.879Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_display_total_estimated_cost_in_financials_tab_with_commas",
      "name": "should display total estimated cost in financials tab with commas",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal Currency Formatting - should display total estimated cost in financials tab with commas",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.879Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_display_monthly_burn_rate_in_financials_tab_with_commas",
      "name": "should display monthly burn rate in financials tab with commas",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal Currency Formatting - should display monthly burn rate in financials tab with commas",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.879Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_display_budget_variance_in_financials_tab_with_proper_formatting",
      "name": "should display budget variance in financials tab with proper formatting",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal Currency Formatting - should display budget variance in financials tab with proper formatting",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.879Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_handle_different_currency_amounts_correctly",
      "name": "should handle different currency amounts correctly",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal Currency Formatting - should handle different currency amounts correctly",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.880Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_display_currency_symbol_in_budget_input_field",
      "name": "should display currency symbol in budget input field",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal Currency Formatting - should display currency symbol in budget input field",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.880Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_handle_budget_input_changes_correctly",
      "name": "should handle budget input changes correctly",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal Currency Formatting - should handle budget input changes correctly",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.880Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_integrate_properly_with_ProjectFinancialYearBudgetEditor",
      "name": "should integrate properly with ProjectFinancialYearBudgetEditor",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal Currency Formatting - should integrate properly with ProjectFinancialYearBudgetEditor",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.880Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_handle_zero_amounts_correctly",
      "name": "should handle zero amounts correctly",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal Currency Formatting - should handle zero amounts correctly",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.880Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_handle_very_large_amounts_correctly",
      "name": "should handle very large amounts correctly",
      "filePath": "src/components/projects/__tests__/ProjectCommandCenterModal.currency.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "ProjectCommandCenterModal Currency Formatting - should handle very large amounts correctly",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.880Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_display_custom_priority_labels_in_table",
      "name": "should display custom priority labels in table",
      "filePath": "src/components/projects/__tests__/ConfigurablePriorityLevels.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Configurable Priority Levels - should display custom priority labels in table",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.881Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_show_custom_priority_labels_in_filter_dropdown",
      "name": "should show custom priority labels in filter dropdown",
      "filePath": "src/components/projects/__tests__/ConfigurablePriorityLevels.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Configurable Priority Levels - should show custom priority labels in filter dropdown",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.881Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_filter_projects_by_custom_priority_labels",
      "name": "should filter projects by custom priority labels",
      "filePath": "src/components/projects/__tests__/ConfigurablePriorityLevels.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Configurable Priority Levels - should filter projects by custom priority labels",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.881Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_display_custom_priority_labels_in_dropdown",
      "name": "should display custom priority labels in dropdown",
      "filePath": "src/components/projects/__tests__/ConfigurablePriorityLevels.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Configurable Priority Levels - should display custom priority labels in dropdown",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.881Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_show_custom_priority_descriptions",
      "name": "should show custom priority descriptions",
      "filePath": "src/components/projects/__tests__/ConfigurablePriorityLevels.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Configurable Priority Levels - should show custom priority descriptions",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.881Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_display_custom_priority_badge_colors",
      "name": "should display custom priority badge colors",
      "filePath": "src/components/projects/__tests__/ConfigurablePriorityLevels.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Configurable Priority Levels - should display custom priority badge colors",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.881Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_handle_priority_level_changes_with_custom_labels",
      "name": "should handle priority level changes with custom labels",
      "filePath": "src/components/projects/__tests__/ConfigurablePriorityLevels.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Configurable Priority Levels - should handle priority level changes with custom labels",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.881Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_fallback_to_default_labels_when_no_custom_priority_levels_configured",
      "name": "should fallback to default labels when no custom priority levels configured",
      "filePath": "src/components/projects/__tests__/ConfigurablePriorityLevels.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Configurable Priority Levels - should fallback to default labels when no custom priority levels configured",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.881Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_save_custom_priority_levels_to_settings",
      "name": "should save custom priority levels to settings",
      "filePath": "src/components/projects/__tests__/ConfigurablePriorityLevels.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Configurable Priority Levels - should save custom priority levels to settings",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.881Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_persist_custom_priority_levels_across_sessions",
      "name": "should persist custom priority levels across sessions",
      "filePath": "src/components/projects/__tests__/ConfigurablePriorityLevels.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Configurable Priority Levels - should persist custom priority levels across sessions",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.881Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_handle_projects_created_before_custom_priority_levels",
      "name": "should handle projects created before custom priority levels",
      "filePath": "src/components/projects/__tests__/ConfigurablePriorityLevels.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Configurable Priority Levels - should handle projects created before custom priority levels",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.882Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_handle_invalid_priority_values_gracefully",
      "name": "should handle invalid priority values gracefully",
      "filePath": "src/components/projects/__tests__/ConfigurablePriorityLevels.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Configurable Priority Levels - should handle invalid priority values gracefully",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.882Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_render_without_crashing",
      "name": "should render without crashing",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should render without crashing",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.882Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_the_main_heading",
      "name": "should display the main heading",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should display the main heading",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.882Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_show_team_allocations_by_quarter_section",
      "name": "should show team allocations by quarter section",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should show team allocations by quarter section",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.883Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_show_project_summary_section",
      "name": "should show project summary section",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should show project summary section",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.883Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_show_related_projects_section",
      "name": "should show related projects section",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should show related projects section",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.883Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_allocated_teams_with_their_names",
      "name": "should display allocated teams with their names",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should display allocated teams with their names",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.883Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_show_team_costs_in_correct_format",
      "name": "should show team costs in correct format",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should show team costs in correct format",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.883Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_team_allocation_percentages",
      "name": "should display team allocation percentages",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should display team allocation percentages",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.884Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_show_quarterly_breakdown_with_quarters",
      "name": "should show quarterly breakdown with quarters",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should show quarterly breakdown with quarters",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.884Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_financial_year_information",
      "name": "should display financial year information",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should display financial year information",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.884Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_teams_involved_count",
      "name": "should display teams involved count",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should display teams involved count",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.884Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_show_total_budget",
      "name": "should show total budget",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should show total budget",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.884Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_average_team_allocation",
      "name": "should display average team allocation",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should display average team allocation",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.885Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_related_project_names",
      "name": "should display related project names",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should display related project names",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.885Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_show_skill_match_percentages",
      "name": "should show skill match percentages",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should show skill match percentages",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.885Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_required_skills",
      "name": "should display required skills",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should display required skills",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.885Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_show_matching_skills",
      "name": "should show matching skills",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should show matching skills",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.885Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_conflicting_teams_when_they_exist",
      "name": "should display conflicting teams when they exist",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should display conflicting teams when they exist",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.886Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_handle_projects_with_no_team_allocations",
      "name": "should handle projects with no team allocations",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should handle projects with no team allocations",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.886Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_handle_projects_with_no_related_projects",
      "name": "should handle projects with no related projects",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should handle projects with no related projects",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.886Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_call_calculateTeamAllocations_with_correct_parameters",
      "name": "should call calculateTeamAllocations with correct parameters",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should call calculateTeamAllocations with correct parameters",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.886Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_call_aggregateTeamAllocationsToQuarterly_with_team_summaries",
      "name": "should call aggregateTeamAllocationsToQuarterly with team summaries",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should call aggregateTeamAllocationsToQuarterly with team summaries",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.886Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_call_findRelatedProjects_with_correct_parameters",
      "name": "should call findRelatedProjects with correct parameters",
      "filePath": "src/components/projects/__tests__/AllocatedTeamsTab.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocatedTeamsTab - should call findRelatedProjects with correct parameters",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.887Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__renders_without_crashing",
      "name": "renders without crashing",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - renders without crashing",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.887Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__displays_summary_statistics",
      "name": "displays summary statistics",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - displays summary statistics",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.887Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__shows_metric_type_selector",
      "name": "shows metric type selector",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - shows metric type selector",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.887Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__shows_chart_type_selector",
      "name": "shows chart type selector",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - shows chart type selector",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.887Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__can_switch_between_metric_types",
      "name": "can switch between metric types",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - can switch between metric types",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.888Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__can_switch_between_chart_types",
      "name": "can switch between chart types",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - can switch between chart types",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.888Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__displays_teams_in_bar_chart_mode",
      "name": "displays teams in bar chart mode",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - displays teams in bar chart mode",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.888Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__shows_different_tabs",
      "name": "shows different tabs",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - shows different tabs",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.888Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__displays_detailed_table_view",
      "name": "displays detailed table view",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - displays detailed table view",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.889Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__shows_analysis_tab_with_recommendations",
      "name": "shows analysis tab with recommendations",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - shows analysis tab with recommendations",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.890Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__identifies_over_allocated_teams",
      "name": "identifies over-allocated teams",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - identifies over-allocated teams",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.890Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__handles_division_filtering",
      "name": "handles division filtering",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - handles division filtering",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.890Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__shows_export_button",
      "name": "shows export button",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - shows export button",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.890Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__displays_risk_badges_correctly",
      "name": "displays risk badges correctly",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - displays risk badges correctly",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.890Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__shows_trend_indicators",
      "name": "shows trend indicators",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - shows trend indicators",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.890Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__handles_empty_cycle_gracefully",
      "name": "handles empty cycle gracefully",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - handles empty cycle gracefully",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.891Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__handles_no_allocations",
      "name": "handles no allocations",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - handles no allocations",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.891Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__calculates_correct_summary_statistics",
      "name": "calculates correct summary statistics",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - calculates correct summary statistics",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.891Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__shows_correct_metric_values_in_bar_chart",
      "name": "shows correct metric values in bar chart",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - shows correct metric values in bar chart",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.891Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__handles_pie_chart_mode",
      "name": "handles pie chart mode",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - handles pie chart mode",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.891Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__filters_by_division_when_selected",
      "name": "filters by division when selected",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - filters by division when selected",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.892Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__displays_health_scores_in_table_view",
      "name": "displays health scores in table view",
      "filePath": "src/components/planning/__tests__/WorkloadDistributionCharts.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "WorkloadDistributionCharts - displays health scores in table view",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.892Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__renders_without_crashing",
      "name": "renders without crashing",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - renders without crashing",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.892Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__displays_view_mode_selector",
      "name": "displays view mode selector",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - displays view mode selector",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.893Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__shows_timeline_header_with_correct_periods",
      "name": "shows timeline header with correct periods",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - shows timeline header with correct periods",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.893Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__displays_teams_in_teams_view_mode",
      "name": "displays teams in teams view mode",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - displays teams in teams view mode",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.893Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__displays_epics_in_epics_view_mode",
      "name": "displays epics in epics view mode",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - displays epics in epics view mode",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.894Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__displays_projects_in_projects_view_mode",
      "name": "displays projects in projects view mode",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - displays projects in projects view mode",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.894Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__can_switch_between_view_modes",
      "name": "can switch between view modes",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - can switch between view modes",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.894Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__shows_allocation_bars_with_correct_percentages",
      "name": "shows allocation bars with correct percentages",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - shows allocation bars with correct percentages",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.895Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__handles_allocation_clicks",
      "name": "handles allocation clicks",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - handles allocation clicks",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.895Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__can_zoom_in_and_out_on_timeline",
      "name": "can zoom in and out on timeline",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - can zoom in and out on timeline",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.895Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__shows_progress_bars_for_epics_and_projects",
      "name": "shows progress bars for epics and projects",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - shows progress bars for epics and projects",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.896Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__applies_show_only_allocated_filter",
      "name": "applies show only allocated filter",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - applies show only allocated filter",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.896Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__handles_team_filter_selection",
      "name": "handles team filter selection",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - handles team filter selection",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.896Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__shows_correct_allocation_count_badges",
      "name": "shows correct allocation count badges",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - shows correct allocation count badges",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.897Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__displays_empty_state_when_no_items_match_filters",
      "name": "displays empty state when no items match filters",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - displays empty state when no items match filters",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.897Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__shows_legend_with_allocation_indicators",
      "name": "shows legend with allocation indicators",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - shows legend with allocation indicators",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.897Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__handles_empty_timeline_range_gracefully",
      "name": "handles empty timeline range gracefully",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - handles empty timeline range gracefully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.897Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__shows_export_button",
      "name": "shows export button",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - shows export button",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.898Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__displays_correct_item_type_badges",
      "name": "displays correct item type badges",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - displays correct item type badges",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.898Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__shows_timeline_columns_for_correct_date_range",
      "name": "shows timeline columns for correct date range",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - shows timeline columns for correct date range",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.898Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___TimelineGanttView_test_tsx__handles_run_work_allocations_without_epics",
      "name": "handles run work allocations without epics",
      "filePath": "src/components/planning/__tests__/TimelineGanttView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TimelineGanttView - handles run work allocations without epics",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.899Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__renders_without_crashing",
      "name": "renders without crashing",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - renders without crashing",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.899Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__displays_search_input",
      "name": "displays search input",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - displays search input",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.899Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__handles_search_input_changes",
      "name": "handles search input changes",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - handles search input changes",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.899Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__shows_search_results_when_searching",
      "name": "shows search results when searching",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - shows search results when searching",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.899Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__shows_search_results_for_projects",
      "name": "shows search results for projects",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - shows search results for projects",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.899Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__shows_search_results_for_epics",
      "name": "shows search results for epics",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - shows search results for epics",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.900Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__shows_no_results_message_when_search_yields_nothing",
      "name": "shows no results message when search yields nothing",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - shows no results message when search yields nothing",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.900Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__can_clear_search",
      "name": "can clear search",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - can clear search",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.900Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__displays_allocation_status_filter",
      "name": "displays allocation status filter",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - displays allocation status filter",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.900Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__handles_allocation_status_filter_changes",
      "name": "handles allocation status filter changes",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - handles allocation status filter changes",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.900Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__displays_date_range_filter",
      "name": "displays date range filter",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - displays date range filter",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.900Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__shows_advanced_filters_when_expanded",
      "name": "shows advanced filters when expanded",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - shows advanced filters when expanded",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.900Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__handles_division_filter_selection",
      "name": "handles division filter selection",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - handles division filter selection",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.901Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__handles_team_filter_selection",
      "name": "handles team filter selection",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - handles team filter selection",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.901Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__shows_active_filters_count",
      "name": "shows active filters count",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - shows active filters count",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.901Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__can_clear_all_filters",
      "name": "can clear all filters",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - can clear all filters",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.901Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__handles_preset_saving",
      "name": "handles preset saving",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - handles preset saving",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.901Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__displays_filter_presets",
      "name": "displays filter presets",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - displays filter presets",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.901Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__handles_preset_loading",
      "name": "handles preset loading",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - handles preset loading",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.901Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___SearchAndFilter_test_tsx__handles_search_result_selection",
      "name": "handles search result selection",
      "filePath": "src/components/planning/__tests__/SearchAndFilter.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SearchAndFilter - handles search result selection",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.902Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___ProgressIndicators_test_tsx__renders_without_crashing",
      "name": "renders without crashing",
      "filePath": "src/components/planning/__tests__/ProgressIndicators.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressIndicators - renders without crashing",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.902Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___ProgressIndicators_test_tsx__calculates_and_displays_correct_completion_percentage",
      "name": "calculates and displays correct completion percentage",
      "filePath": "src/components/planning/__tests__/ProgressIndicators.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressIndicators - calculates and displays correct completion percentage",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.902Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___ProgressIndicators_test_tsx__displays_team_coverage_correctly",
      "name": "displays team coverage correctly",
      "filePath": "src/components/planning/__tests__/ProgressIndicators.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressIndicators - displays team coverage correctly",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.902Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___ProgressIndicators_test_tsx__displays_iteration_coverage_correctly",
      "name": "displays iteration coverage correctly",
      "filePath": "src/components/planning/__tests__/ProgressIndicators.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressIndicators - displays iteration coverage correctly",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.902Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___ProgressIndicators_test_tsx__calculates_average_allocation_correctly",
      "name": "calculates average allocation correctly",
      "filePath": "src/components/planning/__tests__/ProgressIndicators.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressIndicators - calculates average allocation correctly",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.902Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___ProgressIndicators_test_tsx__shows_optimal_cells_count",
      "name": "shows optimal cells count",
      "filePath": "src/components/planning/__tests__/ProgressIndicators.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressIndicators - shows optimal cells count",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.903Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___ProgressIndicators_test_tsx__displays_epic_coverage",
      "name": "displays epic coverage",
      "filePath": "src/components/planning/__tests__/ProgressIndicators.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressIndicators - displays epic coverage",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.903Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___ProgressIndicators_test_tsx__shows_planning_health_summary",
      "name": "shows planning health summary",
      "filePath": "src/components/planning/__tests__/ProgressIndicators.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressIndicators - shows planning health summary",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.903Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___ProgressIndicators_test_tsx__handles_empty_data_gracefully",
      "name": "handles empty data gracefully",
      "filePath": "src/components/planning/__tests__/ProgressIndicators.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressIndicators - handles empty data gracefully",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.903Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___ProgressIndicators_test_tsx__handles_over_allocated_scenarios",
      "name": "handles over-allocated scenarios",
      "filePath": "src/components/planning/__tests__/ProgressIndicators.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressIndicators - handles over-allocated scenarios",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.903Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___ProgressIndicators_test_tsx__shows_correct_progress_bars",
      "name": "shows correct progress bars",
      "filePath": "src/components/planning/__tests__/ProgressIndicators.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressIndicators - shows correct progress bars",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.903Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___ProgressIndicators_test_tsx__displays_health_score_correctly",
      "name": "displays health score correctly",
      "filePath": "src/components/planning/__tests__/ProgressIndicators.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressIndicators - displays health score correctly",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.903Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___ProgressIndicators_test_tsx__shows_epic_coverage_progress",
      "name": "shows epic coverage progress",
      "filePath": "src/components/planning/__tests__/ProgressIndicators.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressIndicators - shows epic coverage progress",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.904Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___ProgressIndicators_test_tsx__handles_different_completion_scenarios",
      "name": "handles different completion scenarios",
      "filePath": "src/components/planning/__tests__/ProgressIndicators.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProgressIndicators - handles different completion scenarios",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.904Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_planning___tests___BulkOperationsPanel_test_tsx__renders_without_crashing",
      "name": "renders without crashing",
      "filePath": "src/components/planning/__tests__/BulkOperationsPanel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "BulkOperationsPanel - renders without crashing",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.904Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___BulkOperationsPanel_test_tsx__displays_all_teams_for_selection",
      "name": "displays all teams for selection",
      "filePath": "src/components/planning/__tests__/BulkOperationsPanel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "BulkOperationsPanel - displays all teams for selection",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.904Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___BulkOperationsPanel_test_tsx__displays_all_iterations_for_selection",
      "name": "displays all iterations for selection",
      "filePath": "src/components/planning/__tests__/BulkOperationsPanel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "BulkOperationsPanel - displays all iterations for selection",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.904Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___BulkOperationsPanel_test_tsx__allows_team_selection_and_calls_onSelectionChange",
      "name": "allows team selection and calls onSelectionChange",
      "filePath": "src/components/planning/__tests__/BulkOperationsPanel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "BulkOperationsPanel - allows team selection and calls onSelectionChange",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.905Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___BulkOperationsPanel_test_tsx__allows_iteration_selection_and_calls_onSelectionChange",
      "name": "allows iteration selection and calls onSelectionChange",
      "filePath": "src/components/planning/__tests__/BulkOperationsPanel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "BulkOperationsPanel - allows iteration selection and calls onSelectionChange",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.905Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___BulkOperationsPanel_test_tsx__shows_selection_count_when_items_are_selected",
      "name": "shows selection count when items are selected",
      "filePath": "src/components/planning/__tests__/BulkOperationsPanel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "BulkOperationsPanel - shows selection count when items are selected",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.905Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___BulkOperationsPanel_test_tsx__enables_bulk_allocation_form_when_selection_exists",
      "name": "enables bulk allocation form when selection exists",
      "filePath": "src/components/planning/__tests__/BulkOperationsPanel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "BulkOperationsPanel - enables bulk allocation form when selection exists",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.905Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___BulkOperationsPanel_test_tsx__provides_quick_percentage_buttons",
      "name": "provides quick percentage buttons",
      "filePath": "src/components/planning/__tests__/BulkOperationsPanel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "BulkOperationsPanel - provides quick percentage buttons",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.906Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___BulkOperationsPanel_test_tsx__calls_onBulkAllocate_when_allocation_is_submitted",
      "name": "calls onBulkAllocate when allocation is submitted",
      "filePath": "src/components/planning/__tests__/BulkOperationsPanel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "BulkOperationsPanel - calls onBulkAllocate when allocation is submitted",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.906Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___BulkOperationsPanel_test_tsx__calls_onBulkDelete_when_delete_is_clicked",
      "name": "calls onBulkDelete when delete is clicked",
      "filePath": "src/components/planning/__tests__/BulkOperationsPanel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "BulkOperationsPanel - calls onBulkDelete when delete is clicked",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.906Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___BulkOperationsPanel_test_tsx__allows_setting_copy_source_for_single_cell_selection",
      "name": "allows setting copy source for single cell selection",
      "filePath": "src/components/planning/__tests__/BulkOperationsPanel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "BulkOperationsPanel - allows setting copy source for single cell selection",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.907Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___BulkOperationsPanel_test_tsx__disables_copy_source_button_for_multiple_selections",
      "name": "disables copy source button for multiple selections",
      "filePath": "src/components/planning/__tests__/BulkOperationsPanel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "BulkOperationsPanel - disables copy source button for multiple selections",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.907Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___BulkOperationsPanel_test_tsx__allows_selecting_all_teams",
      "name": "allows selecting all teams",
      "filePath": "src/components/planning/__tests__/BulkOperationsPanel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "BulkOperationsPanel - allows selecting all teams",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.907Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___BulkOperationsPanel_test_tsx__validates_allocation_form_before_submission",
      "name": "validates allocation form before submission",
      "filePath": "src/components/planning/__tests__/BulkOperationsPanel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "BulkOperationsPanel - validates allocation form before submission",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.907Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___BulkOperationsPanel_test_tsx__clears_selection_when_clear_button_is_clicked",
      "name": "clears selection when clear button is clicked",
      "filePath": "src/components/planning/__tests__/BulkOperationsPanel.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "BulkOperationsPanel - clears selection when clear button is clicked",
      "tags": ["async", "mocked", "mobile"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.907Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__provides_clipboard_context",
      "name": "provides clipboard context",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - provides clipboard context",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.908Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__handles_copying_allocations",
      "name": "handles copying allocations",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - handles copying allocations",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.908Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__handles_pasting_allocations",
      "name": "handles pasting allocations",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - handles pasting allocations",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.908Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__handles_clearing_clipboard",
      "name": "handles clearing clipboard",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - handles clearing clipboard",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.908Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__renders_copy_and_paste_buttons",
      "name": "renders copy and paste buttons",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - renders copy and paste buttons",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.909Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__renders_compact_version",
      "name": "renders compact version",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - renders compact version",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.909Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__disables_copy_button_when_no_allocations",
      "name": "disables copy button when no allocations",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - disables copy button when no allocations",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.909Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__disables_paste_button_when_no_clipboard_data",
      "name": "disables paste button when no clipboard data",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - disables paste button when no clipboard data",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.909Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__handles_copy_action",
      "name": "handles copy action",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - handles copy action",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.909Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__handles_paste_action",
      "name": "handles paste action",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - handles paste action",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.909Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__renders_nothing_when_no_clipboard_data",
      "name": "renders nothing when no clipboard data",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - renders nothing when no clipboard data",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.909Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__displays_clipboard_information_when_data_is_present",
      "name": "displays clipboard information when data is present",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - displays clipboard information when data is present",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.910Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__shows_epic_names_in_clipboard_status",
      "name": "shows epic names in clipboard status",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - shows epic names in clipboard status",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.910Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__displays_total_percentage_and_epic_count",
      "name": "displays total percentage and epic count",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - displays total percentage and epic count",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.910Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__allows_clearing_clipboard_from_status",
      "name": "allows clearing clipboard from status",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - allows clearing clipboard from status",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.910Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__prevents_pasting_to_same_location",
      "name": "prevents pasting to same location",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - prevents pasting to same location",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.910Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__handles_empty_allocations_list",
      "name": "handles empty allocations list",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - handles empty allocations list",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.910Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__handles_run_work_allocations",
      "name": "handles run work allocations",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - handles run work allocations",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.911Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_planning___tests___AllocationClipboard_test_tsx__shows_time_since_copy",
      "name": "shows time since copy",
      "filePath": "src/components/planning/__tests__/AllocationClipboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "AllocationClipboard - shows time since copy",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.911Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_render_the_upload_interface_by_default",
      "name": "should render the upload interface by default",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should render the upload interface by default",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.911Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_show_step_indicators",
      "name": "should show step indicators",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should show step indicators",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.911Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_disable_process_button_when_no_file_is_selected",
      "name": "should disable process button when no file is selected",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should disable process button when no file is selected",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.912Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_accept_valid_file_types",
      "name": "should accept valid file types",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should accept valid file types",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.912Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_reject_invalid_file_types",
      "name": "should reject invalid file types",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should reject invalid file types",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.912Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_accept_image_files",
      "name": "should accept image files",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should accept image files",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.912Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_accept_PowerPoint_files",
      "name": "should accept PowerPoint files",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should accept PowerPoint files",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.912Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_show_loading_state_during_processing",
      "name": "should show loading state during processing",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should show loading state during processing",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.913Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_process_image_files_successfully",
      "name": "should process image files successfully",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should process image files successfully",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.913Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_display_extraction_results",
      "name": "should display extraction results",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should display extraction results",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.913Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_display_mapping_results",
      "name": "should display mapping results",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should display mapping results",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.913Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_show_recommendations",
      "name": "should show recommendations",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should show recommendations",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.913Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_show_action_buttons_when_mappings_are_available",
      "name": "should show action buttons when mappings are available",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should show action buttons when mappings are available",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.914Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_apply_high_confidence_mappings",
      "name": "should apply high confidence mappings",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should apply high confidence mappings",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.914Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_reset_the_process_when_Start_Over_is_clicked",
      "name": "should reset the process when Start Over is clicked",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should reset the process when Start Over is clicked",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.914Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_display_error_when_OCR_processing_fails",
      "name": "should display error when OCR processing fails",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should display error when OCR processing fails",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.914Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_display_error_when_extraction_fails",
      "name": "should display error when extraction fails",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should display error when extraction fails",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.914Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_display_error_when_no_file_is_selected_but_process_is_attempted",
      "name": "should display error when no file is selected but process is attempted",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should display error when no file is selected but process is attempted",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.914Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_update_step_indicators_during_processing",
      "name": "should update step indicators during processing",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should update step indicators during processing",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.915Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_show_raw_OCR_text_in_collapsed_format",
      "name": "should show raw OCR text in collapsed format",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should show raw OCR text in collapsed format",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.915Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_have_proper_ARIA_labels",
      "name": "should have proper ARIA labels",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should have proper ARIA labels",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.915Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_be_keyboard_navigable",
      "name": "should be keyboard navigable",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should be keyboard navigable",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.915Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_use_data_from_app_context_for_mapping",
      "name": "should use data from app context for mapping",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should use data from app context for mapping",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.915Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ocr___tests___SteerCoOCR_test_tsx__should_handle_missing_context_gracefully",
      "name": "should handle missing context gracefully",
      "filePath": "src/components/ocr/__tests__/SteerCoOCR.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "SteerCoOCR Component - should handle missing context gracefully",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.916Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_mobile___tests___MobileNavigation_test_tsx__should_not_render_when_not_on_mobile",
      "name": "should not render when not on mobile",
      "filePath": "src/components/mobile/__tests__/MobileNavigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileNavigation - should not render when not on mobile",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.916Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileNavigation_test_tsx__should_render_navigation_items",
      "name": "should render navigation items",
      "filePath": "src/components/mobile/__tests__/MobileNavigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileNavigation - should render navigation items",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.916Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileNavigation_test_tsx__should_have_correct_href_attributes",
      "name": "should have correct href attributes",
      "filePath": "src/components/mobile/__tests__/MobileNavigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileNavigation - should have correct href attributes",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.916Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileNavigation_test_tsx__should_highlight_active_route___home_page",
      "name": "should highlight active route - home page",
      "filePath": "src/components/mobile/__tests__/MobileNavigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileNavigation - should highlight active route - home page",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.916Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileNavigation_test_tsx__should_highlight_active_route___dashboard_page",
      "name": "should highlight active route - dashboard page",
      "filePath": "src/components/mobile/__tests__/MobileNavigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileNavigation - should highlight active route - dashboard page",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.916Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileNavigation_test_tsx__should_highlight_active_route___teams_page",
      "name": "should highlight active route - teams page",
      "filePath": "src/components/mobile/__tests__/MobileNavigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileNavigation - should highlight active route - teams page",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.916Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileNavigation_test_tsx__should_show_attention_badge_when_attention_items_present",
      "name": "should show attention badge when attention items present",
      "filePath": "src/components/mobile/__tests__/MobileNavigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileNavigation - should show attention badge when attention items present",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.916Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileNavigation_test_tsx__should_show_9__for_attention_items_over_9",
      "name": "should show 9+ for attention items over 9",
      "filePath": "src/components/mobile/__tests__/MobileNavigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileNavigation - should show 9+ for attention items over 9",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.916Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileNavigation_test_tsx__should_not_show_badge_when_no_attention_items",
      "name": "should not show badge when no attention items",
      "filePath": "src/components/mobile/__tests__/MobileNavigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileNavigation - should not show badge when no attention items",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.916Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileNavigation_test_tsx__should_be_positioned_fixed_at_bottom",
      "name": "should be positioned fixed at bottom",
      "filePath": "src/components/mobile/__tests__/MobileNavigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileNavigation - should be positioned fixed at bottom",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.916Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileNavigation_test_tsx__should_have_proper_z_index_for_overlay",
      "name": "should have proper z-index for overlay",
      "filePath": "src/components/mobile/__tests__/MobileNavigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileNavigation - should have proper z-index for overlay",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.917Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileNavigation_test_tsx__should_handle_nested_routes_correctly",
      "name": "should handle nested routes correctly",
      "filePath": "src/components/mobile/__tests__/MobileNavigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileNavigation - should handle nested routes correctly",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.917Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileNavigation_test_tsx__should_show_active_indicator_for_current_route",
      "name": "should show active indicator for current route",
      "filePath": "src/components/mobile/__tests__/MobileNavigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileNavigation - should show active indicator for current route",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.917Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileNavigation_test_tsx__should_be_accessible",
      "name": "should be accessible",
      "filePath": "src/components/mobile/__tests__/MobileNavigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileNavigation - should be accessible",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.917Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileNavigation_test_tsx__should_have_proper_responsive_spacing",
      "name": "should have proper responsive spacing",
      "filePath": "src/components/mobile/__tests__/MobileNavigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileNavigation - should have proper responsive spacing",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.917Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileNavigation_test_tsx__should_handle_undefined_attention_items_count",
      "name": "should handle undefined attention items count",
      "filePath": "src/components/mobile/__tests__/MobileNavigation.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileNavigation - should handle undefined attention items count",
      "tags": ["async", "mocked", "responsive", "mobile"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.917Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileDashboard_test_tsx__should_not_render_when_not_on_mobile",
      "name": "should not render when not on mobile",
      "filePath": "src/components/mobile/__tests__/MobileDashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileDashboard - should not render when not on mobile",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.917Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileDashboard_test_tsx__should_render_mobile_dashboard_with_stats",
      "name": "should render mobile dashboard with stats",
      "filePath": "src/components/mobile/__tests__/MobileDashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileDashboard - should render mobile dashboard with stats",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.917Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileDashboard_test_tsx__should_render_current_status_information",
      "name": "should render current status information",
      "filePath": "src/components/mobile/__tests__/MobileDashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileDashboard - should render current status information",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.917Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileDashboard_test_tsx__should_show_attention_items_when_present",
      "name": "should show attention items when present",
      "filePath": "src/components/mobile/__tests__/MobileDashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileDashboard - should show attention items when present",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.917Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileDashboard_test_tsx__should_not_show_attention_items_when_count_is_zero",
      "name": "should not show attention items when count is zero",
      "filePath": "src/components/mobile/__tests__/MobileDashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileDashboard - should not show attention items when count is zero",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.918Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileDashboard_test_tsx__should_render_quick_actions",
      "name": "should render quick actions",
      "filePath": "src/components/mobile/__tests__/MobileDashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileDashboard - should render quick actions",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.918Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileDashboard_test_tsx__should_show_PWA_install_banner_when_installable",
      "name": "should show PWA install banner when installable",
      "filePath": "src/components/mobile/__tests__/MobileDashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileDashboard - should show PWA install banner when installable",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.918Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileDashboard_test_tsx__should_show_offline_status_when_offline",
      "name": "should show offline status when offline",
      "filePath": "src/components/mobile/__tests__/MobileDashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileDashboard - should show offline status when offline",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.918Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileDashboard_test_tsx__should_show_online_status_when_connected",
      "name": "should show online status when connected",
      "filePath": "src/components/mobile/__tests__/MobileDashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileDashboard - should show online status when connected",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.918Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileDashboard_test_tsx__should_display_progress_bar_with_correct_percentage",
      "name": "should display progress bar with correct percentage",
      "filePath": "src/components/mobile/__tests__/MobileDashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileDashboard - should display progress bar with correct percentage",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.918Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileDashboard_test_tsx__should_handle_quick_actions_with_different_variants",
      "name": "should handle quick actions with different variants",
      "filePath": "src/components/mobile/__tests__/MobileDashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileDashboard - should handle quick actions with different variants",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.918Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileDashboard_test_tsx__should_handle_missing_PWA_features_gracefully",
      "name": "should handle missing PWA features gracefully",
      "filePath": "src/components/mobile/__tests__/MobileDashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileDashboard - should handle missing PWA features gracefully",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.918Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_mobile___tests___MobileDashboard_test_tsx__should_be_accessible",
      "name": "should be accessible",
      "filePath": "src/components/mobile/__tests__/MobileDashboard.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "MobileDashboard - should be accessible",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.918Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_layout___tests___ResponsiveLayout_test_tsx__should_have_no_max_width_constraint_for_widescreen_support",
      "name": "should have no max-width constraint for widescreen support",
      "filePath": "src/components/layout/__tests__/ResponsiveLayout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Responsive Layout - should have no max-width constraint for widescreen support",
      "tags": ["mocked", "responsive", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.919Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_layout___tests___ResponsiveLayout_test_tsx__should_maintain_proper_flex_layout_structure",
      "name": "should maintain proper flex layout structure",
      "filePath": "src/components/layout/__tests__/ResponsiveLayout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Responsive Layout - should maintain proper flex layout structure",
      "tags": ["mocked", "responsive", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.919Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_layout___tests___ResponsiveLayout_test_tsx__should_allow_main_content_to_expand_on_widescreen",
      "name": "should allow main content to expand on widescreen",
      "filePath": "src/components/layout/__tests__/ResponsiveLayout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Responsive Layout - should allow main content to expand on widescreen",
      "tags": ["mocked", "responsive", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.919Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_layout___tests___ResponsiveLayout_test_tsx__should_display_responsive_grid_layout",
      "name": "should display responsive grid layout",
      "filePath": "src/components/layout/__tests__/ResponsiveLayout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Responsive Layout - should display responsive grid layout",
      "tags": ["mocked", "responsive", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.919Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_layout___tests___ResponsiveLayout_test_tsx__should_handle_content_spacing_properly",
      "name": "should handle content spacing properly",
      "filePath": "src/components/layout/__tests__/ResponsiveLayout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Responsive Layout - should handle content spacing properly",
      "tags": ["mocked", "responsive", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.919Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_layout___tests___ResponsiveLayout_test_tsx__should_support_ultra_wide_content_layout",
      "name": "should support ultra-wide content layout",
      "filePath": "src/components/layout/__tests__/ResponsiveLayout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Responsive Layout - should support ultra-wide content layout",
      "tags": ["mocked", "responsive", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.919Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_layout___tests___ResponsiveLayout_test_tsx__should_maintain_readability_with_proper_content_constraints",
      "name": "should maintain readability with proper content constraints",
      "filePath": "src/components/layout/__tests__/ResponsiveLayout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Responsive Layout - should maintain readability with proper content constraints",
      "tags": ["mocked", "responsive", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.919Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_layout___tests___ResponsiveLayout_test_tsx__should_handle_mobile_layout_appropriately",
      "name": "should handle mobile layout appropriately",
      "filePath": "src/components/layout/__tests__/ResponsiveLayout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Responsive Layout - should handle mobile layout appropriately",
      "tags": ["mocked", "responsive", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.919Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_layout___tests___ResponsiveLayout_test_tsx__should_maintain_proper_grid_behavior_on_different_screen_sizes",
      "name": "should maintain proper grid behavior on different screen sizes",
      "filePath": "src/components/layout/__tests__/ResponsiveLayout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Responsive Layout - should maintain proper grid behavior on different screen sizes",
      "tags": ["mocked", "responsive", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.919Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_layout___tests___ResponsiveLayout_test_tsx__should_maintain_semantic_structure",
      "name": "should maintain semantic structure",
      "filePath": "src/components/layout/__tests__/ResponsiveLayout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Responsive Layout - should maintain semantic structure",
      "tags": ["mocked", "responsive", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.919Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_layout___tests___ResponsiveLayout_test_tsx__should_handle_overflow_properly",
      "name": "should handle overflow properly",
      "filePath": "src/components/layout/__tests__/ResponsiveLayout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Responsive Layout - should handle overflow properly",
      "tags": ["mocked", "responsive", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.920Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_layout___tests___ResponsiveLayout_test_tsx__should_handle_wide_tables_on_widescreen",
      "name": "should handle wide tables on widescreen",
      "filePath": "src/components/layout/__tests__/ResponsiveLayout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Responsive Layout - should handle wide tables on widescreen",
      "tags": ["mocked", "responsive", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.920Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_layout___tests___ResponsiveLayout_test_tsx__should_support_horizontal_scrolling_on_narrow_screens",
      "name": "should support horizontal scrolling on narrow screens",
      "filePath": "src/components/layout/__tests__/ResponsiveLayout.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Responsive Layout - should support horizontal scrolling on narrow screens",
      "tags": ["mocked", "responsive", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.920Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_dashboard___tests___DashboardHeader_test_tsx__renders_without_crashing",
      "name": "renders without crashing",
      "filePath": "src/components/dashboard/__tests__/DashboardHeader.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DashboardHeader - renders without crashing",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.920Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_dashboard___tests___DashboardHeader_test_tsx__displays_the_correct_heading",
      "name": "displays the correct heading",
      "filePath": "src/components/dashboard/__tests__/DashboardHeader.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DashboardHeader - displays the correct heading",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.920Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_dashboard___tests___DashboardHeader_test_tsx__has_proper_accessibility_attributes",
      "name": "has proper accessibility attributes",
      "filePath": "src/components/dashboard/__tests__/DashboardHeader.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DashboardHeader - has proper accessibility attributes",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.920Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__renders_without_crashing",
      "name": "renders without crashing",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - renders without crashing",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.920Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__displays_control_panel",
      "name": "displays control panel",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - displays control panel",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.920Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__displays_stats_cards",
      "name": "displays stats cards",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - displays stats cards",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.921Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__displays_React_Flow_visualization",
      "name": "displays React Flow visualization",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - displays React Flow visualization",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.921Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__displays_visualization_legend",
      "name": "displays visualization legend",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - displays visualization legend",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.921Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_view_mode_changes",
      "name": "handles view mode changes",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - handles view mode changes",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.921Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_node_sizing_changes",
      "name": "handles node sizing changes",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - handles node sizing changes",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.922Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_color_coding_changes",
      "name": "handles color coding changes",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - handles color coding changes",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.922Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_division_filter_changes",
      "name": "handles division filter changes",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - handles division filter changes",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.923Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_minimum_team_size_slider",
      "name": "handles minimum team size slider",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - handles minimum team size slider",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.923Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_maximum_cost_filter_slider",
      "name": "handles maximum cost filter slider",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - handles maximum cost filter slider",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.923Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_cost_labels_toggle",
      "name": "handles cost labels toggle",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - handles cost labels toggle",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.923Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__displays_correct_stats_for_teams",
      "name": "displays correct stats for teams",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - displays correct stats for teams",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.923Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_empty_data_gracefully",
      "name": "handles empty data gracefully",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - handles empty data gracefully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.923Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_view_mode_switching_properly",
      "name": "handles view mode switching properly",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - handles view mode switching properly",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.923Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__displays_proper_legend_for_different_view_modes",
      "name": "displays proper legend for different view modes",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - displays proper legend for different view modes",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.923Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__displays_interaction_instructions",
      "name": "displays interaction instructions",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - displays interaction instructions",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.924Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_cost_efficiency_color_coding_legend",
      "name": "handles cost efficiency color coding legend",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - handles cost efficiency color coding legend",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.924Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_contractor_ratio_color_coding_legend",
      "name": "handles contractor ratio color coding legend",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - handles contractor ratio color coding legend",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.924Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_risk_level_color_coding_legend",
      "name": "handles risk level color coding legend",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - handles risk level color coding legend",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.924Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__calculates_team_metrics_correctly",
      "name": "calculates team metrics correctly",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - calculates team metrics correctly",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.924Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_slider_value_changes",
      "name": "handles slider value changes",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - handles slider value changes",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.924Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__displays_cost_formatting_in_stats",
      "name": "displays cost formatting in stats",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - displays cost formatting in stats",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.924Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_all_view_modes_correctly",
      "name": "handles all view modes correctly",
      "filePath": "src/components/canvas/__tests__/TeamCostVisualization.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamCostVisualization - handles all view modes correctly",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.925Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_canvas___tests___FinancialImpactAnalysis_test_tsx__renders_the_component_and_calculates_the_financial_impact",
      "name": "renders the component and calculates the financial impact",
      "filePath": "src/components/canvas/__tests__/FinancialImpactAnalysis.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "FinancialImpactAnalysis - renders the component and calculates the financial impact",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.925Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___DivisionCanvasView_test_tsx__should_generate_nodes_and_edges_for_division_view",
      "name": "should generate nodes and edges for division view",
      "filePath": "src/components/canvas/__tests__/DivisionCanvasView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DivisionCanvasView - should generate nodes and edges for division view",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.925Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___DivisionCanvasView_test_tsx__should_create_division_nodes_with_correct_information",
      "name": "should create division nodes with correct information",
      "filePath": "src/components/canvas/__tests__/DivisionCanvasView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DivisionCanvasView - should create division nodes with correct information",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.925Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___DivisionCanvasView_test_tsx__should_create_team_nodes_for_each_team",
      "name": "should create team nodes for each team",
      "filePath": "src/components/canvas/__tests__/DivisionCanvasView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DivisionCanvasView - should create team nodes for each team",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.925Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___DivisionCanvasView_test_tsx__should_create_leadership_nodes_for_division_leaders",
      "name": "should create leadership nodes for division leaders",
      "filePath": "src/components/canvas/__tests__/DivisionCanvasView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DivisionCanvasView - should create leadership nodes for division leaders",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.926Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___DivisionCanvasView_test_tsx__should_create_edges_connecting_divisions_to_teams",
      "name": "should create edges connecting divisions to teams",
      "filePath": "src/components/canvas/__tests__/DivisionCanvasView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DivisionCanvasView - should create edges connecting divisions to teams",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.926Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___DivisionCanvasView_test_tsx__should_create_edges_connecting_leaders_to_divisions",
      "name": "should create edges connecting leaders to divisions",
      "filePath": "src/components/canvas/__tests__/DivisionCanvasView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DivisionCanvasView - should create edges connecting leaders to divisions",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.926Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___DivisionCanvasView_test_tsx__should_filter_divisions_when_selectedDivision_is_provided",
      "name": "should filter divisions when selectedDivision is provided",
      "filePath": "src/components/canvas/__tests__/DivisionCanvasView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DivisionCanvasView - should filter divisions when selectedDivision is provided",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.926Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___DivisionCanvasView_test_tsx__should_handle_empty_data_gracefully",
      "name": "should handle empty data gracefully",
      "filePath": "src/components/canvas/__tests__/DivisionCanvasView.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "DivisionCanvasView - should handle empty data gracefully",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.926Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__renders_without_crashing",
      "name": "renders without crashing",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - renders without crashing",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.926Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__displays_all_stat_cards",
      "name": "displays all stat cards",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - displays all stat cards",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.927Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__displays_correct_stat_values",
      "name": "displays correct stat values",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - displays correct stat values",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.927Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__displays_proper_icons_for_each_stat",
      "name": "displays proper icons for each stat",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - displays proper icons for each stat",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.927Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__handles_zero_values_correctly",
      "name": "handles zero values correctly",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - handles zero values correctly",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.927Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__handles_large_numbers_correctly",
      "name": "handles large numbers correctly",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - handles large numbers correctly",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.927Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__displays_stats_in_correct_order",
      "name": "displays stats in correct order",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - displays stats in correct order",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.927Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__uses_proper_grid_layout",
      "name": "uses proper grid layout",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - uses proper grid layout",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.927Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__has_proper_card_structure",
      "name": "has proper card structure",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - has proper card structure",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.927Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__displays_Building_icon_for_Divisions",
      "name": "displays Building icon for Divisions",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - displays Building icon for Divisions",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.927Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__displays_Users_icon_for_Teams",
      "name": "displays Users icon for Teams",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - displays Users icon for Teams",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.928Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__displays_FolderOpen_icon_for_Projects",
      "name": "displays FolderOpen icon for Projects",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - displays FolderOpen icon for Projects",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.928Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__displays_Target_icon_for_Epics",
      "name": "displays Target icon for Epics",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - displays Target icon for Epics",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.928Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__displays_Zap_icon_for_Allocations",
      "name": "displays Zap icon for Allocations",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - displays Zap icon for Allocations",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.928Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__displays_PersonStanding_icon_for_People",
      "name": "displays PersonStanding icon for People",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - displays PersonStanding icon for People",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.928Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__handles_missing_stats_gracefully",
      "name": "handles missing stats gracefully",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - handles missing stats gracefully",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.928Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__formats_numbers_correctly",
      "name": "formats numbers correctly",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - formats numbers correctly",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.928Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__maintains_responsive_layout",
      "name": "maintains responsive layout",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - maintains responsive layout",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.928Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__shows_proper_text_size_for_values",
      "name": "shows proper text size for values",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - shows proper text size for values",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.928Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__displays_proper_header_structure",
      "name": "displays proper header structure",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - displays proper header structure",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.928Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasStats_test_tsx__handles_negative_values_correctly",
      "name": "handles negative values correctly",
      "filePath": "src/components/canvas/__tests__/CanvasStats.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasStats - handles negative values correctly",
      "tags": ["mocked", "responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.929Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasLegend_test_tsx__renders_without_crashing",
      "name": "renders without crashing",
      "filePath": "src/components/canvas/__tests__/CanvasLegend.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasLegend - renders without crashing",
      "tags": ["responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.929Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasLegend_test_tsx__displays_all_legend_items",
      "name": "displays all legend items",
      "filePath": "src/components/canvas/__tests__/CanvasLegend.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasLegend - displays all legend items",
      "tags": ["responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.929Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasLegend_test_tsx__displays_correct_visual_indicators_for_each_item",
      "name": "displays correct visual indicators for each item",
      "filePath": "src/components/canvas/__tests__/CanvasLegend.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasLegend - displays correct visual indicators for each item",
      "tags": ["responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.929Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasLegend_test_tsx__displays_financial_indicators_with_icon",
      "name": "displays financial indicators with icon",
      "filePath": "src/components/canvas/__tests__/CanvasLegend.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasLegend - displays financial indicators with icon",
      "tags": ["responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.929Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasLegend_test_tsx__uses_proper_color_coding_for_entity_types",
      "name": "uses proper color coding for entity types",
      "filePath": "src/components/canvas/__tests__/CanvasLegend.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasLegend - uses proper color coding for entity types",
      "tags": ["responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.929Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasLegend_test_tsx__displays_line_type_indicators_correctly",
      "name": "displays line type indicators correctly",
      "filePath": "src/components/canvas/__tests__/CanvasLegend.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasLegend - displays line type indicators correctly",
      "tags": ["responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.929Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasLegend_test_tsx__has_proper_layout_structure",
      "name": "has proper layout structure",
      "filePath": "src/components/canvas/__tests__/CanvasLegend.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasLegend - has proper layout structure",
      "tags": ["responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.929Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasLegend_test_tsx__displays_entities_with_proper_visual_distinctions",
      "name": "displays entities with proper visual distinctions",
      "filePath": "src/components/canvas/__tests__/CanvasLegend.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasLegend - displays entities with proper visual distinctions",
      "tags": ["responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.929Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasLegend_test_tsx__displays_connection_types_with_different_line_styles",
      "name": "displays connection types with different line styles",
      "filePath": "src/components/canvas/__tests__/CanvasLegend.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasLegend - displays connection types with different line styles",
      "tags": ["responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.929Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasLegend_test_tsx__has_accessible_structure",
      "name": "has accessible structure",
      "filePath": "src/components/canvas/__tests__/CanvasLegend.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasLegend - has accessible structure",
      "tags": ["responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.930Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasLegend_test_tsx__displays_all_required_entity_types",
      "name": "displays all required entity types",
      "filePath": "src/components/canvas/__tests__/CanvasLegend.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasLegend - displays all required entity types",
      "tags": ["responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.930Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasLegend_test_tsx__displays_all_required_connection_types",
      "name": "displays all required connection types",
      "filePath": "src/components/canvas/__tests__/CanvasLegend.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasLegend - displays all required connection types",
      "tags": ["responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.930Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasLegend_test_tsx__displays_financial_indicators_properly",
      "name": "displays financial indicators properly",
      "filePath": "src/components/canvas/__tests__/CanvasLegend.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasLegend - displays financial indicators properly",
      "tags": ["responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.930Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasLegend_test_tsx__renders_with_proper_responsive_grid_layout",
      "name": "renders with proper responsive grid layout",
      "filePath": "src/components/canvas/__tests__/CanvasLegend.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasLegend - renders with proper responsive grid layout",
      "tags": ["responsive"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.930Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasControls_test_tsx__renders_without_crashing",
      "name": "renders without crashing",
      "filePath": "src/components/canvas/__tests__/CanvasControls.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasControls - renders without crashing",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.930Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasControls_test_tsx__displays_view_selector",
      "name": "displays view selector",
      "filePath": "src/components/canvas/__tests__/CanvasControls.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasControls - displays view selector",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.930Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasControls_test_tsx__displays_division_filter",
      "name": "displays division filter",
      "filePath": "src/components/canvas/__tests__/CanvasControls.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasControls - displays division filter",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.930Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasControls_test_tsx__displays_team_filter",
      "name": "displays team filter",
      "filePath": "src/components/canvas/__tests__/CanvasControls.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasControls - displays team filter",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.930Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasControls_test_tsx__displays_project_filter",
      "name": "displays project filter",
      "filePath": "src/components/canvas/__tests__/CanvasControls.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasControls - displays project filter",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.930Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasControls_test_tsx__displays_correct_layout_structure",
      "name": "displays correct layout structure",
      "filePath": "src/components/canvas/__tests__/CanvasControls.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasControls - displays correct layout structure",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.930Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasControls_test_tsx__displays_proper_icons_for_each_control",
      "name": "displays proper icons for each control",
      "filePath": "src/components/canvas/__tests__/CanvasControls.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasControls - displays proper icons for each control",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.931Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasControls_test_tsx__handles_empty_data_gracefully",
      "name": "handles empty data gracefully",
      "filePath": "src/components/canvas/__tests__/CanvasControls.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasControls - handles empty data gracefully",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.931Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasControls_test_tsx__handles_different_view_types",
      "name": "handles different view types",
      "filePath": "src/components/canvas/__tests__/CanvasControls.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasControls - handles different view types",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.931Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasControls_test_tsx__handles_selected_division_correctly",
      "name": "handles selected division correctly",
      "filePath": "src/components/canvas/__tests__/CanvasControls.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasControls - handles selected division correctly",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.931Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasControls_test_tsx__handles_selected_team_correctly",
      "name": "handles selected team correctly",
      "filePath": "src/components/canvas/__tests__/CanvasControls.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasControls - handles selected team correctly",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.931Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasControls_test_tsx__handles_selected_project_correctly",
      "name": "handles selected project correctly",
      "filePath": "src/components/canvas/__tests__/CanvasControls.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasControls - handles selected project correctly",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.931Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasControls_test_tsx__displays_all_required_controls_with_labels",
      "name": "displays all required controls with labels",
      "filePath": "src/components/canvas/__tests__/CanvasControls.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasControls - displays all required controls with labels",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.931Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasControls_test_tsx__renders_with_consistent_styling",
      "name": "renders with consistent styling",
      "filePath": "src/components/canvas/__tests__/CanvasControls.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasControls - renders with consistent styling",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.931Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_canvas___tests___CanvasControls_test_tsx__handles_props_correctly",
      "name": "handles props correctly",
      "filePath": "src/components/canvas/__tests__/CanvasControls.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CanvasControls - handles props correctly",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.931Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__renders_without_crashing",
      "name": "renders without crashing",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - renders without crashing",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.931Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__displays_team_names_in_the_matrix",
      "name": "displays team names in the matrix",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - displays team names in the matrix",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.932Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__displays_iteration_names_in_the_matrix",
      "name": "displays iteration names in the matrix",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - displays iteration names in the matrix",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.932Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__displays_allocation_percentages",
      "name": "displays allocation percentages",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - displays allocation percentages",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.932Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__shows_epic_information_in_allocation_cells",
      "name": "shows epic information in allocation cells",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - shows epic information in allocation cells",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.932Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__displays_run_work_category_badges",
      "name": "displays run work category badges",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - displays run work category badges",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.932Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__shows_empty_cells_for_teams_without_allocations",
      "name": "shows empty cells for teams without allocations",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - shows empty cells for teams without allocations",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.932Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__allows_selection_of_allocation_cells",
      "name": "allows selection of allocation cells",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - allows selection of allocation cells",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.932Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__enables_bulk_delete_when_allocations_are_selected",
      "name": "enables bulk delete when allocations are selected",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - enables bulk delete when allocations are selected",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.932Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__shows_select_all_checkbox",
      "name": "shows select all checkbox",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - shows select all checkbox",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.932Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__shows_confirmation_dialog_for_bulk_delete",
      "name": "shows confirmation dialog for bulk delete",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - shows confirmation dialog for bulk delete",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.933Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__handles_bulk_delete_confirmation",
      "name": "handles bulk delete confirmation",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - handles bulk delete confirmation",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.933Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__handles_bulk_delete_cancellation",
      "name": "handles bulk delete cancellation",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - handles bulk delete cancellation",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.933Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__displays_capacity_utilization_correctly",
      "name": "displays capacity utilization correctly",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - displays capacity utilization correctly",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.933Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__handles_empty_allocations_array",
      "name": "handles empty allocations array",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - handles empty allocations array",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.933Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__handles_empty_teams_array",
      "name": "handles empty teams array",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - handles empty teams array",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.933Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__handles_empty_iterations_array",
      "name": "handles empty iterations array",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - handles empty iterations array",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.933Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__shows_allocation_details_on_hover_or_click",
      "name": "shows allocation details on hover or click",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - shows allocation details on hover or click",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.933Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__updates_selection_count_when_items_are_selected",
      "name": "updates selection count when items are selected",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - updates selection count when items are selected",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.933Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__clears_selection_after_successful_bulk_delete",
      "name": "clears selection after successful bulk delete",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - clears selection after successful bulk delete",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.934Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__handles_allocation_data_with_missing_references_gracefully",
      "name": "handles allocation data with missing references gracefully",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - handles allocation data with missing references gracefully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.934Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__sorts_teams_and_iterations_consistently",
      "name": "sorts teams and iterations consistently",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - sorts teams and iterations consistently",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.934Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__shows_loading_state_when_data_is_being_processed",
      "name": "shows loading state when data is being processed",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - shows loading state when data is being processed",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.934Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationMatrix_test_tsx__handles_keyboard_navigation_for_accessibility",
      "name": "handles keyboard navigation for accessibility",
      "filePath": "src/components/allocations/__tests__/AllocationMatrix.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationMatrix - handles keyboard navigation for accessibility",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.934Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationImportDialog_test_tsx__renders_trigger_button",
      "name": "renders trigger button",
      "filePath": "src/components/allocations/__tests__/AllocationImportDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationImportDialog - renders trigger button",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.934Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationImportDialog_test_tsx__opens_dialog_when_trigger_button_is_clicked",
      "name": "opens dialog when trigger button is clicked",
      "filePath": "src/components/allocations/__tests__/AllocationImportDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationImportDialog - opens dialog when trigger button is clicked",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.934Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationImportDialog_test_tsx__displays_file_upload_input",
      "name": "displays file upload input",
      "filePath": "src/components/allocations/__tests__/AllocationImportDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationImportDialog - displays file upload input",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.935Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationImportDialog_test_tsx__displays_sample_download_button",
      "name": "displays sample download button",
      "filePath": "src/components/allocations/__tests__/AllocationImportDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationImportDialog - displays sample download button",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.935Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationImportDialog_test_tsx__handles_file_upload_and_parsing",
      "name": "handles file upload and parsing",
      "filePath": "src/components/allocations/__tests__/AllocationImportDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationImportDialog - handles file upload and parsing",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.935Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationImportDialog_test_tsx__displays_validation_errors",
      "name": "displays validation errors",
      "filePath": "src/components/allocations/__tests__/AllocationImportDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationImportDialog - displays validation errors",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.935Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationImportDialog_test_tsx__displays_preview_table_with_valid_data",
      "name": "displays preview table with valid data",
      "filePath": "src/components/allocations/__tests__/AllocationImportDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationImportDialog - displays preview table with valid data",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.935Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationImportDialog_test_tsx__enables_import_button_when_valid_data_is_present",
      "name": "enables import button when valid data is present",
      "filePath": "src/components/allocations/__tests__/AllocationImportDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationImportDialog - enables import button when valid data is present",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.935Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationImportDialog_test_tsx__disables_import_button_when_no_valid_data",
      "name": "disables import button when no valid data",
      "filePath": "src/components/allocations/__tests__/AllocationImportDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationImportDialog - disables import button when no valid data",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.936Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationImportDialog_test_tsx__handles_successful_import",
      "name": "handles successful import",
      "filePath": "src/components/allocations/__tests__/AllocationImportDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationImportDialog - handles successful import",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.936Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationImportDialog_test_tsx__handles_download_sample_CSV",
      "name": "handles download sample CSV",
      "filePath": "src/components/allocations/__tests__/AllocationImportDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationImportDialog - handles download sample CSV",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.936Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationImportDialog_test_tsx__handles_file_parsing_errors",
      "name": "handles file parsing errors",
      "filePath": "src/components/allocations/__tests__/AllocationImportDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationImportDialog - handles file parsing errors",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.936Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationImportDialog_test_tsx__handles_empty_file_selection",
      "name": "handles empty file selection",
      "filePath": "src/components/allocations/__tests__/AllocationImportDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationImportDialog - handles empty file selection",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.936Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationImportDialog_test_tsx__handles_reset_functionality",
      "name": "handles reset functionality",
      "filePath": "src/components/allocations/__tests__/AllocationImportDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationImportDialog - handles reset functionality",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.936Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationImportDialog_test_tsx__handles_cancel_action",
      "name": "handles cancel action",
      "filePath": "src/components/allocations/__tests__/AllocationImportDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationImportDialog - handles cancel action",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.936Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_allocations___tests___AllocationImportDialog_test_tsx__shows_success_message_with_valid_data",
      "name": "shows success message with valid data",
      "filePath": "src/components/allocations/__tests__/AllocationImportDialog.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AllocationImportDialog - shows success message with valid data",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.937Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_render_children_with_screen_reader_only_classes",
      "name": "should render children with screen reader only classes",
      "filePath": "src/components/ui/accessibility/__tests__/VisuallyHidden.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "VisuallyHidden - should render children with screen reader only classes",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.937Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_apply_custom_className",
      "name": "should apply custom className",
      "filePath": "src/components/ui/accessibility/__tests__/VisuallyHidden.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "VisuallyHidden - should apply custom className",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.937Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_clone_element_when_asChild_is_true",
      "name": "should clone element when asChild is true",
      "filePath": "src/components/ui/accessibility/__tests__/VisuallyHidden.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "VisuallyHidden - should clone element when asChild is true",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.937Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_render_as_span_wrapper_when_asChild_is_false",
      "name": "should render as span wrapper when asChild is false",
      "filePath": "src/components/ui/accessibility/__tests__/VisuallyHidden.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "VisuallyHidden - should render as span wrapper when asChild is false",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.937Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_handle_text_content",
      "name": "should handle text content",
      "filePath": "src/components/ui/accessibility/__tests__/VisuallyHidden.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "VisuallyHidden - should handle text content",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.938Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_apply_all_accessibility_classes",
      "name": "should apply all accessibility classes",
      "filePath": "src/components/ui/accessibility/__tests__/VisuallyHidden.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "VisuallyHidden - should apply all accessibility classes",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.938Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_return_sr_only_class_when_show_is_true",
      "name": "should return sr-only class when show is true",
      "filePath": "src/components/ui/accessibility/__tests__/VisuallyHidden.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "VisuallyHidden - should return sr-only class when show is true",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.938Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_return_empty_string_when_show_is_false",
      "name": "should return empty string when show is false",
      "filePath": "src/components/ui/accessibility/__tests__/VisuallyHidden.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "VisuallyHidden - should return empty string when show is false",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.939Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_default_to_true_when_no_parameter_provided",
      "name": "should default to true when no parameter provided",
      "filePath": "src/components/ui/accessibility/__tests__/VisuallyHidden.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "VisuallyHidden - should default to true when no parameter provided",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.939Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___SkipLinks_test_tsx__should_render_skip_links_when_available",
      "name": "should render skip links when available",
      "filePath": "src/components/ui/accessibility/__tests__/SkipLinks.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SkipLinks - should render skip links when available",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.939Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___SkipLinks_test_tsx__should_not_render_when_no_skip_links_are_available",
      "name": "should not render when no skip links are available",
      "filePath": "src/components/ui/accessibility/__tests__/SkipLinks.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SkipLinks - should not render when no skip links are available",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.939Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___SkipLinks_test_tsx__should_call_skipToContent_when_skip_link_is_clicked",
      "name": "should call skipToContent when skip link is clicked",
      "filePath": "src/components/ui/accessibility/__tests__/SkipLinks.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SkipLinks - should call skipToContent when skip link is clicked",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.939Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___SkipLinks_test_tsx__should_apply_custom_className",
      "name": "should apply custom className",
      "filePath": "src/components/ui/accessibility/__tests__/SkipLinks.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SkipLinks - should apply custom className",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.939Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___SkipLinks_test_tsx__should_have_proper_ARIA_attributes",
      "name": "should have proper ARIA attributes",
      "filePath": "src/components/ui/accessibility/__tests__/SkipLinks.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SkipLinks - should have proper ARIA attributes",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.939Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___SkipLinks_test_tsx__should_register_skip_link_on_mount",
      "name": "should register skip link on mount",
      "filePath": "src/components/ui/accessibility/__tests__/SkipLinks.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SkipLinks - should register skip link on mount",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.939Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___SkipLinks_test_tsx__should_unregister_skip_link_on_unmount",
      "name": "should unregister skip link on unmount",
      "filePath": "src/components/ui/accessibility/__tests__/SkipLinks.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SkipLinks - should unregister skip link on unmount",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.939Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___SkipLinks_test_tsx__should_re_register_when_id_or_label_changes",
      "name": "should re-register when id or label changes",
      "filePath": "src/components/ui/accessibility/__tests__/SkipLinks.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SkipLinks - should re-register when id or label changes",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.939Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_render_with_default_aria_live_",
      "name": "should render with default aria-live=",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should render with default aria-live=",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.939Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_use_assertive_priority_when_specified",
      "name": "should use assertive priority when specified",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should use assertive priority when specified",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.940Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_use_off_priority_when_specified",
      "name": "should use off priority when specified",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should use off priority when specified",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.940Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_set_atomic_to_false_when_specified",
      "name": "should set atomic to false when specified",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should set atomic to false when specified",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.940Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_set_custom_aria_relevant",
      "name": "should set custom aria-relevant",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should set custom aria-relevant",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.940Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_apply_custom_className",
      "name": "should apply custom className",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should apply custom className",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.940Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_set_custom_id",
      "name": "should set custom id",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should set custom id",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.940Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_render_as_polite_live_region_with_status_role",
      "name": "should render as polite live region with status role",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should render as polite live region with status role",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.940Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_apply_custom_className",
      "name": "should apply custom className",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should apply custom className",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.940Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_render_as_assertive_live_region_with_alert_role",
      "name": "should render as assertive live region with alert role",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should render as assertive live region with alert role",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.940Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_apply_custom_className",
      "name": "should apply custom className",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should apply custom className",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.940Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_initially_have_empty_announcement",
      "name": "should initially have empty announcement",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should initially have empty announcement",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.941Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_set_announcement_when_announce_is_called",
      "name": "should set announcement when announce is called",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should set announcement when announce is called",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.941Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_clear_announcement_after_default_duration",
      "name": "should clear announcement after default duration",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should clear announcement after default duration",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.941Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_clear_announcement_after_custom_duration",
      "name": "should clear announcement after custom duration",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should clear announcement after custom duration",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.941Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_immediately_clear_announcement_when_clearAnnouncement_is_called",
      "name": "should immediately clear announcement when clearAnnouncement is called",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should immediately clear announcement when clearAnnouncement is called",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.941Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_handle_multiple_announcements_and_use_the_latest",
      "name": "should handle multiple announcements and use the latest",
      "filePath": "src/components/ui/accessibility/__tests__/LiveRegion.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "LiveRegion - should handle multiple announcements and use the latest",
      "tags": [],
      "estimatedDuration": 200,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.941Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_render_items_with_keyboard_navigation",
      "name": "should render items with keyboard navigation",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should render items with keyboard navigation",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.942Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_have_proper_ARIA_attributes",
      "name": "should have proper ARIA attributes",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should have proper ARIA attributes",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.942Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_handle_arrow_down_navigation",
      "name": "should handle arrow down navigation",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should handle arrow down navigation",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.942Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_handle_arrow_up_navigation",
      "name": "should handle arrow up navigation",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should handle arrow up navigation",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.942Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_handle_Home_and_End_keys",
      "name": "should handle Home and End keys",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should handle Home and End keys",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.942Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_call_onSelect_when_Enter_is_pressed",
      "name": "should call onSelect when Enter is pressed",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should call onSelect when Enter is pressed",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.942Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_call_onSelect_when_Space_is_pressed",
      "name": "should call onSelect when Space is pressed",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should call onSelect when Space is pressed",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.942Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_call_onEscape_when_Escape_is_pressed",
      "name": "should call onEscape when Escape is pressed",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should call onEscape when Escape is pressed",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.943Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_support_horizontal_orientation",
      "name": "should support horizontal orientation",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should support horizontal orientation",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.943Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_support_custom_role",
      "name": "should support custom role",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should support custom role",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.943Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_provide_ref_methods",
      "name": "should provide ref methods",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should provide ref methods",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.943Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_render_option_elements_with_proper_ARIA_attributes",
      "name": "should render option elements with proper ARIA attributes",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should render option elements with proper ARIA attributes",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.943Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_update_aria_selected_when_item_is_focused",
      "name": "should update aria-selected when item is focused",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should update aria-selected when item is focused",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.943Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_initialize_with_focused_index__1",
      "name": "should initialize with focused index -1",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should initialize with focused index -1",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.943Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_handle_arrow_down_navigation",
      "name": "should handle arrow down navigation",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should handle arrow down navigation",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.943Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_handle_arrow_up_navigation",
      "name": "should handle arrow up navigation",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should handle arrow up navigation",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.943Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_handle_Home_and_End_keys",
      "name": "should handle Home and End keys",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should handle Home and End keys",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.944Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_allow_manual_focus_setting",
      "name": "should allow manual focus setting",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should allow manual focus setting",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.944Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_handle_Escape_key",
      "name": "should handle Escape key",
      "filePath": "src/components/ui/accessibility/__tests__/KeyboardNavigable.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "KeyboardNavigable - should handle Escape key",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.944Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_render_children",
      "name": "should render children",
      "filePath": "src/components/ui/accessibility/__tests__/FocusTrap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "FocusTrap - should render children",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.944Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_set_up_focus_trap_when_active",
      "name": "should set up focus trap when active",
      "filePath": "src/components/ui/accessibility/__tests__/FocusTrap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "FocusTrap - should set up focus trap when active",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.944Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_not_set_up_focus_trap_when_inactive",
      "name": "should not set up focus trap when inactive",
      "filePath": "src/components/ui/accessibility/__tests__/FocusTrap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "FocusTrap - should not set up focus trap when inactive",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.944Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_restore_focus_on_unmount_when_restoreFocus_is_true",
      "name": "should restore focus on unmount when restoreFocus is true",
      "filePath": "src/components/ui/accessibility/__tests__/FocusTrap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "FocusTrap - should restore focus on unmount when restoreFocus is true",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.944Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_not_restore_focus_on_unmount_when_restoreFocus_is_false",
      "name": "should not restore focus on unmount when restoreFocus is false",
      "filePath": "src/components/ui/accessibility/__tests__/FocusTrap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "FocusTrap - should not restore focus on unmount when restoreFocus is false",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.945Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_focus_first_focusable_element_when_trap_is_activated",
      "name": "should focus first focusable element when trap is activated",
      "filePath": "src/components/ui/accessibility/__tests__/FocusTrap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "FocusTrap - should focus first focusable element when trap is activated",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.945Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_apply_custom_className",
      "name": "should apply custom className",
      "filePath": "src/components/ui/accessibility/__tests__/FocusTrap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "FocusTrap - should apply custom className",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.945Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_have_tabIndex__1_on_container",
      "name": "should have tabIndex -1 on container",
      "filePath": "src/components/ui/accessibility/__tests__/FocusTrap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "FocusTrap - should have tabIndex -1 on container",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.945Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_provide_containerRef",
      "name": "should provide containerRef",
      "filePath": "src/components/ui/accessibility/__tests__/FocusTrap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "FocusTrap - should provide containerRef",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.945Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_enable_focus_trap_when_enableTrap_is_called",
      "name": "should enable focus trap when enableTrap is called",
      "filePath": "src/components/ui/accessibility/__tests__/FocusTrap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "FocusTrap - should enable focus trap when enableTrap is called",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.945Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_disable_focus_trap_when_disableTrap_is_called",
      "name": "should disable focus trap when disableTrap is called",
      "filePath": "src/components/ui/accessibility/__tests__/FocusTrap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "FocusTrap - should disable focus trap when disableTrap is called",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.945Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_handle_enableTrap_with_custom_container",
      "name": "should handle enableTrap with custom container",
      "filePath": "src/components/ui/accessibility/__tests__/FocusTrap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "FocusTrap - should handle enableTrap with custom container",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.945Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___AccessibilityProvider_test_tsx__should_provide_accessibility_context_to_children",
      "name": "should provide accessibility context to children",
      "filePath": "src/components/ui/accessibility/__tests__/AccessibilityProvider.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AccessibilityProvider - should provide accessibility context to children",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.945Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___AccessibilityProvider_test_tsx__should_provide_focus_management_functions",
      "name": "should provide focus management functions",
      "filePath": "src/components/ui/accessibility/__tests__/AccessibilityProvider.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AccessibilityProvider - should provide focus management functions",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.945Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___AccessibilityProvider_test_tsx__should_provide_announcement_function",
      "name": "should provide announcement function",
      "filePath": "src/components/ui/accessibility/__tests__/AccessibilityProvider.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AccessibilityProvider - should provide announcement function",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.945Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_components_ui_accessibility___tests___AccessibilityProvider_test_tsx__should_throw_error_when_used_outside_provider",
      "name": "should throw error when used outside provider",
      "filePath": "src/components/ui/accessibility/__tests__/AccessibilityProvider.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "AccessibilityProvider - should throw error when used outside provider",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.945Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_initialize_with_default_configuration",
      "name": "should initialize with default configuration",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should initialize with default configuration",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.946Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_store_and_retrieve_data",
      "name": "should store and retrieve data",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should store and retrieve data",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.946Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_return_null_for_non_existent_keys",
      "name": "should return null for non-existent keys",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should return null for non-existent keys",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.947Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_handle_getOrFetch_with_cache_miss",
      "name": "should handle getOrFetch with cache miss",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should handle getOrFetch with cache miss",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.947Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_handle_getOrFetch_with_cache_hit",
      "name": "should handle getOrFetch with cache hit",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should handle getOrFetch with cache hit",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.947Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_expire_data_after_TTL",
      "name": "should expire data after TTL",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should expire data after TTL",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.947Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_handle_stale_while_revalidate",
      "name": "should handle stale-while-revalidate",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should handle stale-while-revalidate",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.947Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_invalidate_single_cache_entry",
      "name": "should invalidate single cache entry",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should invalidate single cache entry",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.947Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_invalidate_by_pattern",
      "name": "should invalidate by pattern",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should invalidate by pattern",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.947Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_clear_all_cache_entries",
      "name": "should clear all cache entries",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should clear all cache entries",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.948Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_handle_fetcher_errors_with_retry",
      "name": "should handle fetcher errors with retry",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should handle fetcher errors with retry",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.948Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_handle_persistent_fetcher_failures",
      "name": "should handle persistent fetcher failures",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should handle persistent fetcher failures",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.948Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_update_statistics_as_cache_is_used",
      "name": "should update statistics as cache is used",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should update statistics as cache is used",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.948Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_provide_memory_usage_information",
      "name": "should provide memory usage information",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should provide memory usage information",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.948Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_run_cleanup_processes_in_background",
      "name": "should run cleanup processes in background",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should run cleanup processes in background",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.948Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_accept_custom_configuration",
      "name": "should accept custom configuration",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should accept custom configuration",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.949Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useSmartCache_test_ts__should_handle_encryption_configuration",
      "name": "should handle encryption configuration",
      "filePath": "src/hooks/__tests__/useSmartCache.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useSmartCache - should handle encryption configuration",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.949Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_delegate_person_operations_to_live_context",
      "name": "should delegate person operations to live context",
      "filePath": "src/hooks/__tests__/useScenarioAwareOperations.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useScenarioAwareOperations - should delegate person operations to live context",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.949Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_delegate_team_operations_to_live_context",
      "name": "should delegate team operations to live context",
      "filePath": "src/hooks/__tests__/useScenarioAwareOperations.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useScenarioAwareOperations - should delegate team operations to live context",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.949Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_create_scenario_aware_person_operations",
      "name": "should create scenario-aware person operations",
      "filePath": "src/hooks/__tests__/useScenarioAwareOperations.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useScenarioAwareOperations - should create scenario-aware person operations",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.950Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_update_existing_person_in_scenario",
      "name": "should update existing person in scenario",
      "filePath": "src/hooks/__tests__/useScenarioAwareOperations.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useScenarioAwareOperations - should update existing person in scenario",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.950Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_delete_person_from_scenario",
      "name": "should delete person from scenario",
      "filePath": "src/hooks/__tests__/useScenarioAwareOperations.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useScenarioAwareOperations - should delete person from scenario",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.950Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_handle_team_operations_in_scenario_mode",
      "name": "should handle team operations in scenario mode",
      "filePath": "src/hooks/__tests__/useScenarioAwareOperations.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useScenarioAwareOperations - should handle team operations in scenario mode",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.950Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_handle_errors_gracefully",
      "name": "should handle errors gracefully",
      "filePath": "src/hooks/__tests__/useScenarioAwareOperations.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useScenarioAwareOperations - should handle errors gracefully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.950Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_not_perform_operations_on_non_existent_entities",
      "name": "should not perform operations on non-existent entities",
      "filePath": "src/hooks/__tests__/useScenarioAwareOperations.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useScenarioAwareOperations - should not perform operations on non-existent entities",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.950Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_handle_allocation_operations_in_scenario_mode",
      "name": "should handle allocation operations in scenario mode",
      "filePath": "src/hooks/__tests__/useScenarioAwareOperations.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useScenarioAwareOperations - should handle allocation operations in scenario mode",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.951Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___usePWA_test_ts__should_initialize_with_default_values",
      "name": "should initialize with default values",
      "filePath": "src/hooks/__tests__/usePWA.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "usePWA - should initialize with default values",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.951Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___usePWA_test_ts__should_detect_PWA_support_correctly",
      "name": "should detect PWA support correctly",
      "filePath": "src/hooks/__tests__/usePWA.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "usePWA - should detect PWA support correctly",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.951Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___usePWA_test_ts__should_handle_beforeinstallprompt_event",
      "name": "should handle beforeinstallprompt event",
      "filePath": "src/hooks/__tests__/usePWA.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "usePWA - should handle beforeinstallprompt event",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.951Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___usePWA_test_ts__should_handle_install_function",
      "name": "should handle install function",
      "filePath": "src/hooks/__tests__/usePWA.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "usePWA - should handle install function",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.951Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___usePWA_test_ts__should_handle_app_installed_event",
      "name": "should handle app installed event",
      "filePath": "src/hooks/__tests__/usePWA.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "usePWA - should handle app installed event",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.951Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___usePWA_test_ts__should_handle_online_offline_status",
      "name": "should handle online/offline status",
      "filePath": "src/hooks/__tests__/usePWA.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "usePWA - should handle online/offline status",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.952Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___usePWA_test_ts__should_detect_installed_app_from_display_mode",
      "name": "should detect installed app from display mode",
      "filePath": "src/hooks/__tests__/usePWA.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "usePWA - should detect installed app from display mode",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.952Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___usePWA_test_ts__should_register_service_worker_successfully",
      "name": "should register service worker successfully",
      "filePath": "src/hooks/__tests__/usePWA.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "usePWA - should register service worker successfully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.952Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___usePWA_test_ts__should_handle_service_worker_registration_failure",
      "name": "should handle service worker registration failure",
      "filePath": "src/hooks/__tests__/usePWA.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "usePWA - should handle service worker registration failure",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.952Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___usePWA_test_ts__should_handle_service_worker_update",
      "name": "should handle service worker update",
      "filePath": "src/hooks/__tests__/usePWA.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "usePWA - should handle service worker update",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.952Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___usePWA_test_ts__should_handle_unsupported_service_worker",
      "name": "should handle unsupported service worker",
      "filePath": "src/hooks/__tests__/usePWA.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "usePWA - should handle unsupported service worker",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.952Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useO365SyncWithSettings_test_ts__should_initialize_O365_service_with_settings_config",
      "name": "should initialize O365 service with settings config",
      "filePath": "src/hooks/__tests__/useO365SyncWithSettings.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useO365SyncWithSettings - should initialize O365 service with settings config",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.953Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useO365SyncWithSettings_test_ts__should_set_initialized_state_to_true_after_successful_init",
      "name": "should set initialized state to true after successful init",
      "filePath": "src/hooks/__tests__/useO365SyncWithSettings.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useO365SyncWithSettings - should set initialized state to true after successful init",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.953Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useO365SyncWithSettings_test_ts__should_not_show_error_when_config_is_valid",
      "name": "should not show error when config is valid",
      "filePath": "src/hooks/__tests__/useO365SyncWithSettings.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useO365SyncWithSettings - should not show error when config is valid",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.953Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useO365SyncWithSettings_test_ts__should_not_initialize_O365_service_when_disabled",
      "name": "should not initialize O365 service when disabled",
      "filePath": "src/hooks/__tests__/useO365SyncWithSettings.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useO365SyncWithSettings - should not initialize O365 service when disabled",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.953Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useO365SyncWithSettings_test_ts__should_set_error_message_indicating_service_is_disabled",
      "name": "should set error message indicating service is disabled",
      "filePath": "src/hooks/__tests__/useO365SyncWithSettings.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useO365SyncWithSettings - should set error message indicating service is disabled",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.954Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useO365SyncWithSettings_test_ts__should_not_initialize_O365_service",
      "name": "should not initialize O365 service",
      "filePath": "src/hooks/__tests__/useO365SyncWithSettings.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useO365SyncWithSettings - should not initialize O365 service",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.954Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useO365SyncWithSettings_test_ts__should_set_error_message_indicating_missing_configuration",
      "name": "should set error message indicating missing configuration",
      "filePath": "src/hooks/__tests__/useO365SyncWithSettings.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useO365SyncWithSettings - should set error message indicating missing configuration",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.954Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useO365SyncWithSettings_test_ts__should_not_initialize_O365_service",
      "name": "should not initialize O365 service",
      "filePath": "src/hooks/__tests__/useO365SyncWithSettings.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useO365SyncWithSettings - should not initialize O365 service",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.954Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useO365SyncWithSettings_test_ts__should_set_error_message_indicating_missing_Client_ID",
      "name": "should set error message indicating missing Client ID",
      "filePath": "src/hooks/__tests__/useO365SyncWithSettings.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useO365SyncWithSettings - should set error message indicating missing Client ID",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.954Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useO365SyncWithSettings_test_ts__should_set_error_message_from_thrown_error",
      "name": "should set error message from thrown error",
      "filePath": "src/hooks/__tests__/useO365SyncWithSettings.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useO365SyncWithSettings - should set error message from thrown error",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.954Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useO365SyncWithSettings_test_ts__should_not_set_initialized_state_to_true",
      "name": "should not set initialized state to true",
      "filePath": "src/hooks/__tests__/useO365SyncWithSettings.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useO365SyncWithSettings - should not set initialized state to true",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.954Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useO365SyncWithSettings_test_ts__should_reinitialize_service_with_new_config",
      "name": "should reinitialize service with new config",
      "filePath": "src/hooks/__tests__/useO365SyncWithSettings.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useO365SyncWithSettings - should reinitialize service with new config",
      "tags": ["async", "mocked", "integration"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.954Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useLargeDatasetStorage_test_ts__should_handle_small_datasets_normally",
      "name": "should handle small datasets normally",
      "filePath": "src/hooks/__tests__/useLargeDatasetStorage.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useLargeDatasetStorage - should handle small datasets normally",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.955Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useLargeDatasetStorage_test_ts__should_handle_large_datasets_with_chunking",
      "name": "should handle large datasets with chunking",
      "filePath": "src/hooks/__tests__/useLargeDatasetStorage.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useLargeDatasetStorage - should handle large datasets with chunking",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.955Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useLargeDatasetStorage_test_ts__should_prevent_stack_overflow_with_deep_nested_objects",
      "name": "should prevent stack overflow with deep nested objects",
      "filePath": "src/hooks/__tests__/useLargeDatasetStorage.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useLargeDatasetStorage - should prevent stack overflow with deep nested objects",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.955Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useLargeDatasetStorage_test_ts__should_handle_circular_references_gracefully",
      "name": "should handle circular references gracefully",
      "filePath": "src/hooks/__tests__/useLargeDatasetStorage.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useLargeDatasetStorage - should handle circular references gracefully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.955Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useLargeDatasetStorage_test_ts__should_migrate_from_legacy_single_storage_to_chunked_storage",
      "name": "should migrate from legacy single storage to chunked storage",
      "filePath": "src/hooks/__tests__/useLargeDatasetStorage.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useLargeDatasetStorage - should migrate from legacy single storage to chunked storage",
      "tags": ["async", "mocked"],
      "estimatedDuration": 260,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.955Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useKeyboardShortcuts_test_ts__should_trigger_action_when_matching_shortcut_is_pressed",
      "name": "should trigger action when matching shortcut is pressed",
      "filePath": "src/hooks/__tests__/useKeyboardShortcuts.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useKeyboardShortcuts - should trigger action when matching shortcut is pressed",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.956Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useKeyboardShortcuts_test_ts__should_trigger_action_for_keyboard_shortcut_with_modifier_keys",
      "name": "should trigger action for keyboard shortcut with modifier keys",
      "filePath": "src/hooks/__tests__/useKeyboardShortcuts.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useKeyboardShortcuts - should trigger action for keyboard shortcut with modifier keys",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.956Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useKeyboardShortcuts_test_ts__should_not_trigger_action_when_modifier_key_is_missing",
      "name": "should not trigger action when modifier key is missing",
      "filePath": "src/hooks/__tests__/useKeyboardShortcuts.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useKeyboardShortcuts - should not trigger action when modifier key is missing",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.956Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useKeyboardShortcuts_test_ts__should_trigger_escape_key_shortcut",
      "name": "should trigger escape key shortcut",
      "filePath": "src/hooks/__tests__/useKeyboardShortcuts.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useKeyboardShortcuts - should trigger escape key shortcut",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.956Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useKeyboardShortcuts_test_ts__should_not_trigger_shortcuts_when_disabled",
      "name": "should not trigger shortcuts when disabled",
      "filePath": "src/hooks/__tests__/useKeyboardShortcuts.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useKeyboardShortcuts - should not trigger shortcuts when disabled",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.956Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useKeyboardShortcuts_test_ts__should_not_trigger_shortcuts_when_typing_in_input_elements",
      "name": "should not trigger shortcuts when typing in input elements",
      "filePath": "src/hooks/__tests__/useKeyboardShortcuts.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useKeyboardShortcuts - should not trigger shortcuts when typing in input elements",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.956Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useKeyboardShortcuts_test_ts__should_not_trigger_shortcuts_when_typing_in_textarea_elements",
      "name": "should not trigger shortcuts when typing in textarea elements",
      "filePath": "src/hooks/__tests__/useKeyboardShortcuts.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useKeyboardShortcuts - should not trigger shortcuts when typing in textarea elements",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.956Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useKeyboardShortcuts_test_ts__should_prevent_default_behavior_when_shortcut_is_triggered",
      "name": "should prevent default behavior when shortcut is triggered",
      "filePath": "src/hooks/__tests__/useKeyboardShortcuts.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useKeyboardShortcuts - should prevent default behavior when shortcut is triggered",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.956Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useKeyboardShortcuts_test_ts__should_handle_case_insensitive_key_matching",
      "name": "should handle case-insensitive key matching",
      "filePath": "src/hooks/__tests__/useKeyboardShortcuts.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useKeyboardShortcuts - should handle case-insensitive key matching",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.957Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useKeyboardShortcuts_test_ts__should_clean_up_event_listeners_on_unmount",
      "name": "should clean up event listeners on unmount",
      "filePath": "src/hooks/__tests__/useKeyboardShortcuts.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useKeyboardShortcuts - should clean up event listeners on unmount",
      "tags": ["mocked"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.957Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_initialize_with_default_preferences",
      "name": "should initialize with default preferences",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should initialize with default preferences",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.957Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_detect_reduced_motion_preference",
      "name": "should detect reduced motion preference",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should detect reduced motion preference",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.957Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_update_preferences_when_media_query_changes",
      "name": "should update preferences when media query changes",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should update preferences when media query changes",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.958Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_save_and_restore_focus",
      "name": "should save and restore focus",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should save and restore focus",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.958Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_set_up_focus_trap",
      "name": "should set up focus trap",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should set up focus trap",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.958Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_initialize_with_default_state",
      "name": "should initialize with default state",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should initialize with default state",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.958Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_handle_arrow_down_navigation",
      "name": "should handle arrow down navigation",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should handle arrow down navigation",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.958Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_handle_arrow_up_navigation",
      "name": "should handle arrow up navigation",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should handle arrow up navigation",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.959Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_handle_Home_and_End_keys",
      "name": "should handle Home and End keys",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should handle Home and End keys",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.961Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_handle_Enter_key_selection",
      "name": "should handle Enter key selection",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should handle Enter key selection",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.961Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_handle_Escape_key",
      "name": "should handle Escape key",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should handle Escape key",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.961Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_reset_focus",
      "name": "should reset focus",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should reset focus",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.961Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_create_announcement_element_and_announce_message",
      "name": "should create announcement element and announce message",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should create announcement element and announce message",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.962Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_use_assertive_priority_when_specified",
      "name": "should use assertive priority when specified",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should use assertive priority when specified",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.962Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_register_and_unregister_skip_links",
      "name": "should register and unregister skip links",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should register and unregister skip links",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.962Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_not_register_duplicate_skip_links",
      "name": "should not register duplicate skip links",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should not register duplicate skip links",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.962Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_skip_to_content_element",
      "name": "should skip to content element",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should skip to content element",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.962Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_initialize_with_media_query_preference",
      "name": "should initialize with media query preference",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should initialize with media query preference",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.962Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_toggle_high_contrast_mode",
      "name": "should toggle high contrast mode",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should toggle high contrast mode",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.963Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_hooks___tests___useAccessibility_test_ts__should_manage_ARIA_descriptions",
      "name": "should manage ARIA descriptions",
      "filePath": "src/hooks/__tests__/useAccessibility.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "useAccessibilityPreferences - should manage ARIA descriptions",
      "tags": ["mocked"],
      "estimatedDuration": 300,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.963Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_",
      "name": "should return ",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return ",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.963Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_",
      "name": "should return ",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return ",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.963Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_natural_PO_name_with_",
      "name": "should return natural PO name with ",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return natural PO name with ",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.964Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_acting_PO_name_with_",
      "name": "should return acting PO name with ",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return acting PO name with ",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.964Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_external_PO_name_with_",
      "name": "should return external PO name with ",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return external PO name with ",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.964Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_just_the_name_when_no_PO_role_exists",
      "name": "should return just the name when no PO role exists",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return just the name when no PO role exists",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.964Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_only_active_team_members",
      "name": "should return only active team members",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return only active team members",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.964Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_empty_array_for_team_with_no_members",
      "name": "should return empty array for team with no members",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return empty array for team with no members",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.964Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_exclude_inactive_members",
      "name": "should exclude inactive members",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should exclude inactive members",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.964Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_the_person_with_PO_role_in_the_team",
      "name": "should return the person with PO role in the team",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return the person with PO role in the team",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.965Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_null_when_no_PO_role_exists",
      "name": "should return null when no PO role exists",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return null when no PO role exists",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.965Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_the_natural_PO_when_person_with_PO_role_exists_in_team",
      "name": "should return the natural PO when person with PO role exists in team",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return the natural PO when person with PO role exists in team",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.965Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_true_for_person_who_is_natural_PO",
      "name": "should return true for person who is natural PO",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return true for person who is natural PO",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.965Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_false_for_person_who_is_not_natural_PO",
      "name": "should return false for person who is not natural PO",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return false for person who is not natural PO",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.965Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_false_for_person_who_does_not_exist",
      "name": "should return false for person who does not exist",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return false for person who does not exist",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.965Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_false_for_person_without_team",
      "name": "should return false for person without team",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return false for person without team",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.965Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_prioritize_natural_PO_at_the_beginning",
      "name": "should prioritize natural PO at the beginning",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should prioritize natural PO at the beginning",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.965Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_all_team_members_when_no_natural_PO_exists",
      "name": "should return all team members when no natural PO exists",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return all team members when no natural PO exists",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.966Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_empty_array_for_team_with_no_members",
      "name": "should return empty array for team with no members",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return empty array for team with no members",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.966Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_division_name_when_division_exists",
      "name": "should return division name when division exists",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return division name when division exists",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.966Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_",
      "name": "should return ",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return ",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.966Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___teamUtils_test_ts__should_return_",
      "name": "should return ",
      "filePath": "src/utils/__tests__/teamUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "teamUtils - should return ",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.966Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_return_skill_names_for_valid_skill_IDs",
      "name": "should return skill names for valid skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should return skill names for valid skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.967Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_filter_out_invalid_skill_IDs",
      "name": "should filter out invalid skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should filter out invalid skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.967Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_return_empty_array_for_empty_skill_IDs",
      "name": "should return empty array for empty skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should return empty array for empty skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.968Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_return_empty_array_for_null_undefined_skill_IDs",
      "name": "should return empty array for null/undefined skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should return empty array for null/undefined skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.968Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_return_empty_array_for_null_undefined_skills",
      "name": "should return empty array for null/undefined skills",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should return empty array for null/undefined skills",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.969Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_empty_skills_array",
      "name": "should handle empty skills array",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle empty skills array",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.969Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_preserve_order_of_skill_IDs",
      "name": "should preserve order of skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should preserve order of skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.969Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_duplicate_skill_IDs",
      "name": "should handle duplicate skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle duplicate skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.970Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_return_skill_objects_for_valid_skill_IDs",
      "name": "should return skill objects for valid skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should return skill objects for valid skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.970Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_filter_out_invalid_skill_IDs",
      "name": "should filter out invalid skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should filter out invalid skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.971Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_return_empty_array_for_empty_skill_IDs",
      "name": "should return empty array for empty skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should return empty array for empty skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.971Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_return_empty_array_for_null_undefined_inputs",
      "name": "should return empty array for null/undefined inputs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should return empty array for null/undefined inputs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.971Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_preserve_order_of_skill_IDs",
      "name": "should preserve order of skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should preserve order of skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.972Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_duplicate_skill_IDs",
      "name": "should handle duplicate skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle duplicate skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.972Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_validate_all_valid_skill_IDs",
      "name": "should validate all valid skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should validate all valid skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.973Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_identify_invalid_skill_IDs",
      "name": "should identify invalid skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should identify invalid skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.973Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_all_invalid_skill_IDs",
      "name": "should handle all invalid skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle all invalid skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.973Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_empty_skill_IDs_array",
      "name": "should handle empty skill IDs array",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle empty skill IDs array",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.974Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_null_undefined_inputs_gracefully",
      "name": "should handle null/undefined inputs gracefully",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle null/undefined inputs gracefully",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.974Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_duplicate_skill_IDs",
      "name": "should handle duplicate skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle duplicate skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.974Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_empty_skills_array",
      "name": "should handle empty skills array",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle empty skills array",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.975Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_group_skills_by_category",
      "name": "should group skills by category",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should group skills by category",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.975Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_skills_with_empty_or_null_categories",
      "name": "should handle skills with empty or null categories",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle skills with empty or null categories",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.975Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_invalid_skill_IDs",
      "name": "should handle invalid skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle invalid skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.976Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_return_empty_object_for_empty_skill_IDs",
      "name": "should return empty object for empty skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should return empty object for empty skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.976Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_null_undefined_inputs",
      "name": "should handle null/undefined inputs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle null/undefined inputs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.977Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_single_category",
      "name": "should handle single category",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle single category",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.977Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_preserve_skill_order_within_categories",
      "name": "should preserve skill order within categories",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should preserve skill order within categories",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.978Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_return_unselected_skills",
      "name": "should return unselected skills",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should return unselected skills",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.979Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_return_all_skills_when_no_skills_are_selected",
      "name": "should return all skills when no skills are selected",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should return all skills when no skills are selected",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.980Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_return_all_skills_when_selectedSkillIds_is_null_undefined",
      "name": "should return all skills when selectedSkillIds is null/undefined",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should return all skills when selectedSkillIds is null/undefined",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.980Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_return_empty_array_when_allSkills_is_null_undefined",
      "name": "should return empty array when allSkills is null/undefined",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should return empty array when allSkills is null/undefined",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.981Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_all_skills_selected",
      "name": "should handle all skills selected",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle all skills selected",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.981Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_invalid_selected_skill_IDs",
      "name": "should handle invalid selected skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle invalid selected skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.981Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_duplicate_selected_skill_IDs",
      "name": "should handle duplicate selected skill IDs",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle duplicate selected skill IDs",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.982Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_preserve_original_skills_array_order",
      "name": "should preserve original skills array order",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should preserve original skills array order",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.982Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_empty_allSkills_array",
      "name": "should handle empty allSkills array",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle empty allSkills array",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.982Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_malformed_skill_objects",
      "name": "should handle malformed skill objects",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle malformed skill objects",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.983Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_very_large_skill_arrays_efficiently",
      "name": "should handle very large skill arrays efficiently",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle very large skill arrays efficiently",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.983Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_circular_references_gracefully",
      "name": "should handle circular references gracefully",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle circular references gracefully",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.983Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsUtils_test_ts__should_handle_special_characters_in_skill_IDs_and_names",
      "name": "should handle special characters in skill IDs and names",
      "filePath": "src/utils/__tests__/skillsUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "skillsUtils - should handle special characters in skill IDs and names",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.984Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_find_exact_matches_with_highest_confidence",
      "name": "should find exact matches with highest confidence",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should find exact matches with highest confidence",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.984Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_find_case_insensitive_exact_matches",
      "name": "should find case-insensitive exact matches",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should find case-insensitive exact matches",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.984Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_find_partial_matches",
      "name": "should find partial matches",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should find partial matches",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.985Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_find_fuzzy_matches_with_reasonable_confidence",
      "name": "should find fuzzy matches with reasonable confidence",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should find fuzzy matches with reasonable confidence",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.985Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_sort_matches_by_confidence_and_type_priority",
      "name": "should sort matches by confidence and type priority",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should sort matches by confidence and type priority",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.985Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_return_empty_array_when_no_matches_meet_threshold",
      "name": "should return empty array when no matches meet threshold",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should return empty array when no matches meet threshold",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.986Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_identify_team_already_using_skill_IDs",
      "name": "should identify team already using skill IDs",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should identify team already using skill IDs",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.986Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_categorize_skills_correctly_for_team_needing_migration",
      "name": "should categorize skills correctly for team needing migration",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should categorize skills correctly for team needing migration",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.986Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_handle_ambiguous_matches_correctly",
      "name": "should handle ambiguous matches correctly",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should handle ambiguous matches correctly",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.986Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_handle_empty_target_skills_gracefully",
      "name": "should handle empty target skills gracefully",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should handle empty target skills gracefully",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.986Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_create_skill_entities_with_proper_structure",
      "name": "should create skill entities with proper structure",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should create skill entities with proper structure",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.987Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_use_default_category_when_none_provided",
      "name": "should use default category when none provided",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should use default category when none provided",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.987Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_handle_empty_array",
      "name": "should handle empty array",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should handle empty array",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.987Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_trim_skill_names",
      "name": "should trim skill names",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should trim skill names",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.987Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_apply_automatic_matches_correctly",
      "name": "should apply automatic matches correctly",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should apply automatic matches correctly",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.988Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_apply_manual_mappings_for_ambiguous_matches",
      "name": "should apply manual mappings for ambiguous matches",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should apply manual mappings for ambiguous matches",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.988Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_preserve_team_properties_other_than_targetSkills",
      "name": "should preserve team properties other than targetSkills",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should preserve team properties other than targetSkills",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.988Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_pass_validation_for_successful_migration",
      "name": "should pass validation for successful migration",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should pass validation for successful migration",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.988Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_detect_invalid_skill_IDs",
      "name": "should detect invalid skill IDs",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should detect invalid skill IDs",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.989Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_detect_team_count_mismatch",
      "name": "should detect team count mismatch",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should detect team count mismatch",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.989Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_warn_about_skill_count_reductions",
      "name": "should warn about skill count reductions",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should warn about skill count reductions",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.989Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_analyze_all_teams_and_provide_summary",
      "name": "should analyze all teams and provide summary",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should analyze all teams and provide summary",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.990Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_count_already_migrated_teams_correctly",
      "name": "should count already migrated teams correctly",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should count already migrated teams correctly",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.990Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_generate_comprehensive_migration_preview",
      "name": "should generate comprehensive migration preview",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should generate comprehensive migration preview",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.990Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_identify_skills_needing_review",
      "name": "should identify skills needing review",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should identify skills needing review",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.990Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_deduplicate_missing_skills_across_teams",
      "name": "should deduplicate missing skills across teams",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should deduplicate missing skills across teams",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.991Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_handle_teams_with_null_targetSkills",
      "name": "should handle teams with null targetSkills",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should handle teams with null targetSkills",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.991Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_handle_teams_with_undefined_targetSkills",
      "name": "should handle teams with undefined targetSkills",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should handle teams with undefined targetSkills",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.991Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_handle_empty_skills_array",
      "name": "should handle empty skills array",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should handle empty skills array",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.991Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_handle_very_low_confidence_threshold",
      "name": "should handle very low confidence threshold",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should handle very low confidence threshold",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.992Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_handle_skills_with_special_characters",
      "name": "should handle skills with special characters",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should handle skills with special characters",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.992Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_handle_large_number_of_teams_efficiently",
      "name": "should handle large number of teams efficiently",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should handle large number of teams efficiently",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.992Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillsMigration_test_ts__should_handle_large_number_of_skills_efficiently",
      "name": "should handle large number of skills efficiently",
      "filePath": "src/utils/__tests__/skillsMigration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Skills Migration Utilities - should handle large number of skills efficiently",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.993Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_get_skills_from_project_solutions",
      "name": "should get skills from project solutions",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should get skills from project solutions",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.993Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_get_skills_from_project_specific_skills",
      "name": "should get skills from project-specific skills",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should get skills from project-specific skills",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.994Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_combine_solution_skills_and_project_specific_skills",
      "name": "should combine solution skills and project-specific skills",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should combine solution skills and project-specific skills",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.994Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_handle_projects_with_multiple_solutions",
      "name": "should handle projects with multiple solutions",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should handle projects with multiple solutions",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.994Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_handle_missing_solutions_gracefully",
      "name": "should handle missing solutions gracefully",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should handle missing solutions gracefully",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.994Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_calculate_fair_compatibility_for_partial_skill_match",
      "name": "should calculate fair compatibility for partial skill match",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should calculate fair compatibility for partial skill match",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.995Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_calculate_high_compatibility_for_full_stack_team",
      "name": "should calculate high compatibility for full stack team",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should calculate high compatibility for full stack team",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.996Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_identify_category_matches_for_related_skills",
      "name": "should identify category matches for related skills",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should identify category matches for related skills",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.996Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_provide_detailed_reasoning_for_recommendations",
      "name": "should provide detailed reasoning for recommendations",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should provide detailed reasoning for recommendations",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.997Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_handle_teams_with_no_matching_skills",
      "name": "should handle teams with no matching skills",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should handle teams with no matching skills",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.997Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_handle_empty_skill_requirements",
      "name": "should handle empty skill requirements",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should handle empty skill requirements",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.997Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_identify_the_best_team_for_a_project",
      "name": "should identify the best team for a project",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should identify the best team for a project",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.997Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_identify_skill_gaps_across_teams",
      "name": "should identify skill gaps across teams",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should identify skill gaps across teams",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.998Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_categorize_skill_priorities_correctly",
      "name": "should categorize skill priorities correctly",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should categorize skill priorities correctly",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.998Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_provide_training_and_hiring_recommendations",
      "name": "should provide training and hiring recommendations",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should provide training and hiring recommendations",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.998Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_handle_projects_with_no_matching_teams",
      "name": "should handle projects with no matching teams",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should handle projects with no matching teams",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.999Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_filter_teams_by_required_skills",
      "name": "should filter teams by required skills",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should filter teams by required skills",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.999Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_sort_results_by_compatibility_score",
      "name": "should sort results by compatibility score",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should sort results by compatibility score",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.999Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_include_matching_skills_in_results",
      "name": "should include matching skills in results",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should include matching skills in results",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:18.999Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_handle_empty_skill_requirements",
      "name": "should handle empty skill requirements",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should handle empty skill requirements",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.000Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_respect_minimum_compatibility_threshold",
      "name": "should respect minimum compatibility threshold",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should respect minimum compatibility threshold",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.000Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_calculate_overall_skill_coverage",
      "name": "should calculate overall skill coverage",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should calculate overall skill coverage",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.000Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_identify_skills_coverage_per_skill",
      "name": "should identify skills coverage per skill",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should identify skills coverage per skill",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.001Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_analyze_coverage_by_category",
      "name": "should analyze coverage by category",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should analyze coverage by category",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.001Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_identify_well_covered_and_at_risk_skills",
      "name": "should identify well-covered and at-risk skills",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should identify well-covered and at-risk skills",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.001Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_identify_categories_needing_attention",
      "name": "should identify categories needing attention",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should identify categories needing attention",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.002Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_handle_teams_with_no_skills",
      "name": "should handle teams with no skills",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should handle teams with no skills",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.002Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_recommend_best_teams_for_a_project",
      "name": "should recommend best teams for a project",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should recommend best teams for a project",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.002Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_provide_ranked_recommendations_with_explanations",
      "name": "should provide ranked recommendations with explanations",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should provide ranked recommendations with explanations",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.002Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_respect_maximum_recommendations_limit",
      "name": "should respect maximum recommendations limit",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should respect maximum recommendations limit",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.003Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_handle_projects_requiring_skills_no_teams_have",
      "name": "should handle projects requiring skills no teams have",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should handle projects requiring skills no teams have",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.003Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_provide_appropriate_recommendations_for_different_compatibility_levels",
      "name": "should provide appropriate recommendations for different compatibility levels",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should provide appropriate recommendations for different compatibility levels",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.003Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_handle_empty_teams_array",
      "name": "should handle empty teams array",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should handle empty teams array",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.003Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_handle_empty_skills_array",
      "name": "should handle empty skills array",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should handle empty skills array",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.004Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_handle_projects_with_no_solutions_or_skills",
      "name": "should handle projects with no solutions or skills",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should handle projects with no solutions or skills",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.004Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_handle_teams_with_null_or_undefined_targetSkills",
      "name": "should handle teams with null or undefined targetSkills",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should handle teams with null or undefined targetSkills",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.004Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_handle_missing_skill_references_gracefully",
      "name": "should handle missing skill references gracefully",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should handle missing skill references gracefully",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.005Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_handle_large_numbers_of_teams_efficiently",
      "name": "should handle large numbers of teams efficiently",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should handle large numbers of teams efficiently",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.005Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___skillBasedPlanning_test_ts__should_handle_large_numbers_of_skills_efficiently",
      "name": "should handle large numbers of skills efficiently",
      "filePath": "src/utils/__tests__/skillBasedPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills-Based Planning Utilities - should handle large numbers of skills efficiently",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.005Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.006Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.006Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_4_quarters_from_January_1st_FY_start",
      "name": "should generate 4 quarters from January 1st FY start",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should generate 4 quarters from January 1st FY start",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.006Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_4_quarters_from_April_1st_FY_start__UK_Australia_",
      "name": "should generate 4 quarters from April 1st FY start (UK/Australia)",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should generate 4 quarters from April 1st FY start (UK/Australia)",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.007Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_4_quarters_from_July_1st_FY_start__common_in_organizations_",
      "name": "should generate 4 quarters from July 1st FY start (common in organizations)",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should generate 4 quarters from July 1st FY start (common in organizations)",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.007Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_4_quarters_from_October_1st_FY_start__US_Government_",
      "name": "should generate 4 quarters from October 1st FY start (US Government)",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should generate 4 quarters from October 1st FY start (US Government)",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.007Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_handle_leap_year_correctly",
      "name": "should handle leap year correctly",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should handle leap year correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.007Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_unique_IDs_for_each_quarter",
      "name": "should generate unique IDs for each quarter",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should generate unique IDs for each quarter",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.008Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_throw_error_for_invalid_financial_year_date",
      "name": "should throw error for invalid financial year date",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should throw error for invalid financial year date",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.008Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_handle_month_boundaries_correctly",
      "name": "should handle month boundaries correctly",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should handle month boundaries correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.008Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.009Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.009Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_fortnightly_iterations__2_week_sprints_",
      "name": "should generate fortnightly iterations (2-week sprints)",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should generate fortnightly iterations (2-week sprints)",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.009Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_monthly_iterations",
      "name": "should generate monthly iterations",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should generate monthly iterations",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.009Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_6_weekly_iterations",
      "name": "should generate 6-weekly iterations",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should generate 6-weekly iterations",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.011Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_handle_iteration_overflow_by_truncating_to_quarter_end",
      "name": "should handle iteration overflow by truncating to quarter end",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should handle iteration overflow by truncating to quarter end",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.011Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_unique_iteration_IDs_and_names",
      "name": "should generate unique iteration IDs and names",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should generate unique iteration IDs and names",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.011Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_handle_leap_year_February_correctly",
      "name": "should handle leap year February correctly",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should handle leap year February correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.011Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_handle_cross_year_quarters",
      "name": "should handle cross-year quarters",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should handle cross-year quarters",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.012Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_handle_very_short_quarters_gracefully",
      "name": "should handle very short quarters gracefully",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should handle very short quarters gracefully",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.012Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_default_to_fortnightly_for_invalid_iteration_length",
      "name": "should default to fortnightly for invalid iteration length",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should default to fortnightly for invalid iteration length",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.012Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_complete_quarter_and_iteration_structure_for_a_full_FY",
      "name": "should generate complete quarter and iteration structure for a full FY",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should generate complete quarter and iteration structure for a full FY",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.012Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.013Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.013Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.013Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.013Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_maintain_referential_integrity_between_quarters_and_iterations",
      "name": "should maintain referential integrity between quarters and iterations",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should maintain referential integrity between quarters and iterations",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.014Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.014Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.014Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__should_handle_different_iteration_lengths_consistently_across_quarters",
      "name": "should handle different iteration lengths consistently across quarters",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - should handle different iteration lengths consistently across quarters",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.014Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.015Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "tracking",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Quarter and Iteration Generation Logic - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.015Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.016Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.016Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.017Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.017Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_leap_year_financial_years_correctly",
      "name": "should handle leap year financial years correctly",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should handle leap year financial years correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.018Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_custom_quarter_lengths",
      "name": "should handle custom quarter lengths",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should handle custom quarter lengths",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.018Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_very_short_financial_years",
      "name": "should handle very short financial years",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should handle very short financial years",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.019Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_validate_financial_year_date_consistency",
      "name": "should validate financial year date consistency",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should validate financial year date consistency",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.019Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_invalid_date_formats",
      "name": "should handle invalid date formats",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should handle invalid date formats",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.020Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_include_metadata_when_requested",
      "name": "should include metadata when requested",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should include metadata when requested",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.020Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_cross_year_financial_years",
      "name": "should handle cross-year financial years",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should handle cross-year financial years",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.020Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_generate_weekly_iterations_correctly",
      "name": "should generate weekly iterations correctly",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should generate weekly iterations correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.021Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_generate_tri_weekly_iterations_correctly",
      "name": "should generate tri-weekly iterations correctly",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should generate tri-weekly iterations correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.021Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_custom_iteration_lengths",
      "name": "should handle custom iteration lengths",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should handle custom iteration lengths",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.022Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_align_iterations_to_Monday_start",
      "name": "should align iterations to Monday start",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should align iterations to Monday start",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.022Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_different_naming_schemes",
      "name": "should handle different naming schemes",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should handle different naming schemes",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.022Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_partial_iterations_appropriately",
      "name": "should handle partial iterations appropriately",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should handle partial iterations appropriately",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.023Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_include_comprehensive_metadata",
      "name": "should include comprehensive metadata",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should include comprehensive metadata",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.023Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_calculate_working_days_correctly_when_excluding_weekends",
      "name": "should calculate working days correctly when excluding weekends",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should calculate working days correctly when excluding weekends",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.024Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_month_based_iterations_with_different_month_lengths",
      "name": "should handle month-based iterations with different month lengths",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should handle month-based iterations with different month lengths",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.024Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_edge_case_of_same_day_quarter",
      "name": "should handle edge case of same-day quarter",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should handle edge case of same-day quarter",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.025Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_generate_complete_quarterly_structure_for_multiple_financial_years",
      "name": "should generate complete quarterly structure for multiple financial years",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should generate complete quarterly structure for multiple financial years",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.025Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_mixed_iteration_lengths_within_same_quarter",
      "name": "should handle mixed iteration lengths within same quarter",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should handle mixed iteration lengths within same quarter",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.026Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_maintain_referential_integrity_across_quarters_and_iterations",
      "name": "should maintain referential integrity across quarters and iterations",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should maintain referential integrity across quarters and iterations",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.026Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_organizational_change_scenarios",
      "name": "should handle organizational change scenarios",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should handle organizational change scenarios",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.027Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_validate_business_rules_for_iteration_planning",
      "name": "should validate business rules for iteration planning",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should validate business rules for iteration planning",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.027Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_timezone_independent_date_calculations",
      "name": "should handle timezone-independent date calculations",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should handle timezone-independent date calculations",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.028Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_provide_comprehensive_quarter_and_iteration_statistics",
      "name": "should provide comprehensive quarter and iteration statistics",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should provide comprehensive quarter and iteration statistics",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.029Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_large_scale_generation_efficiently",
      "name": "should handle large-scale generation efficiently",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should handle large-scale generation efficiently",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.029Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_optimize_memory_usage_for_large_datasets",
      "name": "should optimize memory usage for large datasets",
      "filePath": "src/utils/__tests__/quarterIterationGeneration.comprehensive.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "tracking",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Quarter and Iteration Generation - Comprehensive Coverage - should optimize memory usage for large datasets",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.029Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_calculate_total_from_financial_year_budgets",
      "name": "should calculate total from financial year budgets",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should calculate total from financial year budgets",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.030Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_fall_back_to_legacy_budget_when_no_financial_year_budgets_exist",
      "name": "should fall back to legacy budget when no financial year budgets exist",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should fall back to legacy budget when no financial year budgets exist",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.030Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_return_0_when_no_budgets_exist_at_all",
      "name": "should return 0 when no budgets exist at all",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should return 0 when no budgets exist at all",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.030Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_prefer_financial_year_budgets_over_legacy_budget",
      "name": "should prefer financial year budgets over legacy budget",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should prefer financial year budgets over legacy budget",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.031Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_handle_empty_financial_year_budgets_array",
      "name": "should handle empty financial year budgets array",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should handle empty financial year budgets array",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.031Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_return_priorityOrder_when_set",
      "name": "should return priorityOrder when set",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should return priorityOrder when set",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.031Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_fall_back_to_priority_when_priorityOrder_is_not_set",
      "name": "should fall back to priority when priorityOrder is not set",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should fall back to priority when priorityOrder is not set",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.031Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_handle_priorityOrder_of_0",
      "name": "should handle priorityOrder of 0",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should handle priorityOrder of 0",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.031Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_return_budget_for_existing_financial_year",
      "name": "should return budget for existing financial year",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should return budget for existing financial year",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.032Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_return_0_for_non_existing_financial_year",
      "name": "should return 0 for non-existing financial year",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should return 0 for non-existing financial year",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.032Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_return_0_when_no_financial_year_budgets_exist",
      "name": "should return 0 when no financial year budgets exist",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should return 0 when no financial year budgets exist",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.032Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_add_new_budget_when_financial_year_does_not_exist",
      "name": "should add new budget when financial year does not exist",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should add new budget when financial year does not exist",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.032Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_update_existing_budget_when_financial_year_exists",
      "name": "should update existing budget when financial year exists",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should update existing budget when financial year exists",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.033Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_create_financial_year_budgets_array_when_it_does_not_exist",
      "name": "should create financial year budgets array when it does not exist",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should create financial year budgets array when it does not exist",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.033Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_not_mutate_the_original_project",
      "name": "should not mutate the original project",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should not mutate the original project",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.033Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_remove_budget_for_existing_financial_year",
      "name": "should remove budget for existing financial year",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should remove budget for existing financial year",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.033Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_return_unchanged_project_when_financial_year_does_not_exist",
      "name": "should return unchanged project when financial year does not exist",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should return unchanged project when financial year does not exist",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.033Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_return_unchanged_project_when_no_financial_year_budgets_exist",
      "name": "should return unchanged project when no financial year budgets exist",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should return unchanged project when no financial year budgets exist",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.034Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_return_all_financial_year_IDs_with_budgets",
      "name": "should return all financial year IDs with budgets",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should return all financial year IDs with budgets",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.034Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_return_empty_array_when_no_financial_year_budgets_exist",
      "name": "should return empty array when no financial year budgets exist",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should return empty array when no financial year budgets exist",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.034Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_return_empty_array_for_empty_budgets_array",
      "name": "should return empty array for empty budgets array",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should return empty array for empty budgets array",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.034Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_migrate_legacy_budget_to_financial_year_budget",
      "name": "should migrate legacy budget to financial year budget",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should migrate legacy budget to financial year budget",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.034Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_not_migrate_when_financial_year_budgets_already_exist",
      "name": "should not migrate when financial year budgets already exist",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should not migrate when financial year budgets already exist",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.034Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_not_migrate_when_no_legacy_budget_exists",
      "name": "should not migrate when no legacy budget exists",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should not migrate when no legacy budget exists",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.035Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___projectBudgetUtils_test_ts__should_not_mutate_the_original_project",
      "name": "should not mutate the original project",
      "filePath": "src/utils/__tests__/projectBudgetUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "projectBudgetUtils - should not mutate the original project",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.035Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___powerBiImportUtils_test_ts__should_successfully_parse_valid_epic_CSV_data",
      "name": "should successfully parse valid epic CSV data",
      "filePath": "src/utils/__tests__/powerBiImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBI Import Utils - should successfully parse valid epic CSV data",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.035Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___powerBiImportUtils_test_ts__should_handle_missing_required_fields",
      "name": "should handle missing required fields",
      "filePath": "src/utils/__tests__/powerBiImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBI Import Utils - should handle missing required fields",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.035Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___powerBiImportUtils_test_ts__should_validate_story_points_as_numbers",
      "name": "should validate story points as numbers",
      "filePath": "src/utils/__tests__/powerBiImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBI Import Utils - should validate story points as numbers",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.036Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___powerBiImportUtils_test_ts__should_handle_empty_CSV_content",
      "name": "should handle empty CSV content",
      "filePath": "src/utils/__tests__/powerBiImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBI Import Utils - should handle empty CSV content",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.036Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___powerBiImportUtils_test_ts__should_successfully_parse_valid_story_CSV_data",
      "name": "should successfully parse valid story CSV data",
      "filePath": "src/utils/__tests__/powerBiImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBI Import Utils - should successfully parse valid story CSV data",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.036Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___powerBiImportUtils_test_ts__should_handle_missing_required_fields_in_story_data",
      "name": "should handle missing required fields in story data",
      "filePath": "src/utils/__tests__/powerBiImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBI Import Utils - should handle missing required fields in story data",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.036Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___powerBiImportUtils_test_ts__should_correctly_aggregate_epic_and_story_data_by_team_and_sprint",
      "name": "should correctly aggregate epic and story data by team and sprint",
      "filePath": "src/utils/__tests__/powerBiImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBI Import Utils - should correctly aggregate epic and story data by team and sprint",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.036Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___powerBiImportUtils_test_ts__should_handle_unassigned_story_points__stories_without_matching_epics_",
      "name": "should handle unassigned story points (stories without matching epics)",
      "filePath": "src/utils/__tests__/powerBiImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBI Import Utils - should handle unassigned story points (stories without matching epics)",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.036Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___powerBiImportUtils_test_ts__should_calculate_correct_allocation_percentages",
      "name": "should calculate correct allocation percentages",
      "filePath": "src/utils/__tests__/powerBiImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBI Import Utils - should calculate correct allocation percentages",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.037Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___powerBiImportUtils_test_ts__should_handle_unassigned_points_as_Run_Work_allocation",
      "name": "should handle unassigned points as Run Work allocation",
      "filePath": "src/utils/__tests__/powerBiImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBI Import Utils - should handle unassigned points as Run Work allocation",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.037Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___powerBiImportUtils_test_ts__should_handle_zero_story_points_gracefully",
      "name": "should handle zero story points gracefully",
      "filePath": "src/utils/__tests__/powerBiImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBI Import Utils - should handle zero story points gracefully",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.037Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___powerBiImportUtils_test_ts__should_validate_team_allocation_totals",
      "name": "should validate team allocation totals",
      "filePath": "src/utils/__tests__/powerBiImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBI Import Utils - should validate team allocation totals",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.037Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___powerBiImportUtils_test_ts__should_validate_team_existence",
      "name": "should validate team existence",
      "filePath": "src/utils/__tests__/powerBiImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBI Import Utils - should validate team existence",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.037Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___powerBiImportUtils_test_ts__should_pass_validation_for_correct_data",
      "name": "should pass validation for correct data",
      "filePath": "src/utils/__tests__/powerBiImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PowerBI Import Utils - should pass validation for correct data",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.038Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_calculate_correct_capacity_for_perfectly_allocated_team",
      "name": "should calculate correct capacity for perfectly allocated team",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should calculate correct capacity for perfectly allocated team",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.038Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_detect_under_allocation_correctly",
      "name": "should detect under-allocation correctly",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should detect under-allocation correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.038Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_detect_over_allocation_correctly",
      "name": "should detect over-allocation correctly",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should detect over-allocation correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.039Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_team_with_no_allocations",
      "name": "should handle team with no allocations",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should handle team with no allocations",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.039Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_calculate_capacity_correctly_for_different_iteration_lengths",
      "name": "should calculate capacity correctly for different iteration lengths",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should calculate capacity correctly for different iteration lengths",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.039Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_missing_iteration_with_default_duration",
      "name": "should handle missing iteration with default duration",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should handle missing iteration with default duration",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.039Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_calculate_iteration_duration_correctly",
      "name": "should calculate iteration duration correctly",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should calculate iteration duration correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.040Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_edge_case_of_same_start_and_end_date",
      "name": "should handle edge case of same start and end date",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should handle edge case of same start and end date",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.040Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_aggregate_multiple_allocations_correctly",
      "name": "should aggregate multiple allocations correctly",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should aggregate multiple allocations correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.040Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_floating_point_percentages_accurately",
      "name": "should handle floating point percentages accurately",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should handle floating point percentages accurately",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.040Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_return_latest_target_end_date_when_no_actual_dates",
      "name": "should return latest target end date when no actual dates",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should return latest target end date when no actual dates",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.041Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_prioritize_actual_end_dates_over_target_dates",
      "name": "should prioritize actual end dates over target dates",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should prioritize actual end dates over target dates",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.041Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_return_undefined_for_epics_with_no_dates",
      "name": "should return undefined for epics with no dates",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should return undefined for epics with no dates",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.041Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_empty_epics_array",
      "name": "should handle empty epics array",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should handle empty epics array",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.041Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_mix_of_actual_and_target_dates_correctly",
      "name": "should handle mix of actual and target dates correctly",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should handle mix of actual and target dates correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.042Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_same_dates_correctly",
      "name": "should handle same dates correctly",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should handle same dates correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.042Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_calculate_team_utilization_across_multiple_iterations",
      "name": "should calculate team utilization across multiple iterations",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should calculate team utilization across multiple iterations",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.042Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_complex_project_timeline_calculations",
      "name": "should handle complex project timeline calculations",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should handle complex project timeline calculations",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.042Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_validate_quarter_level_capacity_planning",
      "name": "should validate quarter-level capacity planning",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should validate quarter-level capacity planning",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.043Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.043Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - T",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.043Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_real_world_allocation_scenarios_with_rounding",
      "name": "should handle real-world allocation scenarios with rounding",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should handle real-world allocation scenarios with rounding",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.043Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_test_ts__should_detect_capacity_conflicts_across_teams_and_iterations",
      "name": "should detect capacity conflicts across teams and iterations",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Planning Allocation Calculations - should detect capacity conflicts across teams and iterations",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.044Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_calculate_team_utilization_metrics_correctly",
      "name": "should calculate team utilization metrics correctly",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should calculate team utilization metrics correctly",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.044Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_handle_team_with_no_allocations",
      "name": "should handle team with no allocations",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should handle team with no allocations",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.044Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_identify_skill_gaps_from_epic_requirements",
      "name": "should identify skill gaps from epic requirements",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should identify skill gaps from epic requirements",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.044Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_validate_allocation_consistency",
      "name": "should validate allocation consistency",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should validate allocation consistency",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.045Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_detect_over_allocation_scenarios",
      "name": "should detect over-allocation scenarios",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should detect over-allocation scenarios",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.045Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_handle_empty_allocations",
      "name": "should handle empty allocations",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should handle empty allocations",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.045Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_generate_allocation_recommendations",
      "name": "should generate allocation recommendations",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should generate allocation recommendations",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.045Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_handle_recommendations_for_balanced_teams",
      "name": "should handle recommendations for balanced teams",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should handle recommendations for balanced teams",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.045Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_analyze_cross_team_dependencies",
      "name": "should analyze cross-team dependencies",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should analyze cross-team dependencies",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.045Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_identify_shared_epics_between_teams",
      "name": "should identify shared epics between teams",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should identify shared epics between teams",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.045Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_analyze_allocation_trends",
      "name": "should analyze allocation trends",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should analyze allocation trends",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.046Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_handle_empty_cycles_array",
      "name": "should handle empty cycles array",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should handle empty cycles array",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.046Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_optimize_allocation_distribution",
      "name": "should optimize allocation distribution",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should optimize allocation distribution",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.046Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_handle_optimization_with_constraints",
      "name": "should handle optimization with constraints",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should handle optimization with constraints",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.046Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_handle_missing_team_data",
      "name": "should handle missing team data",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should handle missing team data",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.046Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_handle_empty_allocations_gracefully",
      "name": "should handle empty allocations gracefully",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should handle empty allocations gracefully",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.046Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_handle_cycles_without_iterations",
      "name": "should handle cycles without iterations",
      "filePath": "src/utils/__tests__/planningAllocationCalculations.comprehensive.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Planning Allocation Calculations - Comprehensive Coverage - should handle cycles without iterations",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.046Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_a_valid_ground_truth_dataset",
      "name": "should generate a valid ground truth dataset",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should generate a valid ground truth dataset",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.047Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_reproducible_results_with_same_seed",
      "name": "should generate reproducible results with same seed",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should generate reproducible results with same seed",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.047Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_different_results_with_different_seeds",
      "name": "should generate different results with different seeds",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should generate different results with different seeds",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.047Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_project_statuses_with_valid_properties",
      "name": "should generate project statuses with valid properties",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should generate project statuses with valid properties",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.047Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_limit_project_count_based_on_template_complexity",
      "name": "should limit project count based on template complexity",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should limit project count based on template complexity",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.048Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_risks_with_valid_properties",
      "name": "should generate risks with valid properties",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should generate risks with valid properties",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.049Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_financials_with_valid_properties",
      "name": "should generate financials with valid properties",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should generate financials with valid properties",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.049Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_realistic_budget_ranges",
      "name": "should generate realistic budget ranges",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should generate realistic budget ranges",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.049Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_milestones_with_valid_properties",
      "name": "should generate milestones with valid properties",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should generate milestones with valid properties",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.049Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_team_updates_with_valid_properties",
      "name": "should generate team updates with valid properties",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should generate team updates with valid properties",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.050Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_correct_document_metadata",
      "name": "should generate correct document metadata",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should generate correct document metadata",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.050Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_calculate_total_expected_entities_correctly",
      "name": "should calculate total expected entities correctly",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should calculate total expected entities correctly",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.050Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_a_complete_test_suite",
      "name": "should generate a complete test suite",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should generate a complete test suite",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.050Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_datasets_for_each_template",
      "name": "should generate datasets for each template",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should generate datasets for each template",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.050Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_use_default_values_when_config_is_empty",
      "name": "should use default values when config is empty",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should use default values when config is empty",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.050Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_handle_invalid_template_IDs_gracefully",
      "name": "should handle invalid template IDs gracefully",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should handle invalid template IDs gracefully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.051Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_synthetic_documents",
      "name": "should generate synthetic documents",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should generate synthetic documents",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.051Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_create_a_complete_benchmark",
      "name": "should create a complete benchmark",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should create a complete benchmark",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.051Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_realistic_performance_metrics",
      "name": "should generate realistic performance metrics",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should generate realistic performance metrics",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.051Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_allow_custom_performance_metrics",
      "name": "should allow custom performance metrics",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should allow custom performance metrics",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.051Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_calculate_throughput_correctly",
      "name": "should calculate throughput correctly",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should calculate throughput correctly",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.051Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_include_timestamp",
      "name": "should include timestamp",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should include timestamp",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.052Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_have_valid_template_definitions",
      "name": "should have valid template definitions",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should have valid template definitions",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.052Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_have_unique_template_IDs",
      "name": "should have unique template IDs",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should have unique template IDs",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.052Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_include_expected_template_types",
      "name": "should include expected template types",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should include expected template types",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.052Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_provide_valid_sample_test_cases",
      "name": "should provide valid sample test cases",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should provide valid sample test cases",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.052Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_valid_datasets_from_sample_test_cases",
      "name": "should generate valid datasets from sample test cases",
      "filePath": "src/utils/__tests__/ocrTestDataGenerator.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "generateGroundTruthDataset - should generate valid datasets from sample test cases",
      "tags": ["async", "mocked"],
      "estimatedDuration": 195,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.053Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_start_and_complete_operations_successfully",
      "name": "should start and complete operations successfully",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should start and complete operations successfully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.053Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_track_multiple_concurrent_operations",
      "name": "should track multiple concurrent operations",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should track multiple concurrent operations",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.053Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_update_operation_stages",
      "name": "should update operation stages",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should update operation stages",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.054Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_handle_operation_errors",
      "name": "should handle operation errors",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should handle operation errors",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.054Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_throw_error_for_non_existent_operation",
      "name": "should throw error for non-existent operation",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should throw error for non-existent operation",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.054Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_generate_current_performance_snapshots",
      "name": "should generate current performance snapshots",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should generate current performance snapshots",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.055Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_track_performance_history",
      "name": "should track performance history",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should track performance history",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.055Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_calculate_performance_statistics",
      "name": "should calculate performance statistics",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should calculate performance statistics",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.055Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_detect_system_under_stress",
      "name": "should detect system under stress",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should detect system under stress",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.056Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_not_detect_stress_under_normal_conditions",
      "name": "should not detect stress under normal conditions",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should not detect stress under normal conditions",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.056Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_provide_optimization_recommendations_under_stress",
      "name": "should provide optimization recommendations under stress",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should provide optimization recommendations under stress",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.056Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_provide_idle_recommendations_when_system_is_idle",
      "name": "should provide idle recommendations when system is idle",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should provide idle recommendations when system is idle",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.056Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_trigger_processing_time_alert",
      "name": "should trigger processing time alert",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should trigger processing time alert",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.057Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_trigger_queue_length_alert",
      "name": "should trigger queue length alert",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should trigger queue length alert",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.057Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_trigger_throughput_alert",
      "name": "should trigger throughput alert",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should trigger throughput alert",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.057Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_trigger_error_rate_alert",
      "name": "should trigger error rate alert",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should trigger error rate alert",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.058Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_not_trigger_alerts_when_disabled",
      "name": "should not trigger alerts when disabled",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should not trigger alerts when disabled",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.058Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_reset_all_tracking_data",
      "name": "should reset all tracking data",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should reset all tracking data",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.058Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_stop_performance_tracking",
      "name": "should stop performance tracking",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should stop performance tracking",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.059Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_return_singleton_instance",
      "name": "should return singleton instance",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should return singleton instance",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.059Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_create_new_instance_with_custom_config",
      "name": "should create new instance with custom config",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should create new instance with custom config",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.059Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_wrap_async_function_with_monitoring",
      "name": "should wrap async function with monitoring",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should wrap async function with monitoring",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.060Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_handle_function_errors_and_record_them",
      "name": "should handle function errors and record them",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should handle function errors and record them",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.060Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_work_with_functions_that_have_multiple_parameters",
      "name": "should work with functions that have multiple parameters",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should work with functions that have multiple parameters",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.060Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_create_a_complete_monitored_pipeline",
      "name": "should create a complete monitored pipeline",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should create a complete monitored pipeline",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.061Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_configure_monitor_with_OCR_specific_thresholds",
      "name": "should configure monitor with OCR-specific thresholds",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should configure monitor with OCR-specific thresholds",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.061Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrPerformanceMonitor_test_ts__should_provide_bound_methods_that_work_correctly",
      "name": "should provide bound methods that work correctly",
      "filePath": "src/utils/__tests__/ocrPerformanceMonitor.test.ts",
      "type": "unit",
      "category": "performance",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCRPerformanceMonitor - should provide bound methods that work correctly",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.061Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_map_extracted_entities_to_existing_data",
      "name": "should map extracted entities to existing data",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should map extracted entities to existing data",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.062Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_successfully_map_similar_project_names",
      "name": "should successfully map similar project names",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should successfully map similar project names",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.062Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_identify_unmapped_entities",
      "name": "should identify unmapped entities",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should identify unmapped entities",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.063Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_map_team_updates_correctly",
      "name": "should map team updates correctly",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should map team updates correctly",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.063Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_map_milestones_with_project_context",
      "name": "should map milestones with project context",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should map milestones with project context",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.063Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_detect_conflicts_for_status_changes",
      "name": "should detect conflicts for status changes",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should detect conflicts for status changes",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.063Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_generate_appropriate_recommendations",
      "name": "should generate appropriate recommendations",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should generate appropriate recommendations",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.064Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_handle_empty_existing_data_gracefully",
      "name": "should handle empty existing data gracefully",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should handle empty existing data gracefully",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.064Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_handle_empty_extraction_result_gracefully",
      "name": "should handle empty extraction result gracefully",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should handle empty extraction result gracefully",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.064Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_generate_context_updates_for_projects",
      "name": "should generate context updates for projects",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should generate context updates for projects",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.064Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_generate_context_updates_for_epics",
      "name": "should generate context updates for epics",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should generate context updates for epics",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.065Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_create_new_risk_entries",
      "name": "should create new risk entries",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should create new risk entries",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.065Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_handle_milestone_updates",
      "name": "should handle milestone updates",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should handle milestone updates",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.065Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_preserve_original_data_for_unmapped_entities",
      "name": "should preserve original data for unmapped entities",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should preserve original data for unmapped entities",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.065Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_only_apply_high_confidence_mappings_automatically",
      "name": "should only apply high-confidence mappings automatically",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should only apply high-confidence mappings automatically",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.066Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_handle_fuzzy_string_matching_for_similar_names",
      "name": "should handle fuzzy string matching for similar names",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should handle fuzzy string matching for similar names",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.067Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_prioritize_exact_matches_over_fuzzy_matches",
      "name": "should prioritize exact matches over fuzzy matches",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should prioritize exact matches over fuzzy matches",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.067Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_detect_high_level_conflicts_for_major_status_changes",
      "name": "should detect high-level conflicts for major status changes",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should detect high-level conflicts for major status changes",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.067Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrMapping_test_ts__should_detect_date_conflicts_for_milestones",
      "name": "should detect date conflicts for milestones",
      "filePath": "src/utils/__tests__/ocrMapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "OCR Entity Mapping - should detect date conflicts for milestones",
      "tags": ["mocked", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.068Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_extract_all_entity_types_from_steering_committee_text",
      "name": "should extract all entity types from steering committee text",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should extract all entity types from steering committee text",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.068Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_extract_project_statuses_correctly",
      "name": "should extract project statuses correctly",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should extract project statuses correctly",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.068Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_extract_risks_with_impact_levels",
      "name": "should extract risks with impact levels",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should extract risks with impact levels",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.069Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_extract_financial_information",
      "name": "should extract financial information",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should extract financial information",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.069Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_extract_milestone_information",
      "name": "should extract milestone information",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should extract milestone information",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.069Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_extract_team_updates_with_utilization",
      "name": "should extract team updates with utilization",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should extract team updates with utilization",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.069Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_extract_commentary_with_sentiment_analysis",
      "name": "should extract commentary with sentiment analysis",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should extract commentary with sentiment analysis",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.070Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_calculate_extraction_metadata",
      "name": "should calculate extraction metadata",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should calculate extraction metadata",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.070Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_handle_empty_text_gracefully",
      "name": "should handle empty text gracefully",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should handle empty text gracefully",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.070Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_respect_confidence_threshold_settings",
      "name": "should respect confidence threshold settings",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should respect confidence threshold settings",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.071Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_handle_different_extraction_modes",
      "name": "should handle different extraction modes",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should handle different extraction modes",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.071Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_handle_malformed_status_text",
      "name": "should handle malformed status text",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should handle malformed status text",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.071Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_handle_special_characters_and_Unicode",
      "name": "should handle special characters and Unicode",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should handle special characters and Unicode",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.072Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_deduplicate_similar_entities",
      "name": "should deduplicate similar entities",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should deduplicate similar entities",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.072Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_handle_very_large_text_input",
      "name": "should handle very large text input",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should handle very large text input",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.072Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_normalize_different_status_representations",
      "name": "should normalize different status representations",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should normalize different status representations",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.073Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_detect_different_currencies",
      "name": "should detect different currencies",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should detect different currencies",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.073Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrExtraction_test_ts__should_normalize_different_date_formats",
      "name": "should normalize different date formats",
      "filePath": "src/utils/__tests__/ocrExtraction.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "OCR Entity Extraction - should normalize different date formats",
      "tags": ["mocked", "integration", "unit"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.074Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_correct_overall_accuracy_metrics",
      "name": "should calculate correct overall accuracy metrics",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should calculate correct overall accuracy metrics",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.075Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_precision_correctly",
      "name": "should calculate precision correctly",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should calculate precision correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.075Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_recall_correctly",
      "name": "should calculate recall correctly",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should calculate recall correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.076Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_F1_score_correctly",
      "name": "should calculate F1 score correctly",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should calculate F1 score correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.077Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_accuracy_score_correctly",
      "name": "should calculate accuracy score correctly",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should calculate accuracy score correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.077Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_project_status_accuracy_correctly",
      "name": "should calculate project status accuracy correctly",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should calculate project status accuracy correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.078Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_risk_accuracy_correctly",
      "name": "should calculate risk accuracy correctly",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should calculate risk accuracy correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.078Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_financial_accuracy_correctly",
      "name": "should calculate financial accuracy correctly",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should calculate financial accuracy correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.079Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_milestone_accuracy_correctly",
      "name": "should calculate milestone accuracy correctly",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should calculate milestone accuracy correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.079Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_team_update_accuracy_correctly",
      "name": "should calculate team update accuracy correctly",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should calculate team update accuracy correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.080Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_average_confidence_correctly",
      "name": "should calculate average confidence correctly",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should calculate average confidence correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.080Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_confidence_distribution_correctly",
      "name": "should calculate confidence distribution correctly",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should calculate confidence distribution correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.081Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_assess_text_quality",
      "name": "should assess text quality",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should assess text quality",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.082Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_assess_structural_accuracy",
      "name": "should assess structural accuracy",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should assess structural accuracy",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.082Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_generate_a_complete_benchmark_report",
      "name": "should generate a complete benchmark report",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should generate a complete benchmark report",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.083Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_correct_summary_statistics",
      "name": "should calculate correct summary statistics",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should calculate correct summary statistics",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.083Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_provide_meaningful_recommendations",
      "name": "should provide meaningful recommendations",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should provide meaningful recommendations",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.084Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_identify_improvement_areas",
      "name": "should identify improvement areas",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should identify improvement areas",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.085Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_analyze_trends_correctly",
      "name": "should analyze trends correctly",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should analyze trends correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.085Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_handle_empty_benchmarks_array",
      "name": "should handle empty benchmarks array",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should handle empty benchmarks array",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.087Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_handle_single_benchmark",
      "name": "should handle single benchmark",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should handle single benchmark",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.087Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_handle_extraction_result_with_no_entities",
      "name": "should handle extraction result with no entities",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should handle extraction result with no entities",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.088Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_handle_ground_truth_with_no_expected_entities",
      "name": "should handle ground truth with no expected entities",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should handle ground truth with no expected entities",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.088Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_handle_perfect_extraction_accuracy",
      "name": "should handle perfect extraction accuracy",
      "filePath": "src/utils/__tests__/ocrAccuracyMeasurement.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "calculateAccuracyMetrics - should handle perfect extraction accuracy",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.089Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___mathUtils_test_ts__should_add_two_positive_numbers",
      "name": "should add two positive numbers",
      "filePath": "src/utils/__tests__/mathUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Math Utils - should add two positive numbers",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.089Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___mathUtils_test_ts__should_add_negative_numbers",
      "name": "should add negative numbers",
      "filePath": "src/utils/__tests__/mathUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Math Utils - should add negative numbers",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.089Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___mathUtils_test_ts__should_add_zero",
      "name": "should add zero",
      "filePath": "src/utils/__tests__/mathUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Math Utils - should add zero",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.089Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___mathUtils_test_ts__should_subtract_two_numbers",
      "name": "should subtract two numbers",
      "filePath": "src/utils/__tests__/mathUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Math Utils - should subtract two numbers",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.089Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___mathUtils_test_ts__should_handle_negative_results",
      "name": "should handle negative results",
      "filePath": "src/utils/__tests__/mathUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Math Utils - should handle negative results",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.089Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___mathUtils_test_ts__should_multiply_two_numbers",
      "name": "should multiply two numbers",
      "filePath": "src/utils/__tests__/mathUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Math Utils - should multiply two numbers",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.089Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___mathUtils_test_ts__should_handle_zero",
      "name": "should handle zero",
      "filePath": "src/utils/__tests__/mathUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Math Utils - should handle zero",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.089Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___mathUtils_test_ts__should_divide_two_numbers",
      "name": "should divide two numbers",
      "filePath": "src/utils/__tests__/mathUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Math Utils - should divide two numbers",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.089Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___mathUtils_test_ts__should_throw_error_on_division_by_zero",
      "name": "should throw error on division by zero",
      "filePath": "src/utils/__tests__/mathUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Math Utils - should throw error on division by zero",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.089Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__should_complete_full_people_import_workflow_with_validation",
      "name": "should complete full people import workflow with validation",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - should complete full people import workflow with validation",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.090Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__should_handle_mixed_employment_types_and_validate_financial_data",
      "name": "should handle mixed employment types and validate financial data",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - should handle mixed employment types and validate financial data",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.090Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__should_create_consistent_role_definitions_with_rate_hierarchies",
      "name": "should create consistent role definitions with rate hierarchies",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - should create consistent role definitions with rate hierarchies",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.090Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - T",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.091Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - T",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.091Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__should_generate_complete_financial_year_structure",
      "name": "should generate complete financial year structure",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - should generate complete financial year structure",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.091Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__should_validate_quarter_continuity_and_iteration_generation",
      "name": "should validate quarter continuity and iteration generation",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - should validate quarter continuity and iteration generation",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.092Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - T",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.092Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - T",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.092Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__should_handle_different_financial_year_start_dates_correctly",
      "name": "should handle different financial year start dates correctly",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - should handle different financial year start dates correctly",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.093Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__should_complete_full_allocation_import_and_validation_workflow",
      "name": "should complete full allocation import and validation workflow",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - should complete full allocation import and validation workflow",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.093Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__should_integrate_with_capacity_planning_and_detect_over_under_allocation",
      "name": "should integrate with capacity planning and detect over/under allocation",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - should integrate with capacity planning and detect over/under allocation",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.093Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__should_handle_validation_errors_and_provide_meaningful_feedback",
      "name": "should handle validation errors and provide meaningful feedback",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - should handle validation errors and provide meaningful feedback",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.094Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__should_verify_imported_allocations_display_correctly_on_planning_page",
      "name": "should verify imported allocations display correctly on planning page",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - should verify imported allocations display correctly on planning page",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.094Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__should_complete_full_setup_and_planning_workflow",
      "name": "should complete full setup and planning workflow",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - should complete full setup and planning workflow",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.095Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - T",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.095Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__T",
      "name": "T",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - T",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.095Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___importWorkflowIntegration_test_ts__should_handle_realistic_enterprise_scenario_with_multiple_imports",
      "name": "should handle realistic enterprise scenario with multiple imports",
      "filePath": "src/utils/__tests__/importWorkflowIntegration.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Import Workflow Integration Tests - should handle realistic enterprise scenario with multiple imports",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.095Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_return_empty_for_0_",
      "name": "should return empty for 0%",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should return empty for 0%",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.096Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_return_under_for_low_percentages",
      "name": "should return under for low percentages",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should return under for low percentages",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.096Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_return_optimal_for_good_percentages",
      "name": "should return optimal for good percentages",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should return optimal for good percentages",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.096Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_return_near_full_for_high_percentages",
      "name": "should return near-full for high percentages",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should return near-full for high percentages",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.096Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_return_over_for_overallocated_percentages",
      "name": "should return over for overallocated percentages",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should return over for overallocated percentages",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.096Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_return_critical_for_very_high_percentages",
      "name": "should return critical for very high percentages",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should return critical for very high percentages",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.097Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_return_0_for_empty_level",
      "name": "should return 0 for empty level",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should return 0 for empty level",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.097Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_return_appropriate_intensity_for_under_level",
      "name": "should return appropriate intensity for under level",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should return appropriate intensity for under level",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.097Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_return_appropriate_intensity_for_optimal_level",
      "name": "should return appropriate intensity for optimal level",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should return appropriate intensity for optimal level",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.097Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_return_appropriate_intensity_for_critical_level",
      "name": "should return appropriate intensity for critical level",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should return appropriate intensity for critical level",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.097Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_return_appropriate_colors_for_empty_level",
      "name": "should return appropriate colors for empty level",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should return appropriate colors for empty level",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.097Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_return_appropriate_colors_for_optimal_level",
      "name": "should return appropriate colors for optimal level",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should return appropriate colors for optimal level",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.097Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_return_appropriate_colors_for_critical_level",
      "name": "should return appropriate colors for critical level",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should return appropriate colors for critical level",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.097Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_adjust_alpha_based_on_intensity",
      "name": "should adjust alpha based on intensity",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should adjust alpha based on intensity",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.097Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_generate_heat_map_data_for_all_team_iteration_combinations",
      "name": "should generate heat map data for all team-iteration combinations",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should generate heat map data for all team-iteration combinations",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.098Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_calculate_correct_statistics",
      "name": "should calculate correct statistics",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should calculate correct statistics",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.098Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_handle_edge_cases",
      "name": "should handle edge cases",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should handle edge cases",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.098Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_return_complete_legend_data",
      "name": "should return complete legend data",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should return complete legend data",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.098Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___heatMapUtils_test_ts__should_work_end_to_end_with_realistic_data",
      "name": "should work end-to-end with realistic data",
      "filePath": "src/utils/__tests__/heatMapUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "heatMapUtils - should work end-to-end with realistic data",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.098Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialYearPlanning_test_ts__should_create_financial_year_with_complete_Q1_Q4_structure",
      "name": "should create financial year with complete Q1-Q4 structure",
      "filePath": "src/utils/__tests__/financialYearPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Year Planning Integration - should create financial year with complete Q1-Q4 structure",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.099Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialYearPlanning_test_ts__should_correctly_link_projects_to_financial_year_timeline",
      "name": "should correctly link projects to financial year timeline",
      "filePath": "src/utils/__tests__/financialYearPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Year Planning Integration - should correctly link projects to financial year timeline",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.100Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialYearPlanning_test_ts__should_correctly_map_project_solutions_to_required_skills",
      "name": "should correctly map project solutions to required skills",
      "filePath": "src/utils/__tests__/financialYearPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Year Planning Integration - should correctly map project solutions to required skills",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.100Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialYearPlanning_test_ts__should_handle_overlapping_skills_from_multiple_solutions",
      "name": "should handle overlapping skills from multiple solutions",
      "filePath": "src/utils/__tests__/financialYearPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Year Planning Integration - should handle overlapping skills from multiple solutions",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.101Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialYearPlanning_test_ts__should_find_teams_with_matching_skills_for_frontend_solution",
      "name": "should find teams with matching skills for frontend solution",
      "filePath": "src/utils/__tests__/financialYearPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Year Planning Integration - should find teams with matching skills for frontend solution",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.101Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialYearPlanning_test_ts__should_provide_team_recommendations_based_on_skill_compatibility",
      "name": "should provide team recommendations based on skill compatibility",
      "filePath": "src/utils/__tests__/financialYearPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Year Planning Integration - should provide team recommendations based on skill compatibility",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.101Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialYearPlanning_test_ts__should_calculate_available_capacity_considering_existing_allocations",
      "name": "should calculate available capacity considering existing allocations",
      "filePath": "src/utils/__tests__/financialYearPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Year Planning Integration - should calculate available capacity considering existing allocations",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.102Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialYearPlanning_test_ts__should_identify_teams_with_full_availability",
      "name": "should identify teams with full availability",
      "filePath": "src/utils/__tests__/financialYearPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Year Planning Integration - should identify teams with full availability",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.103Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialYearPlanning_test_ts__should_aggregate_capacity_across_all_quarters_for_financial_year_planning",
      "name": "should aggregate capacity across all quarters for financial year planning",
      "filePath": "src/utils/__tests__/financialYearPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Year Planning Integration - should aggregate capacity across all quarters for financial year planning",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.104Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialYearPlanning_test_ts__should_prioritize_highest_priority_project_for_team_selection",
      "name": "should prioritize highest-priority project for team selection",
      "filePath": "src/utils/__tests__/financialYearPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Year Planning Integration - should prioritize highest-priority project for team selection",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.104Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialYearPlanning_test_ts__should_allocate_teams_considering_both_skills_and_availability",
      "name": "should allocate teams considering both skills and availability",
      "filePath": "src/utils/__tests__/financialYearPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Year Planning Integration - should allocate teams considering both skills and availability",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.104Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialYearPlanning_test_ts__should_handle_resource_conflicts_when_teams_are_needed_by_multiple_projects",
      "name": "should handle resource conflicts when teams are needed by multiple projects",
      "filePath": "src/utils/__tests__/financialYearPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Year Planning Integration - should handle resource conflicts when teams are needed by multiple projects",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.105Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialYearPlanning_test_ts__should_provide_actionable_recommendations_for_team_allocation_conflicts",
      "name": "should provide actionable recommendations for team allocation conflicts",
      "filePath": "src/utils/__tests__/financialYearPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Year Planning Integration - should provide actionable recommendations for team allocation conflicts",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.105Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialYearPlanning_test_ts__should_execute_complete_financial_year_planning_process",
      "name": "should execute complete financial year planning process",
      "filePath": "src/utils/__tests__/financialYearPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Year Planning Integration - should execute complete financial year planning process",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.106Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialYearPlanning_test_ts__should_provide_comprehensive_planning_summary_with_actionable_insights",
      "name": "should provide comprehensive planning summary with actionable insights",
      "filePath": "src/utils/__tests__/financialYearPlanning.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Year Planning Integration - should provide comprehensive planning summary with actionable insights",
      "tags": ["mocked", "integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.106Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialImpactUtils_test_ts__should_correctly_calculate_the_total_cost_of_a_team_with_mixed_employment_types",
      "name": "should correctly calculate the total cost of a team with mixed employment types",
      "filePath": "src/utils/__tests__/financialImpactUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "financialImpactUtils - should correctly calculate the total cost of a team with mixed employment types",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.106Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialImpactUtils_test_ts__should_correctly_analyze_the_financial_impact_of_moving_a_person",
      "name": "should correctly analyze the financial impact of moving a person",
      "filePath": "src/utils/__tests__/financialImpactUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "financialImpactUtils - should correctly analyze the financial impact of moving a person",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.106Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialImpactUtils_test_ts__should_throw_an_error_if_the_original_team_is_not_found",
      "name": "should throw an error if the original team is not found",
      "filePath": "src/utils/__tests__/financialImpactUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "financialImpactUtils - should throw an error if the original team is not found",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.106Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialImpactUtils_test_ts__should_throw_an_error_if_the_person_role_is_not_found",
      "name": "should throw an error if the person role is not found",
      "filePath": "src/utils/__tests__/financialImpactUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "financialImpactUtils - should throw an error if the person role is not found",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.106Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialCalculations_test_ts__should_calculate_cost_for_a_permanent_employee_with_annual_salary",
      "name": "should calculate cost for a permanent employee with annual salary",
      "filePath": "src/utils/__tests__/financialCalculations.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Calculations - should calculate cost for a permanent employee with annual salary",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.107Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialCalculations_test_ts__should_calculate_cost_for_a_contractor_with_hourly_rate",
      "name": "should calculate cost for a contractor with hourly rate",
      "filePath": "src/utils/__tests__/financialCalculations.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Calculations - should calculate cost for a contractor with hourly rate",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.107Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialCalculations_test_ts__should_calculate_cost_for_a_contractor_with_daily_rate",
      "name": "should calculate cost for a contractor with daily rate",
      "filePath": "src/utils/__tests__/financialCalculations.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Calculations - should calculate cost for a contractor with daily rate",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.107Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialCalculations_test_ts__should_use_role_default_annual_salary_for_permanent_employee_if_no_personal_salary",
      "name": "should use role default annual salary for permanent employee if no personal salary",
      "filePath": "src/utils/__tests__/financialCalculations.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Calculations - should use role default annual salary for permanent employee if no personal salary",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.107Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialCalculations_test_ts__should_use_role_default_hourly_rate_for_contractor_if_no_personal_rate",
      "name": "should use role default hourly rate for contractor if no personal rate",
      "filePath": "src/utils/__tests__/financialCalculations.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Calculations - should use role default hourly rate for contractor if no personal rate",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.107Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialCalculations_test_ts__should_use_legacy_fallback_if_no_other_rates_are_available",
      "name": "should use legacy fallback if no other rates are available",
      "filePath": "src/utils/__tests__/financialCalculations.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Calculations - should use legacy fallback if no other rates are available",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.108Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialCalculations_test_ts__should_calculate_the_total_weekly_cost_for_a_team",
      "name": "should calculate the total weekly cost for a team",
      "filePath": "src/utils/__tests__/financialCalculations.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Calculations - should calculate the total weekly cost for a team",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.108Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialCalculations_test_ts__should_calculate_the_total_monthly_cost_for_a_team",
      "name": "should calculate the total monthly cost for a team",
      "filePath": "src/utils/__tests__/financialCalculations.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Calculations - should calculate the total monthly cost for a team",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.108Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialCalculations_test_ts__should_calculate_the_total_quarterly_cost_for_a_team",
      "name": "should calculate the total quarterly cost for a team",
      "filePath": "src/utils/__tests__/financialCalculations.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Calculations - should calculate the total quarterly cost for a team",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.108Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialCalculations_test_ts__should_calculate_the_total_annual_cost_for_a_team",
      "name": "should calculate the total annual cost for a team",
      "filePath": "src/utils/__tests__/financialCalculations.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Calculations - should calculate the total annual cost for a team",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.108Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___financialCalculations_test_ts__should_calculate_the_cost_of_an_allocation",
      "name": "should calculate the cost of an allocation",
      "filePath": "src/utils/__tests__/financialCalculations.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Calculations - should calculate the cost of an allocation",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.109Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___epic_type_mapping_test_ts__should_return_true_for_Critical_Run",
      "name": "should return true for Critical Run",
      "filePath": "src/utils/__tests__/epic-type-mapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Epic Type Mapping - should return true for Critical Run",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.109Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___epic_type_mapping_test_ts__should_return_false_for_Change_Work_types",
      "name": "should return false for Change Work types",
      "filePath": "src/utils/__tests__/epic-type-mapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Epic Type Mapping - should return false for Change Work types",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.109Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___epic_type_mapping_test_ts__should_be_case_sensitive",
      "name": "should be case sensitive",
      "filePath": "src/utils/__tests__/epic-type-mapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Epic Type Mapping - should be case sensitive",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.109Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___epic_type_mapping_test_ts__should_return_true_for_Change_Work_types",
      "name": "should return true for Change Work types",
      "filePath": "src/utils/__tests__/epic-type-mapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Epic Type Mapping - should return true for Change Work types",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.109Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___epic_type_mapping_test_ts__should_return_false_for_Run_Work_types",
      "name": "should return false for Run Work types",
      "filePath": "src/utils/__tests__/epic-type-mapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Epic Type Mapping - should return false for Run Work types",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.109Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___epic_type_mapping_test_ts__should_be_case_sensitive",
      "name": "should be case sensitive",
      "filePath": "src/utils/__tests__/epic-type-mapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Epic Type Mapping - should be case sensitive",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.109Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___epic_type_mapping_test_ts__should_correctly_identify_Run_Work_Epic_Types",
      "name": "should correctly identify Run Work Epic Types",
      "filePath": "src/utils/__tests__/epic-type-mapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Epic Type Mapping - should correctly identify Run Work Epic Types",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.109Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___epic_type_mapping_test_ts__should_correctly_identify_Change_Work_Epic_Types",
      "name": "should correctly identify Change Work Epic Types",
      "filePath": "src/utils/__tests__/epic-type-mapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Epic Type Mapping - should correctly identify Change Work Epic Types",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.109Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___epic_type_mapping_test_ts__should_handle_project_detection_in_planning_allocations",
      "name": "should handle project detection in planning allocations",
      "filePath": "src/utils/__tests__/epic-type-mapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Epic Type Mapping - should handle project detection in planning allocations",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.109Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___epic_type_mapping_test_ts__should_handle_direct_project_references_without_epic_names",
      "name": "should handle direct project references without epic names",
      "filePath": "src/utils/__tests__/epic-type-mapping.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Epic Type Mapping - should handle direct project references without epic names",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.110Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_parse_CSV_and_clean_quoted_fields",
      "name": "should parse CSV and clean quoted fields",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should parse CSV and clean quoted fields",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.110Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_handle_mixed_quoted_and_unquoted_fields",
      "name": "should handle mixed quoted and unquoted fields",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should handle mixed quoted and unquoted fields",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.110Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_parse_basic_people_CSV_with_default_values",
      "name": "should parse basic people CSV with default values",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should parse basic people CSV with default values",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.110Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_parse_enhanced_people_CSV_with_all_fields",
      "name": "should parse enhanced people CSV with all fields",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should parse enhanced people CSV with all fields",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.111Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_create_divisions_with_proper_attributes",
      "name": "should create divisions with proper attributes",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should create divisions with proper attributes",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.111Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_create_teams_with_division_assignments_and_capacity",
      "name": "should create teams with division assignments and capacity",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should create teams with division assignments and capacity",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.111Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_create_roles_with_multiple_rate_types",
      "name": "should create roles with multiple rate types",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should create roles with multiple rate types",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.111Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_handle_duplicate_teams_and_roles_correctly",
      "name": "should handle duplicate teams and roles correctly",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should handle duplicate teams and roles correctly",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.112Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_handle_missing_optional_fields_gracefully",
      "name": "should handle missing optional fields gracefully",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should handle missing optional fields gracefully",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.112Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_parse_employment_type_correctly",
      "name": "should parse employment type correctly",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should parse employment type correctly",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.112Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_parse_boolean_fields_correctly",
      "name": "should parse boolean fields correctly",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should parse boolean fields correctly",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.112Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_skip_rows_with_insufficient_data",
      "name": "should skip rows with insufficient data",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should skip rows with insufficient data",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.113Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_parse_teams_with_divisions_correctly",
      "name": "should parse teams with divisions correctly",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should parse teams with divisions correctly",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.113Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_handle_teams_without_divisions",
      "name": "should handle teams without divisions",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should handle teams without divisions",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.113Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_deduplicate_divisions",
      "name": "should deduplicate divisions",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should deduplicate divisions",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.113Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_parse_roles_with_multiple_rate_types",
      "name": "should parse roles with multiple rate types",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should parse roles with multiple rate types",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.113Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_handle_missing_rate_fields",
      "name": "should handle missing rate fields",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should handle missing rate fields",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.114Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_filter_out_empty_role_names",
      "name": "should filter out empty role names",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should filter out empty role names",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.114Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_export_people_with_all_fields",
      "name": "should export people with all fields",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should export people with all fields",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.114Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_handle_missing_related_data_gracefully",
      "name": "should handle missing related data gracefully",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should handle missing related data gracefully",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.114Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_properly_escape_CSV_fields",
      "name": "should properly escape CSV fields",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should properly escape CSV fields",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.115Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_export_teams_with_divisions",
      "name": "should export teams with divisions",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should export teams with divisions",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.115Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_handle_teams_without_divisions",
      "name": "should handle teams without divisions",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should handle teams without divisions",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.115Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_export_roles_with_all_rate_types",
      "name": "should export roles with all rate types",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should export roles with all rate types",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.115Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_handle_missing_optional_fields",
      "name": "should handle missing optional fields",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should handle missing optional fields",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.115Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_maintain_referential_integrity_between_people__teams__and_roles",
      "name": "should maintain referential integrity between people, teams, and roles",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should maintain referential integrity between people, teams, and roles",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.116Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvUtils_test_ts__should_generate_consistent_IDs_for_similar_data",
      "name": "should generate consistent IDs for similar data",
      "filePath": "src/utils/__tests__/enhancedCsvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "enhancedCsvUtils - Enhanced People/Teams/Roles Import - should generate consistent IDs for similar data",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.116Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_parse_basic_CSV_with_explicit_headers",
      "name": "should parse basic CSV with explicit headers",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should parse basic CSV with explicit headers",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.116Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_auto_detect_semicolon_delimiter",
      "name": "should auto-detect semicolon delimiter",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should auto-detect semicolon delimiter",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.117Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_auto_detect_tab_delimiter",
      "name": "should auto-detect tab delimiter",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should auto-detect tab delimiter",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.117Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_handle_CSV_without_headers",
      "name": "should handle CSV without headers",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should handle CSV without headers",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.117Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_handle_quoted_fields",
      "name": "should handle quoted fields",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should handle quoted fields",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.117Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_limit_rows_when_maxRows_specified",
      "name": "should limit rows when maxRows specified",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should limit rows when maxRows specified",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.118Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_skip_empty_rows_when_configured",
      "name": "should skip empty rows when configured",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should skip empty rows when configured",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.118Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_provide_basic_metadata",
      "name": "should provide basic metadata",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should provide basic metadata",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.118Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_handle_different_line_endings",
      "name": "should handle different line endings",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should handle different line endings",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.118Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_handle_empty_content_gracefully",
      "name": "should handle empty content gracefully",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should handle empty content gracefully",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.119Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_call_progress_callback_for_large_files",
      "name": "should call progress callback for large files",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should call progress callback for large files",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.119Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_handle_basic_parsing_errors_gracefully",
      "name": "should handle basic parsing errors gracefully",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should handle basic parsing errors gracefully",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.119Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_detect_headers_when_specified",
      "name": "should detect headers when specified",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should detect headers when specified",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.119Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_validate_required_headers_when_specified",
      "name": "should validate required headers when specified",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should validate required headers when specified",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.120Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_validate_required_fields_in_data",
      "name": "should validate required fields in data",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should validate required fields in data",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.120Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_consistently_detect_the_same_delimiter_across_similar_files",
      "name": "should consistently detect the same delimiter across similar files",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should consistently detect the same delimiter across similar files",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.120Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_prefer_more_consistent_delimiter_when_multiple_are_possible",
      "name": "should prefer more consistent delimiter when multiple are possible",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should prefer more consistent delimiter when multiple are possible",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.122Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_work_as_wrapper_for_EnhancedCSVParser_parse",
      "name": "should work as wrapper for EnhancedCSVParser.parse",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should work as wrapper for EnhancedCSVParser.parse",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.122Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_pass_options_correctly",
      "name": "should pass options correctly",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should pass options correctly",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.122Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_handle_reasonably_large_files_efficiently",
      "name": "should handle reasonably large files efficiently",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should handle reasonably large files efficiently",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.122Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_report_accurate_processing_time_in_metadata",
      "name": "should report accurate processing time in metadata",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should report accurate processing time in metadata",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.123Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_handle_malformed_CSV_gracefully",
      "name": "should handle malformed CSV gracefully",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should handle malformed CSV gracefully",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.123Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_handle_very_large_field_values",
      "name": "should handle very large field values",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should handle very large field values",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.123Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_handle_Unicode_characters",
      "name": "should handle Unicode characters",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should handle Unicode characters",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.123Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_test_ts__should_handle_mixed_delimiters_gracefully",
      "name": "should handle mixed delimiters gracefully",
      "filePath": "src/utils/__tests__/enhancedCsvParser.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "EnhancedCSVParser - Basic CSV Parsing - should handle mixed delimiters gracefully",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.124Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_simple_test_ts__should_parse_simple_CSV_data",
      "name": "should parse simple CSV data",
      "filePath": "src/utils/__tests__/enhancedCsvParser.simple.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "EnhancedCSVParser - Core Functionality - should parse simple CSV data",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.124Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_simple_test_ts__should_handle_empty_content",
      "name": "should handle empty content",
      "filePath": "src/utils/__tests__/enhancedCsvParser.simple.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "EnhancedCSVParser - Core Functionality - should handle empty content",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.124Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_simple_test_ts__should_handle_malformed_content_gracefully",
      "name": "should handle malformed content gracefully",
      "filePath": "src/utils/__tests__/enhancedCsvParser.simple.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "EnhancedCSVParser - Core Functionality - should handle malformed content gracefully",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.124Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_complete_quarterly_allocation_import",
      "name": "should handle complete quarterly allocation import",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should handle complete quarterly allocation import",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.125Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_mixed_valid_invalid_data_with_detailed_error_reporting",
      "name": "should handle mixed valid/invalid data with detailed error reporting",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should handle mixed valid/invalid data with detailed error reporting",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.125Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_case_insensitive_team_and_epic_matching",
      "name": "should handle case-insensitive team and epic matching",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should handle case-insensitive team and epic matching",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.125Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_validate_percentage_allocation_constraints",
      "name": "should validate percentage allocation constraints",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should validate percentage allocation constraints",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.126Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_large_CSV_files_with_performance_tracking",
      "name": "should handle large CSV files with performance tracking",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should handle large CSV files with performance tracking",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.126Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_CSV_with_different_delimiter_formats",
      "name": "should handle CSV with different delimiter formats",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should handle CSV with different delimiter formats",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.126Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_CSV_with_quoted_fields_and_special_characters",
      "name": "should handle CSV with quoted fields and special characters",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should handle CSV with quoted fields and special characters",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.127Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_provide_detailed_import_statistics",
      "name": "should provide detailed import statistics",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should provide detailed import statistics",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.127Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_malformed_CSV_gracefully",
      "name": "should handle malformed CSV gracefully",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should handle malformed CSV gracefully",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.128Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_empty_CSV_file",
      "name": "should handle empty CSV file",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should handle empty CSV file",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.128Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_CSV_with_only_headers",
      "name": "should handle CSV with only headers",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should handle CSV with only headers",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.128Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_CSV_with_missing_required_columns",
      "name": "should handle CSV with missing required columns",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should handle CSV with missing required columns",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.129Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_provide_recovery_suggestions_for_common_errors",
      "name": "should provide recovery suggestions for common errors",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should provide recovery suggestions for common errors",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.129Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_concurrent_CSV_processing",
      "name": "should handle concurrent CSV processing",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should handle concurrent CSV processing",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.129Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_memory_efficient_processing_of_large_files",
      "name": "should handle memory-efficient processing of large files",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should handle memory-efficient processing of large files",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.130Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_validate_allocation_percentages_sum_to_reasonable_totals",
      "name": "should validate allocation percentages sum to reasonable totals",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should validate allocation percentages sum to reasonable totals",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.130Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___enhancedCsvParser_integration_test_ts__should_validate_cross_team_epic_dependencies",
      "name": "should validate cross-team epic dependencies",
      "filePath": "src/utils/__tests__/enhancedCsvParser.integration.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Enhanced CSV Parser Integration Tests - should validate cross-team epic dependencies",
      "tags": ["async", "mocked", "integration", "mobile"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.130Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_parse_ISO_date_format__yyyy_MM_dd_",
      "name": "should parse ISO date format (yyyy-MM-dd)",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should parse ISO date format (yyyy-MM-dd)",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.131Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_parse_US_date_format__MM_dd_yyyy_",
      "name": "should parse US date format (MM/dd/yyyy)",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should parse US date format (MM/dd/yyyy)",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.131Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_parse_UK_date_format__dd_MM_yyyy_",
      "name": "should parse UK date format (dd/MM/yyyy)",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should parse UK date format (dd/MM/yyyy)",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.131Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_parse_short_US_date_format__M_d_yyyy_",
      "name": "should parse short US date format (M/d/yyyy)",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should parse short US date format (M/d/yyyy)",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.131Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_parse_dot_separated_format__yyyy_MM_dd_",
      "name": "should parse dot-separated format (yyyy.MM.dd)",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should parse dot-separated format (yyyy.MM.dd)",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.132Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_parse_dash_separated_format__dd_MM_yyyy_",
      "name": "should parse dash-separated format (dd-MM-yyyy)",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should parse dash-separated format (dd-MM-yyyy)",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.132Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_parse_slash_separated_ISO_format__yyyy_MM_dd_",
      "name": "should parse slash-separated ISO format (yyyy/MM/dd)",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should parse slash-separated ISO format (yyyy/MM/dd)",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.132Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_invalid_date_strings",
      "name": "should handle invalid date strings",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle invalid date strings",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.132Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_null_and_undefined_inputs",
      "name": "should handle null and undefined inputs",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle null and undefined inputs",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.132Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_use_fallback_parsing_for_other_formats",
      "name": "should use fallback parsing for other formats",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should use fallback parsing for other formats",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.132Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_edge_cases",
      "name": "should handle edge cases",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle edge cases",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.133Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_return_current_FY_when_current_date_is_after_FY_start",
      "name": "should return current FY when current date is after FY start",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should return current FY when current date is after FY start",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.133Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_return_previous_FY_when_current_date_is_before_FY_start",
      "name": "should return previous FY when current date is before FY start",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should return previous FY when current date is before FY start",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.133Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_FY_starting_on_exact_date",
      "name": "should handle FY starting on exact date",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle FY starting on exact date",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.133Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_January_1st_FY_start",
      "name": "should handle January 1st FY start",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle January 1st FY start",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.133Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_July_1st_FY_start__common_in_many_organizations_",
      "name": "should handle July 1st FY start (common in many organizations)",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle July 1st FY start (common in many organizations)",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.133Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_cross_year_scenarios",
      "name": "should handle cross-year scenarios",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle cross-year scenarios",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.134Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_use_current_date_when_no_currentDate_provided",
      "name": "should use current date when no currentDate provided",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should use current date when no currentDate provided",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.134Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_leap_year_FY_start",
      "name": "should handle leap year FY start",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle leap year FY start",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.134Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_different_month_and_day_combinations",
      "name": "should handle different month and day combinations",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle different month and day combinations",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.134Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_maintain_proper_date_format",
      "name": "should maintain proper date format",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should maintain proper date format",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.134Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_return_quarter_containing_current_date",
      "name": "should return quarter containing current date",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should return quarter containing current date",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.134Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_return_quarter_when_current_date_is_on_start_date",
      "name": "should return quarter when current date is on start date",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should return quarter when current date is on start date",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.135Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_return_quarter_when_current_date_is_on_end_date",
      "name": "should return quarter when current date is on end date",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should return quarter when current date is on end date",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.135Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_return_next_future_quarter_when_current_date_is_between_quarters",
      "name": "should return next future quarter when current date is between quarters",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should return next future quarter when current date is between quarters",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.135Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_return_first_quarter_chronologically_when_no_current_or_future_quarters",
      "name": "should return first quarter chronologically when no current or future quarters",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should return first quarter chronologically when no current or future quarters",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.135Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_empty_quarters_array",
      "name": "should handle empty quarters array",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle empty quarters array",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.135Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_null_quarters_array",
      "name": "should handle null quarters array",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle null quarters array",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.135Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_use_current_date_when_no_currentDate_provided",
      "name": "should use current date when no currentDate provided",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should use current date when no currentDate provided",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.136Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_unsorted_quarters_array",
      "name": "should handle unsorted quarters array",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle unsorted quarters array",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.136Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_overlapping_quarters_by_returning_first_match",
      "name": "should handle overlapping quarters by returning first match",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle overlapping quarters by returning first match",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.136Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_financial_year_quarters__April_March_",
      "name": "should handle financial year quarters (April-March)",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle financial year quarters (April-March)",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.136Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_select_nearest_future_quarter_correctly",
      "name": "should select nearest future quarter correctly",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should select nearest future quarter correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.136Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_quarter_boundaries_correctly",
      "name": "should handle quarter boundaries correctly",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle quarter boundaries correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.136Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_timezone_independent_date_comparison",
      "name": "should handle timezone-independent date comparison",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle timezone-independent date comparison",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.136Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_work_together_for_complete_FY_quarter_navigation",
      "name": "should work together for complete FY quarter navigation",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should work together for complete FY quarter navigation",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.137Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dateUtils_test_ts__should_handle_year_end_transitions_properly",
      "name": "should handle year-end transitions properly",
      "filePath": "src/utils/__tests__/dateUtils.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "dateUtils - Quarter/Iteration Business Logic - should handle year-end transitions properly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 150,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.137Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dashboardUtils_test_ts__returns_dashboard_data_structure_when_cycles_array_is_empty",
      "name": "returns dashboard data structure when cycles array is empty",
      "filePath": "src/utils/__tests__/dashboardUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "dashboardUtils - returns dashboard data structure when cycles array is empty",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.137Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dashboardUtils_test_ts__returns_dashboard_data_structure_when_cycles_array_is_undefined",
      "name": "returns dashboard data structure when cycles array is undefined",
      "filePath": "src/utils/__tests__/dashboardUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "dashboardUtils - returns dashboard data structure when cycles array is undefined",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.137Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dashboardUtils_test_ts__returns_dashboard_data_when_cycles_are_provided",
      "name": "returns dashboard data when cycles are provided",
      "filePath": "src/utils/__tests__/dashboardUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "dashboardUtils - returns dashboard data when cycles are provided",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.137Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dashboardUtils_test_ts__handles_cycles_that_are_not_currently_active",
      "name": "handles cycles that are not currently active",
      "filePath": "src/utils/__tests__/dashboardUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "dashboardUtils - handles cycles that are not currently active",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.137Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___dashboardUtils_test_ts__handles_empty_allocations_and_projects",
      "name": "handles empty allocations and projects",
      "filePath": "src/utils/__tests__/dashboardUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "dashboardUtils - handles empty allocations and projects",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.137Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_format_small_amounts_without_decimals",
      "name": "should format small amounts without decimals",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should format small amounts without decimals",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.137Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_format_thousands_with_commas",
      "name": "should format thousands with commas",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should format thousands with commas",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.138Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_format_hundreds_of_thousands_with_commas",
      "name": "should format hundreds of thousands with commas",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should format hundreds of thousands with commas",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.138Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_format_millions_with_commas",
      "name": "should format millions with commas",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should format millions with commas",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.139Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_format_billions_with_commas",
      "name": "should format billions with commas",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should format billions with commas",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.139Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_handle_zero_and_negative_values",
      "name": "should handle zero and negative values",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should handle zero and negative values",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.139Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_round_decimal_values_to_whole_numbers",
      "name": "should round decimal values to whole numbers",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should round decimal values to whole numbers",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.140Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_format_with_EUR_currency_code",
      "name": "should format with EUR currency code",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should format with EUR currency code",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.140Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_format_with_GBP_currency_code",
      "name": "should format with GBP currency code",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should format with GBP currency code",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.140Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_format_with_JPY_currency_code",
      "name": "should format with JPY currency code",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should format with JPY currency code",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.140Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_convert_dollar_symbol_to_USD_currency",
      "name": "should convert dollar symbol to USD currency",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should convert dollar symbol to USD currency",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.140Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_convert_euro_symbol_to_EUR_currency",
      "name": "should convert euro symbol to EUR currency",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should convert euro symbol to EUR currency",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.141Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_convert_pound_symbol_to_GBP_currency",
      "name": "should convert pound symbol to GBP currency",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should convert pound symbol to GBP currency",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.141Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_convert_yen_symbol_to_JPY_currency",
      "name": "should convert yen symbol to JPY currency",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should convert yen symbol to JPY currency",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.141Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_convert_rupee_symbol_to_INR_currency",
      "name": "should convert rupee symbol to INR currency",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should convert rupee symbol to INR currency",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.141Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_convert_ruble_symbol_to_RUB_currency",
      "name": "should convert ruble symbol to RUB currency",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should convert ruble symbol to RUB currency",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.141Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_fallback_to_USD_for_unknown_currency_symbols",
      "name": "should fallback to USD for unknown currency symbols",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should fallback to USD for unknown currency symbols",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.141Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_format_with_German_locale__uses_dots_for_thousands_",
      "name": "should format with German locale (uses dots for thousands)",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should format with German locale (uses dots for thousands)",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.142Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_format_with_French_locale",
      "name": "should format with French locale",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should format with French locale",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.142Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_handle_very_large_numbers",
      "name": "should handle very large numbers",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should handle very large numbers",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.142Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_handle_NaN_and_undefined_values_gracefully",
      "name": "should handle NaN and undefined values gracefully",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should handle NaN and undefined values gracefully",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.142Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_handle_null_and_undefined_values",
      "name": "should handle null and undefined values",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should handle null and undefined values",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.142Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___currency_test_ts__should_handle_Infinity_values",
      "name": "should handle Infinity values",
      "filePath": "src/utils/__tests__/currency.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "formatCurrency - should handle Infinity values",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.143Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_parse_simple_CSV_without_quotes",
      "name": "should parse simple CSV without quotes",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should parse simple CSV without quotes",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.143Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_handle_CSV_with_quoted_fields",
      "name": "should handle CSV with quoted fields",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should handle CSV with quoted fields",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.143Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_handle_CSV_with_commas_inside_quoted_fields",
      "name": "should handle CSV with commas inside quoted fields",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should handle CSV with commas inside quoted fields",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.144Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_handle_mixed_quoted_and_unquoted_fields",
      "name": "should handle mixed quoted and unquoted fields",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should handle mixed quoted and unquoted fields",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.144Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_handle_empty_fields",
      "name": "should handle empty fields",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should handle empty fields",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.144Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_trim_whitespace_from_fields",
      "name": "should trim whitespace from fields",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should trim whitespace from fields",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.144Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_handle_single_row_CSV",
      "name": "should handle single row CSV",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should handle single row CSV",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.144Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_handle_empty_input",
      "name": "should handle empty input",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should handle empty input",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.144Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_parse_valid_people_CSV_with_teams",
      "name": "should parse valid people CSV with teams",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should parse valid people CSV with teams",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.145Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_handle_people_CSV_with_quoted_fields",
      "name": "should handle people CSV with quoted fields",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should handle people CSV with quoted fields",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.145Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_skip_rows_with_insufficient_data",
      "name": "should skip rows with insufficient data",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should skip rows with insufficient data",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.145Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_handle_duplicate_team_IDs_by_reusing_existing_team",
      "name": "should handle duplicate team IDs by reusing existing team",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should handle duplicate team IDs by reusing existing team",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.145Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_generate_unique_person_IDs",
      "name": "should generate unique person IDs",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should generate unique person IDs",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.145Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_set_default_employment_type_and_start_date",
      "name": "should set default employment type and start date",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should set default employment type and start date",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.145Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_parse_valid_projects_CSV",
      "name": "should parse valid projects CSV",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should parse valid projects CSV",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.146Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_handle_missing_optional_fields",
      "name": "should handle missing optional fields",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should handle missing optional fields",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.146Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_handle_quoted_project_data",
      "name": "should handle quoted project data",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should handle quoted project data",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.146Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_filter_out_invalid_rows",
      "name": "should filter out invalid rows",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should filter out invalid rows",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.146Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_generate_unique_project_IDs",
      "name": "should generate unique project IDs",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should generate unique project IDs",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.146Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_set_default_values_for_missing_fields",
      "name": "should set default values for missing fields",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should set default values for missing fields",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.146Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_parse_valid_roles_CSV",
      "name": "should parse valid roles CSV",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should parse valid roles CSV",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.147Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_handle_roles_with_spaces_in_names",
      "name": "should handle roles with spaces in names",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should handle roles with spaces in names",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.147Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_handle_quoted_role_data",
      "name": "should handle quoted role data",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should handle quoted role data",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.147Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_filter_out_invalid_rows",
      "name": "should filter out invalid rows",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should filter out invalid rows",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.147Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_handle_non_numeric_rates_gracefully",
      "name": "should handle non-numeric rates gracefully",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should handle non-numeric rates gracefully",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.147Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_generate_consistent_role_IDs",
      "name": "should generate consistent role IDs",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should generate consistent role IDs",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.148Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___csvUtils_test_ts__should_set_default_values_for_role_properties",
      "name": "should set default values for role properties",
      "filePath": "src/utils/__tests__/csvUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "csvUtils - Basic CSV Parsing - should set default values for role properties",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.148Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___conflictDetection_test_ts__should_detect_no_conflicts_with_normal_allocations",
      "name": "should detect no conflicts with normal allocations",
      "filePath": "src/utils/__tests__/conflictDetection.test.ts",
      "type": "unit",
      "category": "security",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "conflictDetection - should detect no conflicts with normal allocations",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.148Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___conflictDetection_test_ts__should_detect_overallocation_conflicts",
      "name": "should detect overallocation conflicts",
      "filePath": "src/utils/__tests__/conflictDetection.test.ts",
      "type": "unit",
      "category": "security",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "conflictDetection - should detect overallocation conflicts",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.149Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___conflictDetection_test_ts__should_detect_critical_overallocation",
      "name": "should detect critical overallocation",
      "filePath": "src/utils/__tests__/conflictDetection.test.ts",
      "type": "unit",
      "category": "security",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "conflictDetection - should detect critical overallocation",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.149Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___conflictDetection_test_ts__should_detect_resource_contention_conflicts",
      "name": "should detect resource contention conflicts",
      "filePath": "src/utils/__tests__/conflictDetection.test.ts",
      "type": "unit",
      "category": "security",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "conflictDetection - should detect resource contention conflicts",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.149Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___conflictDetection_test_ts__should_detect_dependency_violation_conflicts",
      "name": "should detect dependency violation conflicts",
      "filePath": "src/utils/__tests__/conflictDetection.test.ts",
      "type": "unit",
      "category": "security",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "conflictDetection - should detect dependency violation conflicts",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.150Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___conflictDetection_test_ts__should_detect_timeline_overlap_conflicts",
      "name": "should detect timeline overlap conflicts",
      "filePath": "src/utils/__tests__/conflictDetection.test.ts",
      "type": "unit",
      "category": "security",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "conflictDetection - should detect timeline overlap conflicts",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.150Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___conflictDetection_test_ts__should_calculate_correct_summary_statistics",
      "name": "should calculate correct summary statistics",
      "filePath": "src/utils/__tests__/conflictDetection.test.ts",
      "type": "unit",
      "category": "security",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "conflictDetection - should calculate correct summary statistics",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.151Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___conflictDetection_test_ts__should_filter_conflicts_by_selected_cycle",
      "name": "should filter conflicts by selected cycle",
      "filePath": "src/utils/__tests__/conflictDetection.test.ts",
      "type": "unit",
      "category": "security",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "conflictDetection - should filter conflicts by selected cycle",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.151Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___conflictDetection_test_ts__should_return_correct_icons_for_conflict_types",
      "name": "should return correct icons for conflict types",
      "filePath": "src/utils/__tests__/conflictDetection.test.ts",
      "type": "unit",
      "category": "security",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "conflictDetection - should return correct icons for conflict types",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.151Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___conflictDetection_test_ts__should_return_correct_colors_for_severity_levels",
      "name": "should return correct colors for severity levels",
      "filePath": "src/utils/__tests__/conflictDetection.test.ts",
      "type": "unit",
      "category": "security",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "conflictDetection - should return correct colors for severity levels",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.152Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___conflictDetection_test_ts__should_handle_empty_allocations",
      "name": "should handle empty allocations",
      "filePath": "src/utils/__tests__/conflictDetection.test.ts",
      "type": "unit",
      "category": "security",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "conflictDetection - should handle empty allocations",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.152Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___conflictDetection_test_ts__should_handle_empty_teams",
      "name": "should handle empty teams",
      "filePath": "src/utils/__tests__/conflictDetection.test.ts",
      "type": "unit",
      "category": "security",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "conflictDetection - should handle empty teams",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.152Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___conflictDetection_test_ts__should_handle_run_work_allocations__without_epic_",
      "name": "should handle run work allocations (without epic)",
      "filePath": "src/utils/__tests__/conflictDetection.test.ts",
      "type": "unit",
      "category": "security",
      "featureArea": "core",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "conflictDetection - should handle run work allocations (without epic)",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.153Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___calculateProjectedEndDate_test_ts__should_return_the_original_project_end_date",
      "name": "should return the original project end date",
      "filePath": "src/utils/__tests__/calculateProjectedEndDate.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "calculateProjectedEndDate - should return the original project end date",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.153Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___calculateProjectedEndDate_test_ts__should_return_null_when_project_has_no_end_date",
      "name": "should return null when project has no end date",
      "filePath": "src/utils/__tests__/calculateProjectedEndDate.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "calculateProjectedEndDate - should return null when project has no end date",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.154Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___calculateProjectedEndDate_test_ts__should_return_the_latest_completion_date_from_epics",
      "name": "should return the latest completion date from epics",
      "filePath": "src/utils/__tests__/calculateProjectedEndDate.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "calculateProjectedEndDate - should return the latest completion date from epics",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.154Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___calculateProjectedEndDate_test_ts__should_return_the_latest_completion_date_from_milestones",
      "name": "should return the latest completion date from milestones",
      "filePath": "src/utils/__tests__/calculateProjectedEndDate.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "calculateProjectedEndDate - should return the latest completion date from milestones",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.154Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___calculateProjectedEndDate_test_ts__should_calculate_projected_end_date_based_on_team_capacity_and_epic_effort",
      "name": "should calculate projected end date based on team capacity and epic effort",
      "filePath": "src/utils/__tests__/calculateProjectedEndDate.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "calculateProjectedEndDate - should calculate projected end date based on team capacity and epic effort",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.154Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___calculateProjectedEndDate_test_ts__should_handle_teams_with_no_allocations_gracefully",
      "name": "should handle teams with no allocations gracefully",
      "filePath": "src/utils/__tests__/calculateProjectedEndDate.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "calculateProjectedEndDate - should handle teams with no allocations gracefully",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.155Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___calculateProjectedEndDate_test_ts__should_factor_in_team_member_availability_and_capacity",
      "name": "should factor in team member availability and capacity",
      "filePath": "src/utils/__tests__/calculateProjectedEndDate.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "calculateProjectedEndDate - should factor in team member availability and capacity",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.155Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___calculateProjectedEndDate_test_ts__should_account_for_different_role_velocities",
      "name": "should account for different role velocities",
      "filePath": "src/utils/__tests__/calculateProjectedEndDate.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "calculateProjectedEndDate - should account for different role velocities",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.155Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___calculateProjectedEndDate_test_ts__should_handle_projects_with_missing_data_gracefully",
      "name": "should handle projects with missing data gracefully",
      "filePath": "src/utils/__tests__/calculateProjectedEndDate.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "calculateProjectedEndDate - should handle projects with missing data gracefully",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.155Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___calculateProjectedEndDate_test_ts__should_handle_epics_without_effort_estimates",
      "name": "should handle epics without effort estimates",
      "filePath": "src/utils/__tests__/calculateProjectedEndDate.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "calculateProjectedEndDate - should handle epics without effort estimates",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.155Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___calculateProjectedEndDate_test_ts__should_handle_teams_with_zero_capacity",
      "name": "should handle teams with zero capacity",
      "filePath": "src/utils/__tests__/calculateProjectedEndDate.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "calculateProjectedEndDate - should handle teams with zero capacity",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.156Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___calculateProjectedEndDate_test_ts__should_validate_input_parameters",
      "name": "should validate input parameters",
      "filePath": "src/utils/__tests__/calculateProjectedEndDate.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "calculateProjectedEndDate - should validate input parameters",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.156Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___calculateProjectedEndDate_test_ts__should_handle_projects_with_mixed_epic_statuses_correctly",
      "name": "should handle projects with mixed epic statuses correctly",
      "filePath": "src/utils/__tests__/calculateProjectedEndDate.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "calculateProjectedEndDate - should handle projects with mixed epic statuses correctly",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.156Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___calculateProjectedEndDate_test_ts__should_prioritize_milestone_dates_over_epic_estimates_when_milestones_are_later",
      "name": "should prioritize milestone dates over epic estimates when milestones are later",
      "filePath": "src/utils/__tests__/calculateProjectedEndDate.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "core",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "calculateProjectedEndDate - should prioritize milestone dates over epic estimates when milestones are later",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.156Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_parse_valid_allocation_CSV",
      "name": "should parse valid allocation CSV",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should parse valid allocation CSV",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.157Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_handle_quoted_CSV_fields",
      "name": "should handle quoted CSV fields",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should handle quoted CSV fields",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.157Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_filter_out_rows_with_missing_required_fields",
      "name": "should filter out rows with missing required fields",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should filter out rows with missing required fields",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.158Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_parse_numeric_fields_correctly",
      "name": "should parse numeric fields correctly",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should parse numeric fields correctly",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.158Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_handle_empty_CSV_gracefully",
      "name": "should handle empty CSV gracefully",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should handle empty CSV gracefully",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.158Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_handle_CSV_with_only_headers",
      "name": "should handle CSV with only headers",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should handle CSV with only headers",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.158Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_validate_correct_allocation_data",
      "name": "should validate correct allocation data",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should validate correct allocation data",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.159Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_catch_invalid_team_names",
      "name": "should catch invalid team names",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should catch invalid team names",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.159Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_catch_invalid_quarter_names",
      "name": "should catch invalid quarter names",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should catch invalid quarter names",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.161Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_catch_invalid_epic_names_for_project_work",
      "name": "should catch invalid epic names for project work",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should catch invalid epic names for project work",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.161Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_catch_invalid_run_work_category_names",
      "name": "should catch invalid run work category names",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should catch invalid run work category names",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.161Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_validate_percentage_ranges",
      "name": "should validate percentage ranges",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should validate percentage ranges",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.162Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_provide_accurate_row_numbers_in_error_messages",
      "name": "should provide accurate row numbers in error messages",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should provide accurate row numbers in error messages",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.162Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_handle_case_insensitive_matching",
      "name": "should handle case-insensitive matching",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should handle case-insensitive matching",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.162Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_convert_valid_import_data_to_allocations",
      "name": "should convert valid import data to allocations",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should convert valid import data to allocations",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.163Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_generate_unique_allocation_IDs",
      "name": "should generate unique allocation IDs",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should generate unique allocation IDs",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.163Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_skip_rows_with_missing_team_or_quarter_references",
      "name": "should skip rows with missing team or quarter references",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should skip rows with missing team or quarter references",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.163Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_handle_case_insensitive_name_matching",
      "name": "should handle case-insensitive name matching",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should handle case-insensitive name matching",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.164Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_handle_complete_import_workflow_with_mixed_epic_types",
      "name": "should handle complete import workflow with mixed epic types",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should handle complete import workflow with mixed epic types",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.164Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_handle_quarterly_allocation_planning_across_multiple_teams",
      "name": "should handle quarterly allocation planning across multiple teams",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should handle quarterly allocation planning across multiple teams",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.164Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_handle_malformed_CSV_gracefully",
      "name": "should handle malformed CSV gracefully",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should handle malformed CSV gracefully",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.165Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_handle_very_large_percentage_allocations",
      "name": "should handle very large percentage allocations",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should handle very large percentage allocations",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.165Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___allocationImportUtils_test_ts__should_handle_floating_point_percentage_precision",
      "name": "should handle floating-point percentage precision",
      "filePath": "src/utils/__tests__/allocationImportUtils.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "allocationImportUtils - Planning Allocation Import - should handle floating-point percentage precision",
      "tags": ["mocked", "integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.165Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": [],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___advanced_import_validation_test_ts___n",
      "name": "\\n",
      "filePath": "src/utils/__tests__/advanced-import-validation.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Advanced Import Validation - \\n",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.166Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___advanced_import_validation_test_ts___",
      "name": ",",
      "filePath": "src/utils/__tests__/advanced-import-validation.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Advanced Import Validation - ,",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.166Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___advanced_import_validation_test_ts__should_handle_case_insensitive_validation_for_Project_Status",
      "name": "should handle case-insensitive validation for Project Status",
      "filePath": "src/utils/__tests__/advanced-import-validation.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Advanced Import Validation - should handle case-insensitive validation for Project Status",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.166Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___advanced_import_validation_test_ts__should_not_validate_text_fields_against_existing_options",
      "name": "should not validate text fields against existing options",
      "filePath": "src/utils/__tests__/advanced-import-validation.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Advanced Import Validation - should not validate text fields against existing options",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.166Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___advanced_import_validation_test_ts__should_handle_milestone_field_as_optional",
      "name": "should handle milestone field as optional",
      "filePath": "src/utils/__tests__/advanced-import-validation.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Advanced Import Validation - should handle milestone field as optional",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.166Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___advanced_import_validation_test_ts__should_validate_required_fields_properly",
      "name": "should validate required fields properly",
      "filePath": "src/utils/__tests__/advanced-import-validation.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Advanced Import Validation - should validate required fields properly",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.166Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___advanced_import_validation_test_ts__should_handle_mixed_field_types_correctly",
      "name": "should handle mixed field types correctly",
      "filePath": "src/utils/__tests__/advanced-import-validation.test.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "settings",
      "priority": "low",
      "status": "active",
      "ciTiers": [],
      "description": "Advanced Import Validation - should handle mixed field types correctly",
      "tags": ["mocked", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.167Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___advanced_import_integration_test_ts__should_import_teams_first__then_actual_allocations_with_those_teams",
      "name": "should import teams first, then actual allocations with those teams",
      "filePath": "src/utils/__tests__/advanced-import-integration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Advanced Import Integration - should import teams first, then actual allocations with those teams",
      "tags": ["integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.167Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___advanced_import_integration_test_ts__should_handle_case_sensitivity_and_whitespace_in_team_names",
      "name": "should handle case sensitivity and whitespace in team names",
      "filePath": "src/utils/__tests__/advanced-import-integration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Advanced Import Integration - should handle case sensitivity and whitespace in team names",
      "tags": ["integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.168Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___advanced_import_integration_test_ts__should_provide_clear_error_messages_for_missing_teams",
      "name": "should provide clear error messages for missing teams",
      "filePath": "src/utils/__tests__/advanced-import-integration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Advanced Import Integration - should provide clear error messages for missing teams",
      "tags": ["integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.168Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___advanced_import_integration_test_ts__should_handle_mixed_epic_and_run_work_allocations",
      "name": "should handle mixed epic and run work allocations",
      "filePath": "src/utils/__tests__/advanced-import-integration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Advanced Import Integration - should handle mixed epic and run work allocations",
      "tags": ["integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.168Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___advanced_import_integration_test_ts__should_handle_missing_epic_names_gracefully",
      "name": "should handle missing epic names gracefully",
      "filePath": "src/utils/__tests__/advanced-import-integration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Advanced Import Integration - should handle missing epic names gracefully",
      "tags": ["integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.168Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___advanced_import_integration_test_ts__should_reproduce_the_",
      "name": "should reproduce the ",
      "filePath": "src/utils/__tests__/advanced-import-integration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Advanced Import Integration - should reproduce the ",
      "tags": ["integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.169Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___advanced_import_integration_test_ts__should_handle_advanced_import_with_large_CSV_files_and_team_creation",
      "name": "should handle advanced import with large CSV files and team creation",
      "filePath": "src/utils/__tests__/advanced-import-integration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Advanced Import Integration - should handle advanced import with large CSV files and team creation",
      "tags": ["integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.169Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___advanced_import_integration_test_ts__should_handle_advanced_import_with_mixed_existing_and_new_values",
      "name": "should handle advanced import with mixed existing and new values",
      "filePath": "src/utils/__tests__/advanced-import-integration.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Advanced Import Integration - should handle advanced import with mixed existing and new values",
      "tags": ["integration", "mobile"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.169Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___actual_allocation_import_test_ts__should_successfully_parse_valid_CSV_data",
      "name": "should successfully parse valid CSV data",
      "filePath": "src/utils/__tests__/actual-allocation-import.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Actual Allocation Import - should successfully parse valid CSV data",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.170Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___actual_allocation_import_test_ts__should_handle_team_name_case_insensitivity",
      "name": "should handle team name case insensitivity",
      "filePath": "src/utils/__tests__/actual-allocation-import.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Actual Allocation Import - should handle team name case insensitivity",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.170Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___actual_allocation_import_test_ts__should_handle_team_name_with_extra_spaces",
      "name": "should handle team name with extra spaces",
      "filePath": "src/utils/__tests__/actual-allocation-import.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Actual Allocation Import - should handle team name with extra spaces",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.170Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___actual_allocation_import_test_ts__should_error_for_non_existent_team",
      "name": "should error for non-existent team",
      "filePath": "src/utils/__tests__/actual-allocation-import.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Actual Allocation Import - should error for non-existent team",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.170Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___actual_allocation_import_test_ts__should_handle_",
      "name": "should handle ",
      "filePath": "src/utils/__tests__/actual-allocation-import.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Actual Allocation Import - should handle ",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.170Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___actual_allocation_import_test_ts__should_handle_run_work_categories",
      "name": "should handle run work categories",
      "filePath": "src/utils/__tests__/actual-allocation-import.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Actual Allocation Import - should handle run work categories",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.170Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___actual_allocation_import_test_ts__should_handle_missing_epic_name",
      "name": "should handle missing epic name",
      "filePath": "src/utils/__tests__/actual-allocation-import.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "planning",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Actual Allocation Import - should handle missing epic name",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.170Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_have_the_correct_number_of_divisions",
      "name": "should have the correct number of divisions",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should have the correct number of divisions",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.170Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_have_the_correct_number_of_teams",
      "name": "should have the correct number of teams",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should have the correct number of teams",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.171Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_have_the_correct_number_of_roles",
      "name": "should have the correct number of roles",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should have the correct number of roles",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.171Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_have_people_data",
      "name": "should have people data",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should have people data",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.171Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_have_teams_distributed_across_divisions",
      "name": "should have teams distributed across divisions",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should have teams distributed across divisions",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.171Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_have_realistic_team_sizes",
      "name": "should have realistic team sizes",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should have realistic team sizes",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.171Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_have_one_Product_Owner_per_team",
      "name": "should have one Product Owner per team",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should have one Product Owner per team",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.171Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_find_team_by_ID",
      "name": "should find team by ID",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should find team by ID",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.171Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_find_division_by_ID",
      "name": "should find division by ID",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should find division by ID",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.172Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_find_people_by_team_ID",
      "name": "should find people by team ID",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should find people by team ID",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.172Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_find_teams_by_division_ID",
      "name": "should find teams by division ID",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should find teams by division ID",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.172Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_find_role_by_ID",
      "name": "should find role by ID",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should find role by ID",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.172Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_load_sample_data_correctly",
      "name": "should load sample data correctly",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should load sample data correctly",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.172Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_validate_loaded_data",
      "name": "should validate loaded data",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should validate loaded data",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.172Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_provide_data_summary",
      "name": "should provide data summary",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should provide data summary",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.172Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_load_minimal_test_data",
      "name": "should load minimal test data",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should load minimal test data",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.173Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_load_people_test_data",
      "name": "should load people test data",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should load people test data",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.173Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_load_full_test_data",
      "name": "should load full test data",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should load full test data",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.173Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_validate_test_data",
      "name": "should validate test data",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should validate test data",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.173Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_create_test_fixtures",
      "name": "should create test fixtures",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should create test fixtures",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.173Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_have_consistent_team_division_relationships",
      "name": "should have consistent team-division relationships",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should have consistent team-division relationships",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.173Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_have_consistent_person_team_relationships",
      "name": "should have consistent person-team relationships",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should have consistent person-team relationships",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.173Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_have_consistent_person_role_relationships",
      "name": "should have consistent person-role relationships",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should have consistent person-role relationships",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.174Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_have_realistic_salary_ranges",
      "name": "should have realistic salary ranges",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should have realistic salary ranges",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.174Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_utils___tests___data_sampleData_test_ts__should_have_valid_email_addresses",
      "name": "should have valid email addresses",
      "filePath": "src/utils/__tests__/data/sampleData.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "core",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Sample Data - should have valid email addresses",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.174Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_initialize_auth_service_and_set_initialized_flag",
      "name": "should initialize auth service and set initialized flag",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should initialize auth service and set initialized flag",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.175Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_return_false_when_not_initialized",
      "name": "should return false when not initialized",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should return false when not initialized",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.175Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_return_true_when_initialized",
      "name": "should return true when initialized",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should return true when initialized",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.175Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_throw_error_when_not_initialized",
      "name": "should throw error when not initialized",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should throw error when not initialized",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.176Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_authenticate_and_initialize_graph_service",
      "name": "should authenticate and initialize graph service",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should authenticate and initialize graph service",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.176Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_set_sync_status_to_authenticating_during_process",
      "name": "should set sync status to authenticating during process",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should set sync status to authenticating during process",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.176Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_set_sync_status_to_error_on_failure",
      "name": "should set sync status to error on failure",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should set sync status to error on failure",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.177Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_return_null_when_not_initialized",
      "name": "should return null when not initialized",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should return null when not initialized",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.177Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_return_auth_status_and_initialize_graph_service_when_authenticated",
      "name": "should return auth status and initialize graph service when authenticated",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should return auth status and initialize graph service when authenticated",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.177Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_not_initialize_graph_service_when_not_authenticated",
      "name": "should not initialize graph service when not authenticated",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should not initialize graph service when not authenticated",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.177Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_handle_uninitialized_service_gracefully",
      "name": "should handle uninitialized service gracefully",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should handle uninitialized service gracefully",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.178Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_sign_out_and_reset_state",
      "name": "should sign out and reset state",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should sign out and reset state",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.178Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_throw_error_when_not_initialized",
      "name": "should throw error when not initialized",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should throw error when not initialized",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.178Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_throw_error_when_not_authenticated",
      "name": "should throw error when not authenticated",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should throw error when not authenticated",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.179Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_sync_employees_successfully",
      "name": "should sync employees successfully",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should sync employees successfully",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.179Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_set_status_to_error_when_sync_has_errors",
      "name": "should set status to error when sync has errors",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should set status to error when sync has errors",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.179Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_set_status_to_error_on_exception",
      "name": "should set status to error on exception",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should set status to error on exception",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.179Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_get_employees_by_business_unit",
      "name": "should get employees by business unit",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should get employees by business unit",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.180Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__Engineering",
      "name": "Engineering",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - Engineering",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.180Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_throw_error_when_not_authenticated",
      "name": "should throw error when not authenticated",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should throw error when not authenticated",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.180Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__Engineering",
      "name": "Engineering",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - Engineering",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.180Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_get_business_units",
      "name": "should get business units",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should get business units",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.181Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_get_current_user",
      "name": "should get current user",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should get current user",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.181Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_return_null_when_not_authenticated",
      "name": "should return null when not authenticated",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should return null when not authenticated",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.181Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_test_connection_successfully",
      "name": "should test connection successfully",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should test connection successfully",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.182Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_return_false_when_not_authenticated",
      "name": "should return false when not authenticated",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should return false when not authenticated",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.182Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_create_default_config",
      "name": "should create default config",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should create default config",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.182Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_use_defaults_when_environment_variables_not_set",
      "name": "should use defaults when environment variables not set",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should use defaults when environment variables not set",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.182Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365Service_test_ts__should_merge_overrides_with_default_config",
      "name": "should merge overrides with default config",
      "filePath": "src/services/__tests__/o365Service.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365Service - should merge overrides with default config",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.183Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_initialize_Graph_client_with_access_token",
      "name": "should initialize Graph client with access token",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should initialize Graph client with access token",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.183Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_call_auth_provider_callback_with_access_token",
      "name": "should call auth provider callback with access token",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should call auth provider callback with access token",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.183Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_throw_error_when_not_initialized",
      "name": "should throw error when not initialized",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should throw error when not initialized",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.184Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_sync_employees_successfully",
      "name": "should sync employees successfully",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should sync employees successfully",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.184Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_filter_by_business_unit_when_specified",
      "name": "should filter by business unit when specified",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should filter by business unit when specified",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.184Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_respect_maxUsers_limit",
      "name": "should respect maxUsers limit",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should respect maxUsers limit",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.186Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_handle_pagination",
      "name": "should handle pagination",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should handle pagination",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.187Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_handle_API_errors_gracefully",
      "name": "should handle API errors gracefully",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should handle API errors gracefully",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.187Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_handle_pagination_errors_gracefully",
      "name": "should handle pagination errors gracefully",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should handle pagination errors gracefully",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.187Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_get_employees_by_business_unit",
      "name": "should get employees by business unit",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should get employees by business unit",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.187Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__Engineering",
      "name": "Engineering",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - Engineering",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.188Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_get_current_user_profile_successfully",
      "name": "should get current user profile successfully",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should get current user profile successfully",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.188Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_return_null_when_API_call_fails",
      "name": "should return null when API call fails",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should return null when API call fails",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.188Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_throw_error_when_not_initialized",
      "name": "should throw error when not initialized",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should throw error when not initialized",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.188Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_get_unique_business_units",
      "name": "should get unique business units",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should get unique business units",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.188Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_return_empty_array_when_API_call_fails",
      "name": "should return empty array when API call fails",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should return empty array when API call fails",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.189Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_return_true_when_connection_test_succeeds",
      "name": "should return true when connection test succeeds",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should return true when connection test succeeds",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.189Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_return_false_when_connection_test_fails",
      "name": "should return false when connection test fails",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should return false when connection test fails",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.189Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_return_false_when_not_initialized",
      "name": "should return false when not initialized",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should return false when not initialized",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.189Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365GraphService_test_ts__should_transform_Graph_user_correctly",
      "name": "should transform Graph user correctly",
      "filePath": "src/services/__tests__/o365GraphService.test.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365GraphService - should transform Graph user correctly",
      "tags": ["async", "mocked", "unit"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.190Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_initialize_MSAL_with_correct_configuration",
      "name": "should initialize MSAL with correct configuration",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should initialize MSAL with correct configuration",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.190Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_use_common_authority_when_tenantId_is_not_provided",
      "name": "should use common authority when tenantId is not provided",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should use common authority when tenantId is not provided",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.191Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_throw_error_when_not_initialized",
      "name": "should throw error when not initialized",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should throw error when not initialized",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.191Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_perform_interactive_authentication_when_no_accounts_exist",
      "name": "should perform interactive authentication when no accounts exist",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should perform interactive authentication when no accounts exist",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.191Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_try_silent_authentication_first_when_accounts_exist",
      "name": "should try silent authentication first when accounts exist",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should try silent authentication first when accounts exist",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.191Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_return_null_when_not_initialized",
      "name": "should return null when not initialized",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should return null when not initialized",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.192Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_return_null_when_no_accounts_exist",
      "name": "should return null when no accounts exist",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should return null when no accounts exist",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.192Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_return_auth_result_when_silent_authentication_succeeds",
      "name": "should return auth result when silent authentication succeeds",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should return auth result when silent authentication succeeds",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.192Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_return_null_when_silent_authentication_fails",
      "name": "should return null when silent authentication fails",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should return null when silent authentication fails",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.192Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_sign_out_when_accounts_exist",
      "name": "should sign out when accounts exist",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should sign out when accounts exist",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.193Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_not_call_logout_when_no_accounts_exist",
      "name": "should not call logout when no accounts exist",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should not call logout when no accounts exist",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.193Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_handle_uninitialized_service_gracefully",
      "name": "should handle uninitialized service gracefully",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should handle uninitialized service gracefully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.193Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_request_additional_permissions_successfully",
      "name": "should request additional permissions successfully",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should request additional permissions successfully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.193Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_handle_permission_request_failure",
      "name": "should handle permission request failure",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should handle permission request failure",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.194Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_return_error_when_no_authenticated_account_found",
      "name": "should return error when no authenticated account found",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should return error when no authenticated account found",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.194Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_return_default_status_when_not_initialized",
      "name": "should return default status when not initialized",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should return default status when not initialized",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.194Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_check_permission_status_successfully",
      "name": "should check permission status successfully",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should check permission status successfully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.194Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_generate_correct_admin_consent_URL",
      "name": "should generate correct admin consent URL",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should generate correct admin consent URL",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.195Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_use_common_tenant_when_tenantId_not_provided",
      "name": "should use common tenant when tenantId not provided",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should use common tenant when tenantId not provided",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.195Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_services___tests___o365AuthService_test_ts__should_throw_error_when_not_initialized",
      "name": "should throw error when not initialized",
      "filePath": "src/services/__tests__/o365AuthService.test.ts",
      "type": "unit",
      "category": "api",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365AuthService - should throw error when not initialized",
      "tags": ["async", "mocked"],
      "estimatedDuration": 130,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.195Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___TeamContext_test_tsx__should_add_a_new_team",
      "name": "should add a new team",
      "filePath": "src/context/__tests__/TeamContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "core",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamContext - should add a new team",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.196Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___TeamContext_test_tsx__should_update_a_team",
      "name": "should update a team",
      "filePath": "src/context/__tests__/TeamContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "core",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamContext - should update a team",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.196Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___TeamContext_test_tsx__should_delete_a_team",
      "name": "should delete a team",
      "filePath": "src/context/__tests__/TeamContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "core",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "TeamContext - should delete a team",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.196Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___SettingsContext_test_tsx__should_update_the_config",
      "name": "should update the config",
      "filePath": "src/context/__tests__/SettingsContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "settings",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SettingsContext - should update the config",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.196Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___SettingsContext_test_tsx__should_update_the_setup_complete_flag",
      "name": "should update the setup complete flag",
      "filePath": "src/context/__tests__/SettingsContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "settings",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "SettingsContext - should update the setup complete flag",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.196Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___ScenarioContext_test_tsx__should_provide_initial_scenario_state",
      "name": "should provide initial scenario state",
      "filePath": "src/context/__tests__/ScenarioContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioContext - should provide initial scenario state",
      "tags": ["async", "mocked"],
      "estimatedDuration": 650,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.197Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___ScenarioContext_test_tsx__should_create_a_new_scenario",
      "name": "should create a new scenario",
      "filePath": "src/context/__tests__/ScenarioContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioContext - should create a new scenario",
      "tags": ["async", "mocked"],
      "estimatedDuration": 650,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.197Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___ScenarioContext_test_tsx__should_switch_to_a_scenario",
      "name": "should switch to a scenario",
      "filePath": "src/context/__tests__/ScenarioContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioContext - should switch to a scenario",
      "tags": ["async", "mocked"],
      "estimatedDuration": 650,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.197Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___ScenarioContext_test_tsx__should_switch_back_to_live_mode",
      "name": "should switch back to live mode",
      "filePath": "src/context/__tests__/ScenarioContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioContext - should switch back to live mode",
      "tags": ["async", "mocked"],
      "estimatedDuration": 650,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.197Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___ScenarioContext_test_tsx__should_delete_a_scenario",
      "name": "should delete a scenario",
      "filePath": "src/context/__tests__/ScenarioContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioContext - should delete a scenario",
      "tags": ["async", "mocked"],
      "estimatedDuration": 650,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.197Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___ScenarioContext_test_tsx__should_return_current_data_when_not_in_scenario_mode",
      "name": "should return current data when not in scenario mode",
      "filePath": "src/context/__tests__/ScenarioContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioContext - should return current data when not in scenario mode",
      "tags": ["async", "mocked"],
      "estimatedDuration": 650,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.198Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___ScenarioContext_test_tsx__should_have_built_in_templates_available",
      "name": "should have built-in templates available",
      "filePath": "src/context/__tests__/ScenarioContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioContext - should have built-in templates available",
      "tags": ["async", "mocked"],
      "estimatedDuration": 650,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.198Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___ScenarioContext_test_tsx__should_create_scenario_from_template",
      "name": "should create scenario from template",
      "filePath": "src/context/__tests__/ScenarioContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioContext - should create scenario from template",
      "tags": ["async", "mocked"],
      "estimatedDuration": 650,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.198Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___ScenarioContext_test_tsx__should_handle_scenario_expiration",
      "name": "should handle scenario expiration",
      "filePath": "src/context/__tests__/ScenarioContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioContext - should handle scenario expiration",
      "tags": ["async", "mocked"],
      "estimatedDuration": 650,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.198Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___ScenarioContext_test_tsx__should_generate_scenario_comparison",
      "name": "should generate scenario comparison",
      "filePath": "src/context/__tests__/ScenarioContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ScenarioContext - should generate scenario comparison",
      "tags": ["async", "mocked"],
      "estimatedDuration": 650,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.198Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___ProjectContext_test_tsx__should_add_a_new_project",
      "name": "should add a new project",
      "filePath": "src/context/__tests__/ProjectContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "core",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectContext - should add a new project",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.198Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___ProjectContext_test_tsx__should_update_a_project",
      "name": "should update a project",
      "filePath": "src/context/__tests__/ProjectContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "core",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectContext - should update a project",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.198Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___PlanningContext_test_tsx__should_add_a_new_allocation",
      "name": "should add a new allocation",
      "filePath": "src/context/__tests__/PlanningContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "PlanningContext - should add a new allocation",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.199Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___GoalContext_test_tsx__should_add_a_new_goal",
      "name": "should add a new goal",
      "filePath": "src/context/__tests__/GoalContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "core",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "GoalContext - should add a new goal",
      "tags": [],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.199Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_context___tests___GoalContext_test_tsx__should_update_a_goal",
      "name": "should update a goal",
      "filePath": "src/context/__tests__/GoalContext.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "core",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "GoalContext - should update a goal",
      "tags": [],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.199Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_pages___tests___Dashboard_test_tsx__renders_dashboard_components_when_setup_is_complete",
      "name": "renders dashboard components when setup is complete",
      "filePath": "src/pages/__tests__/Dashboard.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Dashboard - renders dashboard components when setup is complete",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.199Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_pages___tests___Dashboard_test_tsx__shows_setup_required_message_when_setup_is_not_complete",
      "name": "shows setup required message when setup is not complete",
      "filePath": "src/pages/__tests__/Dashboard.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Dashboard - shows setup required message when setup is not complete",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.199Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_pages___tests___Dashboard_test_tsx__shows_loading_state_when_data_is_loading",
      "name": "shows loading state when data is loading",
      "filePath": "src/pages/__tests__/Dashboard.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Dashboard - shows loading state when data is loading",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.199Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_pages___tests___Dashboard_test_tsx__handles_error_state_gracefully",
      "name": "handles error state gracefully",
      "filePath": "src/pages/__tests__/Dashboard.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Dashboard - handles error state gracefully",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.199Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_pages___tests___Dashboard_test_tsx__renders_with_empty_data_gracefully",
      "name": "renders with empty data gracefully",
      "filePath": "src/pages/__tests__/Dashboard.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Dashboard - renders with empty data gracefully",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.200Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_pages___tests___Dashboard_test_tsx__renders_setup_required_card_structure_correctly",
      "name": "renders setup required card structure correctly",
      "filePath": "src/pages/__tests__/Dashboard.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Dashboard - renders setup required card structure correctly",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.200Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_pages___tests___Dashboard_test_tsx__computes_dashboard_data_correctly",
      "name": "computes dashboard data correctly",
      "filePath": "src/pages/__tests__/Dashboard.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Dashboard - computes dashboard data correctly",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.200Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_pages___tests___Dashboard_test_tsx__handles_dashboard_data_computation_errors",
      "name": "handles dashboard data computation errors",
      "filePath": "src/pages/__tests__/Dashboard.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Dashboard - handles dashboard data computation errors",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.200Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_pages___tests___Dashboard_test_tsx__shows_appropriate_warning_when_no_cycles_are_configured",
      "name": "shows appropriate warning when no cycles are configured",
      "filePath": "src/pages/__tests__/Dashboard.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Dashboard - shows appropriate warning when no cycles are configured",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.200Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_pages___tests___Dashboard_test_tsx__displays_correct_layout_structure",
      "name": "displays correct layout structure",
      "filePath": "src/pages/__tests__/Dashboard.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Dashboard - displays correct layout structure",
      "tags": ["mocked"],
      "estimatedDuration": 500,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.200Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_pages___tests___Calendar_test_tsx__should_render_without_crashing",
      "name": "should render without crashing",
      "filePath": "src/pages/__tests__/Calendar.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Calendar Page - should render without crashing",
      "tags": ["async", "mocked"],
      "estimatedDuration": 975,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.201Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_pages___tests___Calendar_test_tsx__should_render_calendar_component",
      "name": "should render calendar component",
      "filePath": "src/pages/__tests__/Calendar.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Calendar Page - should render calendar component",
      "tags": ["async", "mocked"],
      "estimatedDuration": 975,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.201Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_pages___tests___Calendar_test_tsx__should_have_proper_page_structure",
      "name": "should have proper page structure",
      "filePath": "src/pages/__tests__/Calendar.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Calendar Page - should have proper page structure",
      "tags": ["async", "mocked"],
      "estimatedDuration": 975,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.201Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src_pages___tests___Calendar_test_tsx__should_integrate_with_navigation_breadcrumbs",
      "name": "should integrate with navigation breadcrumbs",
      "filePath": "src/pages/__tests__/Calendar.test.tsx",
      "type": "integration",
      "category": "component",
      "featureArea": "planning",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Calendar Page - should integrate with navigation breadcrumbs",
      "tags": ["async", "mocked"],
      "estimatedDuration": 975,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.201Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_workItems_test_ts__should_have_work_items_assigned_to_valid_projects",
      "name": "should have work items assigned to valid projects",
      "filePath": "src/__tests__/integration/workItems.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Work Items Integration Tests - should have work items assigned to valid projects",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.201Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_workItems_test_ts__should_have_balanced_work_item_distribution_across_projects",
      "name": "should have balanced work item distribution across projects",
      "filePath": "src/__tests__/integration/workItems.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Work Items Integration Tests - should have balanced work item distribution across projects",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.201Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_workItems_test_ts__should_calculate_work_item_portfolio_metrics",
      "name": "should calculate work item portfolio metrics",
      "filePath": "src/__tests__/integration/workItems.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Work Items Integration Tests - should calculate work item portfolio metrics",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.201Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_workItems_test_ts__should_calculate_project_work_item_metrics",
      "name": "should calculate project work item metrics",
      "filePath": "src/__tests__/integration/workItems.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Work Items Integration Tests - should calculate project work item metrics",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.202Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_workItems_test_ts__should_identify_high_effort_work_items",
      "name": "should identify high-effort work items",
      "filePath": "src/__tests__/integration/workItems.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Work Items Integration Tests - should identify high-effort work items",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.202Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_workItems_test_ts__should_calculate_team_workload",
      "name": "should calculate team workload",
      "filePath": "src/__tests__/integration/workItems.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Work Items Integration Tests - should calculate team workload",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.202Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_workItems_test_ts__should_have_no_duplicate_work_item_titles_within_projects",
      "name": "should have no duplicate work item titles within projects",
      "filePath": "src/__tests__/integration/workItems.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Work Items Integration Tests - should have no duplicate work item titles within projects",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.202Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_workItems_test_ts__should_have_consistent_data_types",
      "name": "should have consistent data types",
      "filePath": "src/__tests__/integration/workItems.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Work Items Integration Tests - should have consistent data types",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.202Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_workItems_test_ts__should_have_valid_hour_values",
      "name": "should have valid hour values",
      "filePath": "src/__tests__/integration/workItems.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Work Items Integration Tests - should have valid hour values",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.202Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_teams_test_ts__should_have_teams_with_proper_division_assignments",
      "name": "should have teams with proper division assignments",
      "filePath": "src/__tests__/integration/teams.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Teams Integration Tests - should have teams with proper division assignments",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.202Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_teams_test_ts__should_have_teams_distributed_across_divisions",
      "name": "should have teams distributed across divisions",
      "filePath": "src/__tests__/integration/teams.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Teams Integration Tests - should have teams distributed across divisions",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.202Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_teams_test_ts__should_have_people_assigned_to_teams",
      "name": "should have people assigned to teams",
      "filePath": "src/__tests__/integration/teams.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Teams Integration Tests - should have people assigned to teams",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.202Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_teams_test_ts__should_have_one_Product_Owner_per_team",
      "name": "should have one Product Owner per team",
      "filePath": "src/__tests__/integration/teams.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Teams Integration Tests - should have one Product Owner per team",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.203Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_teams_test_ts__should_calculate_team_capacity_metrics",
      "name": "should calculate team capacity metrics",
      "filePath": "src/__tests__/integration/teams.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Teams Integration Tests - should calculate team capacity metrics",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.203Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_teams_test_ts__should_calculate_division_team_metrics",
      "name": "should calculate division team metrics",
      "filePath": "src/__tests__/integration/teams.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Teams Integration Tests - should calculate division team metrics",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.203Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_teams_test_ts__should_have_consistent_team_data",
      "name": "should have consistent team data",
      "filePath": "src/__tests__/integration/teams.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Teams Integration Tests - should have consistent team data",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.203Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_teams_test_ts__should_have_people_with_valid_team_assignments",
      "name": "should have people with valid team assignments",
      "filePath": "src/__tests__/integration/teams.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Teams Integration Tests - should have people with valid team assignments",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.203Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_skills_test_ts__should_have_people_with_assigned_skills",
      "name": "should have people with assigned skills",
      "filePath": "src/__tests__/integration/skills.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills Integration Tests - should have people with assigned skills",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.203Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_skills_test_ts__should_have_people_with_multiple_skills",
      "name": "should have people with multiple skills",
      "filePath": "src/__tests__/integration/skills.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills Integration Tests - should have people with multiple skills",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.203Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_skills_test_ts__should_have_Product_Owners_with_domain_skills",
      "name": "should have Product Owners with domain skills",
      "filePath": "src/__tests__/integration/skills.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills Integration Tests - should have Product Owners with domain skills",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.203Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_skills_test_ts__should_have_Software_Engineers_with_technical_skills",
      "name": "should have Software Engineers with technical skills",
      "filePath": "src/__tests__/integration/skills.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills Integration Tests - should have Software Engineers with technical skills",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.204Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_skills_test_ts__should_calculate_team_skill_coverage",
      "name": "should calculate team skill coverage",
      "filePath": "src/__tests__/integration/skills.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills Integration Tests - should calculate team skill coverage",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.204Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_skills_test_ts__should_calculate_organization_skill_metrics",
      "name": "should calculate organization skill metrics",
      "filePath": "src/__tests__/integration/skills.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills Integration Tests - should calculate organization skill metrics",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.204Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_skills_test_ts__should_identify_high_proficiency_skills",
      "name": "should identify high-proficiency skills",
      "filePath": "src/__tests__/integration/skills.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills Integration Tests - should identify high-proficiency skills",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.204Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_skills_test_ts__should_have_consistent_data_types",
      "name": "should have consistent data types",
      "filePath": "src/__tests__/integration/skills.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills Integration Tests - should have consistent data types",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.204Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_skills_test_ts__should_have_valid_skill_proficiency_levels",
      "name": "should have valid skill proficiency levels",
      "filePath": "src/__tests__/integration/skills.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills Integration Tests - should have valid skill proficiency levels",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.204Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_skills_test_ts__should_have_valid_skill_categories",
      "name": "should have valid skill categories",
      "filePath": "src/__tests__/integration/skills.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Skills Integration Tests - should have valid skill categories",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.204Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_projects_test_ts__should_have_projects_assigned_to_valid_teams",
      "name": "should have projects assigned to valid teams",
      "filePath": "src/__tests__/integration/projects.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Projects Integration Tests - should have projects assigned to valid teams",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.205Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_projects_test_ts__should_have_balanced_project_distribution_across_teams",
      "name": "should have balanced project distribution across teams",
      "filePath": "src/__tests__/integration/projects.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Projects Integration Tests - should have balanced project distribution across teams",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.205Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_projects_test_ts__should_calculate_project_portfolio_metrics",
      "name": "should calculate project portfolio metrics",
      "filePath": "src/__tests__/integration/projects.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Projects Integration Tests - should calculate project portfolio metrics",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.205Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_projects_test_ts__should_calculate_team_project_metrics",
      "name": "should calculate team project metrics",
      "filePath": "src/__tests__/integration/projects.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Projects Integration Tests - should calculate team project metrics",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.205Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_projects_test_ts__should_identify_high_value_projects",
      "name": "should identify high-value projects",
      "filePath": "src/__tests__/integration/projects.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Projects Integration Tests - should identify high-value projects",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.205Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_projects_test_ts__should_have_work_items_with_proper_project_assignments",
      "name": "should have work items with proper project assignments",
      "filePath": "src/__tests__/integration/projects.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Projects Integration Tests - should have work items with proper project assignments",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.205Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_projects_test_ts__should_have_projects_with_associated_work_items",
      "name": "should have projects with associated work items",
      "filePath": "src/__tests__/integration/projects.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Projects Integration Tests - should have projects with associated work items",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.205Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_projects_test_ts__should_have_consistent_data_types",
      "name": "should have consistent data types",
      "filePath": "src/__tests__/integration/projects.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Projects Integration Tests - should have consistent data types",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.205Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_projects_test_ts__should_have_valid_budget_values",
      "name": "should have valid budget values",
      "filePath": "src/__tests__/integration/projects.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Projects Integration Tests - should have valid budget values",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.205Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_projects_test_ts__should_have_realistic_project_timelines",
      "name": "should have realistic project timelines",
      "filePath": "src/__tests__/integration/projects.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "projects",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Projects Integration Tests - should have realistic project timelines",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.205Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_people_test_ts__should_have_people_assigned_to_valid_roles",
      "name": "should have people assigned to valid roles",
      "filePath": "src/__tests__/integration/people.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "People Integration Tests - should have people assigned to valid roles",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.206Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_people_test_ts__should_have_one_Product_Owner_per_team",
      "name": "should have one Product Owner per team",
      "filePath": "src/__tests__/integration/people.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "People Integration Tests - should have one Product Owner per team",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.206Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_people_test_ts__should_have_people_assigned_to_valid_teams",
      "name": "should have people assigned to valid teams",
      "filePath": "src/__tests__/integration/people.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "People Integration Tests - should have people assigned to valid teams",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.206Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_people_test_ts__should_have_balanced_team_sizes",
      "name": "should have balanced team sizes",
      "filePath": "src/__tests__/integration/people.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "People Integration Tests - should have balanced team sizes",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.206Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_people_test_ts__should_calculate_role_distribution_metrics",
      "name": "should calculate role distribution metrics",
      "filePath": "src/__tests__/integration/people.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "People Integration Tests - should calculate role distribution metrics",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.206Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_people_test_ts__should_calculate_team_composition_metrics",
      "name": "should calculate team composition metrics",
      "filePath": "src/__tests__/integration/people.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "People Integration Tests - should calculate team composition metrics",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.206Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_people_test_ts__should_calculate_organization_wide_metrics",
      "name": "should calculate organization-wide metrics",
      "filePath": "src/__tests__/integration/people.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "People Integration Tests - should calculate organization-wide metrics",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.206Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_people_test_ts__should_have_consistent_data_types",
      "name": "should have consistent data types",
      "filePath": "src/__tests__/integration/people.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "People Integration Tests - should have consistent data types",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.206Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_people_test_ts__should_have_valid_salary_ranges",
      "name": "should have valid salary ranges",
      "filePath": "src/__tests__/integration/people.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "People Integration Tests - should have valid salary ranges",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.206Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_people_test_ts__should_have_consistent_employment_data",
      "name": "should have consistent employment data",
      "filePath": "src/__tests__/integration/people.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "People Integration Tests - should have consistent employment data",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.207Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_endToEnd_test_ts__should_have_complete_organizational_hierarchy",
      "name": "should have complete organizational hierarchy",
      "filePath": "src/__tests__/integration/endToEnd.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "End-to-End Integration Tests - should have complete organizational hierarchy",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.207Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_endToEnd_test_ts__should_have_complete_people_assignments",
      "name": "should have complete people assignments",
      "filePath": "src/__tests__/integration/endToEnd.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "End-to-End Integration Tests - should have complete people assignments",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.207Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_endToEnd_test_ts__should_have_complete_project_assignments",
      "name": "should have complete project assignments",
      "filePath": "src/__tests__/integration/endToEnd.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "End-to-End Integration Tests - should have complete project assignments",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.207Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_endToEnd_test_ts__should_maintain_referential_integrity_across_all_entities",
      "name": "should maintain referential integrity across all entities",
      "filePath": "src/__tests__/integration/endToEnd.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "End-to-End Integration Tests - should maintain referential integrity across all entities",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.207Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_endToEnd_test_ts__should_have_realistic_team_compositions",
      "name": "should have realistic team compositions",
      "filePath": "src/__tests__/integration/endToEnd.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "End-to-End Integration Tests - should have realistic team compositions",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.208Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_endToEnd_test_ts__should_have_realistic_project_portfolios",
      "name": "should have realistic project portfolios",
      "filePath": "src/__tests__/integration/endToEnd.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "End-to-End Integration Tests - should have realistic project portfolios",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.208Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_endToEnd_test_ts__should_have_realistic_work_item_distribution",
      "name": "should have realistic work item distribution",
      "filePath": "src/__tests__/integration/endToEnd.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "End-to-End Integration Tests - should have realistic work item distribution",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.208Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_endToEnd_test_ts__should_have_consistent_naming_patterns_across_related_entities",
      "name": "should have consistent naming patterns across related entities",
      "filePath": "src/__tests__/integration/endToEnd.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "End-to-End Integration Tests - should have consistent naming patterns across related entities",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.208Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_endToEnd_test_ts___",
      "name": " ",
      "filePath": "src/__tests__/integration/endToEnd.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "End-to-End Integration Tests -  ",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.208Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___integration_endToEnd_test_ts__should_have_consistent_data_across_all_entities",
      "name": "should have consistent data across all entities",
      "filePath": "src/__tests__/integration/endToEnd.test.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "End-to-End Integration Tests - should have consistent data across all entities",
      "tags": ["integration"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.208Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "tests_e2e_solution_skills_team_integration_spec_ts__complete_workflow__solution___skills___team_analysis",
      "name": "complete workflow: solution → skills → team analysis",
      "filePath": "tests/e2e/solution-skills-team-integration.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Solution-Skills-Team Integration Workflow - complete workflow: solution → skills → team analysis",
      "tags": ["async", "integration", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.209Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_solution_skills_team_integration_spec_ts__verify_skill_importance_inheritance_from_solution",
      "name": "verify skill importance inheritance from solution",
      "filePath": "tests/e2e/solution-skills-team-integration.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Solution-Skills-Team Integration Workflow - verify skill importance inheritance from solution",
      "tags": ["async", "integration", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.209Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_solution_skills_team_integration_spec_ts__verify_multiple_solutions_with_overlapping_skills",
      "name": "verify multiple solutions with overlapping skills",
      "filePath": "tests/e2e/solution-skills-team-integration.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "skills",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Solution-Skills-Team Integration Workflow - verify multiple solutions with overlapping skills",
      "tags": ["async", "integration", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.210Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_solution_skill_matching_spec_ts__should_match_a_team_to_a_project_via_a_solution_skill",
      "name": "should match a team to a project via a solution skill",
      "filePath": "tests/e2e/solution-skill-matching.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Solution-Skill-Team Matching E2E Test - should match a team to a project via a solution skill",
      "tags": ["async", "integration", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.210Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_smoke_test_ci_spec_ts__application_loads_successfully",
      "name": "application loads successfully",
      "filePath": "tests/e2e/smoke-test-ci.spec.ts",
      "type": "unit",
      "category": "ui",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Smoke Test - CI - application loads successfully",
      "tags": ["async", "smoke"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.210Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_scenario_features_spec_ts__should_navigate_to_scenario_analysis_page",
      "name": "should navigate to scenario analysis page",
      "filePath": "tests/e2e/scenario-features.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Scenario Management Features - should navigate to scenario analysis page",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.211Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_scenario_features_spec_ts__should_create_a_new_scenario",
      "name": "should create a new scenario",
      "filePath": "tests/e2e/scenario-features.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Scenario Management Features - should create a new scenario",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.211Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_scenario_features_spec_ts__should_switch_between_scenarios_and_live_mode",
      "name": "should switch between scenarios and live mode",
      "filePath": "tests/e2e/scenario-features.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Scenario Management Features - should switch between scenarios and live mode",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.211Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_scenario_features_spec_ts__should_show_scenario_context_in_Projects_page",
      "name": "should show scenario context in Projects page",
      "filePath": "tests/e2e/scenario-features.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Scenario Management Features - should show scenario context in Projects page",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.211Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_scenario_features_spec_ts__should_show_scenario_context_in_Planning_page",
      "name": "should show scenario context in Planning page",
      "filePath": "tests/e2e/scenario-features.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Scenario Management Features - should show scenario context in Planning page",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.211Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_scenario_features_spec_ts__should_perform_scenario_comparison",
      "name": "should perform scenario comparison",
      "filePath": "tests/e2e/scenario-features.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Scenario Management Features - should perform scenario comparison",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.211Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_scenario_features_spec_ts__should_create_scenario_from_template",
      "name": "should create scenario from template",
      "filePath": "tests/e2e/scenario-features.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Scenario Management Features - should create scenario from template",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.211Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_scenario_features_spec_ts__should_export_and_import_scenarios",
      "name": "should export and import scenarios",
      "filePath": "tests/e2e/scenario-features.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Scenario Management Features - should export and import scenarios",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.212Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_scenario_features_spec_ts__should_delete_scenarios",
      "name": "should delete scenarios",
      "filePath": "tests/e2e/scenario-features.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Scenario Management Features - should delete scenarios",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.212Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_scenario_features_spec_ts__should_handle_scenario_modifications_and_tracking",
      "name": "should handle scenario modifications and tracking",
      "filePath": "tests/e2e/scenario-features.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Scenario Management Features - should handle scenario modifications and tracking",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.212Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_scenario_features_spec_ts__should_maintain_scenario_state_across_page_navigation",
      "name": "should maintain scenario state across page navigation",
      "filePath": "tests/e2e/scenario-features.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Scenario Management Features - should maintain scenario state across page navigation",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.212Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_scenario_features_spec_ts__should_handle_scenario_expiration_cleanup",
      "name": "should handle scenario expiration cleanup",
      "filePath": "tests/e2e/scenario-features.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "scenarios",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Scenario Management Features - should handle scenario expiration cleanup",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.212Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_project_command_center_modal_spec_ts__should_open_ProjectCommandCenterModal_from_project_list",
      "name": "should open ProjectCommandCenterModal from project list",
      "filePath": "tests/e2e/project-command-center-modal.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectCommandCenterModal E2E Tests - should open ProjectCommandCenterModal from project list",
      "tags": ["async", "e2e", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.213Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_project_command_center_modal_spec_ts__should_display_all_six_tabs_in_ProjectCommandCenterModal",
      "name": "should display all six tabs in ProjectCommandCenterModal",
      "filePath": "tests/e2e/project-command-center-modal.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectCommandCenterModal E2E Tests - should display all six tabs in ProjectCommandCenterModal",
      "tags": ["async", "e2e", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.213Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_project_command_center_modal_spec_ts__should_switch_between_tabs_correctly",
      "name": "should switch between tabs correctly",
      "filePath": "tests/e2e/project-command-center-modal.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectCommandCenterModal E2E Tests - should switch between tabs correctly",
      "tags": ["async", "e2e", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.213Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_project_command_center_modal_spec_ts__should_display_project_information_in_Overview_tab",
      "name": "should display project information in Overview tab",
      "filePath": "tests/e2e/project-command-center-modal.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectCommandCenterModal E2E Tests - should display project information in Overview tab",
      "tags": ["async", "e2e", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.213Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_project_command_center_modal_spec_ts__should_display_projected_end_date_calculation",
      "name": "should display projected end date calculation",
      "filePath": "tests/e2e/project-command-center-modal.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectCommandCenterModal E2E Tests - should display projected end date calculation",
      "tags": ["async", "e2e", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.213Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_project_command_center_modal_spec_ts__should_switch_between_view_and_edit_modes",
      "name": "should switch between view and edit modes",
      "filePath": "tests/e2e/project-command-center-modal.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectCommandCenterModal E2E Tests - should switch between view and edit modes",
      "tags": ["async", "e2e", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.214Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_project_command_center_modal_spec_ts__should_display_financial_information_in_Financials_tab",
      "name": "should display financial information in Financials tab",
      "filePath": "tests/e2e/project-command-center-modal.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectCommandCenterModal E2E Tests - should display financial information in Financials tab",
      "tags": ["async", "e2e", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.214Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_project_command_center_modal_spec_ts__should_close_modal_when_close_button_is_clicked",
      "name": "should close modal when close button is clicked",
      "filePath": "tests/e2e/project-command-center-modal.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectCommandCenterModal E2E Tests - should close modal when close button is clicked",
      "tags": ["async", "e2e", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.214Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_project_command_center_modal_spec_ts__should_be_keyboard_accessible",
      "name": "should be keyboard accessible",
      "filePath": "tests/e2e/project-command-center-modal.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectCommandCenterModal E2E Tests - should be keyboard accessible",
      "tags": ["async", "e2e", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.214Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_project_command_center_modal_spec_ts__should_handle_large_project_data_efficiently",
      "name": "should handle large project data efficiently",
      "filePath": "tests/e2e/project-command-center-modal.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectCommandCenterModal E2E Tests - should handle large project data efficiently",
      "tags": ["async", "e2e", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.215Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_project_command_center_modal_spec_ts__should_not_have_console_errors_when_rendering",
      "name": "should not have console errors when rendering",
      "filePath": "tests/e2e/project-command-center-modal.spec.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "ProjectCommandCenterModal E2E Tests - should not have console errors when rendering",
      "tags": ["async", "e2e", "responsive"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.215Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_o365_sync_spec_ts__should_display_O365_sync_button_in_TeamBuilder",
      "name": "should display O365 sync button in TeamBuilder",
      "filePath": "tests/e2e/o365-sync.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365 Integration - should display O365 sync button in TeamBuilder",
      "tags": ["async", "mocked", "integration", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.216Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_o365_sync_spec_ts__should_open_O365_sync_dialog_when_button_is_clicked",
      "name": "should open O365 sync dialog when button is clicked",
      "filePath": "tests/e2e/o365-sync.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365 Integration - should open O365 sync dialog when button is clicked",
      "tags": ["async", "mocked", "integration", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.217Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_o365_sync_spec_ts__should_handle_sync_with_business_unit_filter",
      "name": "should handle sync with business unit filter",
      "filePath": "tests/e2e/o365-sync.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365 Integration - should handle sync with business unit filter",
      "tags": ["async", "mocked", "integration", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.217Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_o365_sync_spec_ts__should_handle_authentication_flow",
      "name": "should handle authentication flow",
      "filePath": "tests/e2e/o365-sync.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365 Integration - should handle authentication flow",
      "tags": ["async", "mocked", "integration", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.218Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_o365_sync_spec_ts__should_handle_sync_errors_gracefully",
      "name": "should handle sync errors gracefully",
      "filePath": "tests/e2e/o365-sync.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365 Integration - should handle sync errors gracefully",
      "tags": ["async", "mocked", "integration", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.218Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_o365_sync_spec_ts__should_handle_API_permission_errors",
      "name": "should handle API permission errors",
      "filePath": "tests/e2e/o365-sync.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365 Integration - should handle API permission errors",
      "tags": ["async", "mocked", "integration", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.219Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_o365_sync_spec_ts__should_cancel_sync_dialog",
      "name": "should cancel sync dialog",
      "filePath": "tests/e2e/o365-sync.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365 Integration - should cancel sync dialog",
      "tags": ["async", "mocked", "integration", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.220Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_o365_sync_spec_ts__should_disable_sync_button_during_operation",
      "name": "should disable sync button during operation",
      "filePath": "tests/e2e/o365-sync.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365 Integration - should disable sync button during operation",
      "tags": ["async", "mocked", "integration", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.220Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_o365_sync_spec_ts__should_display_sync_instructions",
      "name": "should display sync instructions",
      "filePath": "tests/e2e/o365-sync.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365 Integration - should display sync instructions",
      "tags": ["async", "mocked", "integration", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.221Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_o365_sync_spec_ts__should_integrate_synced_employees_into_people_list",
      "name": "should integrate synced employees into people list",
      "filePath": "tests/e2e/o365-sync.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "O365 Integration - should integrate synced employees into people list",
      "tags": ["async", "mocked", "integration", "unit"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.221Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_mobile_pwa_features_spec_ts__should_display_mobile_dashboard_on_mobile_viewport",
      "name": "should display mobile dashboard on mobile viewport",
      "filePath": "tests/e2e/mobile-pwa-features.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Mobile PWA Features - should display mobile dashboard on mobile viewport",
      "tags": ["async", "mocked", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.222Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_mobile_pwa_features_spec_ts__should_show_mobile_navigation_at_bottom",
      "name": "should show mobile navigation at bottom",
      "filePath": "tests/e2e/mobile-pwa-features.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Mobile PWA Features - should show mobile navigation at bottom",
      "tags": ["async", "mocked", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.222Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_mobile_pwa_features_spec_ts__should_hide_desktop_sidebar_on_mobile",
      "name": "should hide desktop sidebar on mobile",
      "filePath": "tests/e2e/mobile-pwa-features.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Mobile PWA Features - should hide desktop sidebar on mobile",
      "tags": ["async", "mocked", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.222Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_mobile_pwa_features_spec_ts__should_show_PWA_install_banner_when_applicable",
      "name": "should show PWA install banner when applicable",
      "filePath": "tests/e2e/mobile-pwa-features.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Mobile PWA Features - should show PWA install banner when applicable",
      "tags": ["async", "mocked", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.222Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_mobile_pwa_features_spec_ts__should_show_offline_indicator_when_offline",
      "name": "should show offline indicator when offline",
      "filePath": "tests/e2e/mobile-pwa-features.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Mobile PWA Features - should show offline indicator when offline",
      "tags": ["async", "mocked", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.222Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_mobile_pwa_features_spec_ts__should_navigate_between_pages_using_mobile_navigation",
      "name": "should navigate between pages using mobile navigation",
      "filePath": "tests/e2e/mobile-pwa-features.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Mobile PWA Features - should navigate between pages using mobile navigation",
      "tags": ["async", "mocked", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.223Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_mobile_pwa_features_spec_ts__should_show_attention_badge_on_navigation_when_items_present",
      "name": "should show attention badge on navigation when items present",
      "filePath": "tests/e2e/mobile-pwa-features.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Mobile PWA Features - should show attention badge on navigation when items present",
      "tags": ["async", "mocked", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.223Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_mobile_pwa_features_spec_ts__should_handle_quick_actions_in_mobile_dashboard",
      "name": "should handle quick actions in mobile dashboard",
      "filePath": "tests/e2e/mobile-pwa-features.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Mobile PWA Features - should handle quick actions in mobile dashboard",
      "tags": ["async", "mocked", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.223Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_mobile_pwa_features_spec_ts__should_display_stats_in_mobile_friendly_format",
      "name": "should display stats in mobile-friendly format",
      "filePath": "tests/e2e/mobile-pwa-features.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Mobile PWA Features - should display stats in mobile-friendly format",
      "tags": ["async", "mocked", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.223Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_mobile_pwa_features_spec_ts__should_show_current_status_information",
      "name": "should show current status information",
      "filePath": "tests/e2e/mobile-pwa-features.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Mobile PWA Features - should show current status information",
      "tags": ["async", "mocked", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.223Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_mobile_pwa_features_spec_ts__should_work_offline_with_service_worker",
      "name": "should work offline with service worker",
      "filePath": "tests/e2e/mobile-pwa-features.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Mobile PWA Features - should work offline with service worker",
      "tags": ["async", "mocked", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.224Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_mobile_pwa_features_spec_ts__should_maintain_responsive_design_across_different_mobile_sizes",
      "name": "should maintain responsive design across different mobile sizes",
      "filePath": "tests/e2e/mobile-pwa-features.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Mobile PWA Features - should maintain responsive design across different mobile sizes",
      "tags": ["async", "mocked", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.224Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_mobile_pwa_features_spec_ts__should_handle_PWA_manifest_correctly",
      "name": "should handle PWA manifest correctly",
      "filePath": "tests/e2e/mobile-pwa-features.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Mobile PWA Features - should handle PWA manifest correctly",
      "tags": ["async", "mocked", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.224Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_mobile_pwa_features_spec_ts__should_show_connection_status_indicator",
      "name": "should show connection status indicator",
      "filePath": "tests/e2e/mobile-pwa-features.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "mobile",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Mobile PWA Features - should show connection status indicator",
      "tags": ["async", "mocked", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.224Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_financial_impact_analysis_spec_ts__should_display_the_financial_impact_analysis_tab_and_its_content_on_the_Canvas_page",
      "name": "should display the financial impact analysis tab and its content on the Canvas page",
      "filePath": "tests/e2e/financial-impact-analysis.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Impact Analysis - should display the financial impact analysis tab and its content on the Canvas page",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.225Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_financial_impact_analysis_spec_ts__should_display_the_financial_impact_analysis_tab_and_its_content_on_the_Projects_page",
      "name": "should display the financial impact analysis tab and its content on the Projects page",
      "filePath": "tests/e2e/financial-impact-analysis.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Impact Analysis - should display the financial impact analysis tab and its content on the Projects page",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.225Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_financial_impact_analysis_spec_ts__should_display_the_financial_impact_analysis_tab_and_its_content_on_the_Teams_page",
      "name": "should display the financial impact analysis tab and its content on the Teams page",
      "filePath": "tests/e2e/financial-impact-analysis.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "financials",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Financial Impact Analysis - should display the financial impact analysis tab and its content on the Teams page",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.225Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_crud_operations_spec_ts__T",
      "name": "T",
      "filePath": "tests/e2e/crud-operations.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CRUD Operations - Consolidated Management Tests - T",
      "tags": ["async"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.226Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_crud_operations_spec_ts__should_view___entity_name__list_page_and_display_interface",
      "name": "should view ${entity.name} list page and display interface",
      "filePath": "tests/e2e/crud-operations.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CRUD Operations - Consolidated Management Tests - should view ${entity.name} list page and display interface",
      "tags": ["async"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.226Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_crud_operations_spec_ts__should_create_new___entity_name_slice_0___1__",
      "name": "should create new ${entity.name.slice(0, -1)}",
      "filePath": "tests/e2e/crud-operations.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CRUD Operations - Consolidated Management Tests - should create new ${entity.name.slice(0, -1)}",
      "tags": ["async"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.226Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_crud_operations_spec_ts__should_test___entity_name__search_and_filtering",
      "name": "should test ${entity.name} search and filtering",
      "filePath": "tests/e2e/crud-operations.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CRUD Operations - Consolidated Management Tests - should test ${entity.name} search and filtering",
      "tags": ["async"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.227Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_crud_operations_spec_ts__should_validate___entity_name__management_interface_elements",
      "name": "should validate ${entity.name} management interface elements",
      "filePath": "tests/e2e/crud-operations.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "teams",
      "priority": "high",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "CRUD Operations - Consolidated Management Tests - should validate ${entity.name} management interface elements",
      "tags": ["async"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.227Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_console_errors_ci_spec_ts____pageInfo_name__should_load_without_critical_errors",
      "name": "${pageInfo.name} should load without critical errors",
      "filePath": "tests/e2e/console-errors-ci.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Console Error Detection - CI Critical Pages - ${pageInfo.name} should load without critical errors",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.227Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_console_errors_ci_spec_ts__Summary_report",
      "name": "Summary report",
      "filePath": "tests/e2e/console-errors-ci.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Console Error Detection - CI Critical Pages - Summary report",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.228Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_comprehensive_console_errors_spec_ts____pageInfo_name__page_should_load_without_critical_errors",
      "name": "${pageInfo.name} page should load without critical errors",
      "filePath": "tests/e2e/comprehensive-console-errors.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Comprehensive Console Error Detection - All Pages & Views - ${pageInfo.name} page should load without critical errors",
      "tags": ["async", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.228Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_comprehensive_console_errors_spec_ts__Settings_page___all_tabs_and_sections",
      "name": "Settings page - all tabs and sections",
      "filePath": "tests/e2e/comprehensive-console-errors.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Comprehensive Console Error Detection - All Pages & Views - Settings page - all tabs and sections",
      "tags": ["async", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.229Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_comprehensive_console_errors_spec_ts__Planning_page___all_views_and_modes",
      "name": "Planning page - all views and modes",
      "filePath": "tests/e2e/comprehensive-console-errors.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Comprehensive Console Error Detection - All Pages & Views - Planning page - all views and modes",
      "tags": ["async", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.229Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_comprehensive_console_errors_spec_ts__Projects_page___project_details_and_modals",
      "name": "Projects page - project details and modals",
      "filePath": "tests/e2e/comprehensive-console-errors.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Comprehensive Console Error Detection - All Pages & Views - Projects page - project details and modals",
      "tags": ["async", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.230Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_comprehensive_console_errors_spec_ts__Summary_report___comprehensive_coverage",
      "name": "Summary report - comprehensive coverage",
      "filePath": "tests/e2e/comprehensive-console-errors.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Comprehensive Console Error Detection - All Pages & Views - Summary report - comprehensive coverage",
      "tags": ["async", "integration"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.230Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_all_pages_responsive_spec_ts____pageInfo_name__responsive_at___resolution_name_____resolution_width_x__resolution_height__",
      "name": "${pageInfo.name} responsive at ${resolution.name} (${resolution.width}x${resolution.height})",
      "filePath": "tests/e2e/all-pages-responsive.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "mobile",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Responsive Design - Optimized Critical Tests - ${pageInfo.name} responsive at ${resolution.name} (${resolution.width}x${resolution.height})",
      "tags": ["async", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.230Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_all_pages_responsive_spec_ts__Dynamic_viewport_resizing_should_work_correctly",
      "name": "Dynamic viewport resizing should work correctly",
      "filePath": "tests/e2e/all-pages-responsive.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "mobile",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Responsive Design - Optimized Critical Tests - Dynamic viewport resizing should work correctly",
      "tags": ["async", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.231Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_all_pages_responsive_spec_ts__Search_and_filter_controls_should_remain_accessible_on_all_resolutions",
      "name": "Search and filter controls should remain accessible on all resolutions",
      "filePath": "tests/e2e/all-pages-responsive.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "mobile",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Responsive Design - Optimized Critical Tests - Search and filter controls should remain accessible on all resolutions",
      "tags": ["async", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.231Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_4_ocr_workflow_spec_ts__should_display_OCR_interface_correctly",
      "name": "should display OCR interface correctly",
      "filePath": "tests/e2e/4-ocr-workflow.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "flaky",
      "ciTiers": ["comprehensive"],
      "description": "OCR Workflow - should display OCR interface correctly",
      "tags": ["async", "mocked", "e2e", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.232Z",
      "stability": 0.7,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": true,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_4_ocr_workflow_spec_ts__should_handle_file_upload_validation",
      "name": "should handle file upload validation",
      "filePath": "tests/e2e/4-ocr-workflow.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "flaky",
      "ciTiers": ["comprehensive"],
      "description": "OCR Workflow - should handle file upload validation",
      "tags": ["async", "mocked", "e2e", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.232Z",
      "stability": 0.7,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": true,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_4_ocr_workflow_spec_ts__should_accept_valid_image_files",
      "name": "should accept valid image files",
      "filePath": "tests/e2e/4-ocr-workflow.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "flaky",
      "ciTiers": ["comprehensive"],
      "description": "OCR Workflow - should accept valid image files",
      "tags": ["async", "mocked", "e2e", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.234Z",
      "stability": 0.7,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": true,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_4_ocr_workflow_spec_ts__should_accept_valid_PDF_files",
      "name": "should accept valid PDF files",
      "filePath": "tests/e2e/4-ocr-workflow.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "flaky",
      "ciTiers": ["comprehensive"],
      "description": "OCR Workflow - should accept valid PDF files",
      "tags": ["async", "mocked", "e2e", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.234Z",
      "stability": 0.7,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": true,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_4_ocr_workflow_spec_ts__should_show_loading_state_during_processing",
      "name": "should show loading state during processing",
      "filePath": "tests/e2e/4-ocr-workflow.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "flaky",
      "ciTiers": ["comprehensive"],
      "description": "OCR Workflow - should show loading state during processing",
      "tags": ["async", "mocked", "e2e", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.234Z",
      "stability": 0.7,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": true,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_4_ocr_workflow_spec_ts__should_update_step_indicators_during_processing",
      "name": "should update step indicators during processing",
      "filePath": "tests/e2e/4-ocr-workflow.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "flaky",
      "ciTiers": ["comprehensive"],
      "description": "OCR Workflow - should update step indicators during processing",
      "tags": ["async", "mocked", "e2e", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.235Z",
      "stability": 0.7,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": true,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_4_ocr_workflow_spec_ts__should_reset_workflow_when_Start_Over_is_clicked",
      "name": "should reset workflow when Start Over is clicked",
      "filePath": "tests/e2e/4-ocr-workflow.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "flaky",
      "ciTiers": ["comprehensive"],
      "description": "OCR Workflow - should reset workflow when Start Over is clicked",
      "tags": ["async", "mocked", "e2e", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.235Z",
      "stability": 0.7,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": true,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_4_ocr_workflow_spec_ts__should_handle_large_files_gracefully",
      "name": "should handle large files gracefully",
      "filePath": "tests/e2e/4-ocr-workflow.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "flaky",
      "ciTiers": ["comprehensive"],
      "description": "OCR Workflow - should handle large files gracefully",
      "tags": ["async", "mocked", "e2e", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.236Z",
      "stability": 0.7,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": true,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_4_ocr_workflow_spec_ts__should_be_accessible",
      "name": "should be accessible",
      "filePath": "tests/e2e/4-ocr-workflow.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "flaky",
      "ciTiers": ["comprehensive"],
      "description": "OCR Workflow - should be accessible",
      "tags": ["async", "mocked", "e2e", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.236Z",
      "stability": 0.7,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": true,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_4_ocr_workflow_spec_ts__should_handle_navigation_away_and_back",
      "name": "should handle navigation away and back",
      "filePath": "tests/e2e/4-ocr-workflow.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "flaky",
      "ciTiers": ["comprehensive"],
      "description": "OCR Workflow - should handle navigation away and back",
      "tags": ["async", "mocked", "e2e", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.236Z",
      "stability": 0.7,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": true,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_4_ocr_workflow_spec_ts__should_work_on_different_screen_sizes",
      "name": "should work on different screen sizes",
      "filePath": "tests/e2e/4-ocr-workflow.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "flaky",
      "ciTiers": ["comprehensive"],
      "description": "OCR Workflow - should work on different screen sizes",
      "tags": ["async", "mocked", "e2e", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.237Z",
      "stability": 0.7,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": true,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_4_ocr_workflow_spec_ts__should_maintain_state_during_tab_switching",
      "name": "should maintain state during tab switching",
      "filePath": "tests/e2e/4-ocr-workflow.spec.ts",
      "type": "unit",
      "category": "context",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "flaky",
      "ciTiers": ["comprehensive"],
      "description": "OCR Workflow - should maintain state during tab switching",
      "tags": ["async", "mocked", "e2e", "responsive", "mobile", "desktop"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.237Z",
      "stability": 0.7,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile", "desktop"],
        "requires": ["playwright"],
        "flaky": true,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_3_jira_integration_spec_ts__should_show_Jira_import_option_and_basic_functionality",
      "name": "should show Jira import option and basic functionality",
      "filePath": "tests/e2e/3-jira-integration.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Jira Import Basic E2E Test - should show Jira import option and basic functionality",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.237Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_3_jira_integration_spec_ts__should_verify_Jira_import_appears_in_dropdown_options",
      "name": "should verify Jira import appears in dropdown options",
      "filePath": "tests/e2e/3-jira-integration.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "projects",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Jira Import Basic E2E Test - should verify Jira import appears in dropdown options",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.237Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_2_advanced_data_import_spec_ts__should_complete_full_banking_portfolio_import_workflow",
      "name": "should complete full banking portfolio import workflow",
      "filePath": "tests/e2e/2-advanced-data-import.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "critical",
      "status": "flaky",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Advanced Data Import - Projects with Epics & Planning Allocations - should complete full banking portfolio import workflow",
      "tags": ["async", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.239Z",
      "stability": 0.7,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["playwright"],
        "flaky": true,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_2_advanced_data_import_spec_ts__should_handle_basic_team_import_for_CI",
      "name": "should handle basic team import for CI",
      "filePath": "tests/e2e/2-advanced-data-import.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "critical",
      "status": "flaky",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Advanced Data Import - Projects with Epics & Planning Allocations - should handle basic team import for CI",
      "tags": ["async", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.240Z",
      "stability": 0.7,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["playwright"],
        "flaky": true,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_2_advanced_data_import_spec_ts__should_handle_validation_errors_for_invalid_allocation_data",
      "name": "should handle validation errors for invalid allocation data",
      "filePath": "tests/e2e/2-advanced-data-import.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "settings",
      "priority": "critical",
      "status": "flaky",
      "ciTiers": ["comprehensive", "quality"],
      "description": "Advanced Data Import - Projects with Epics & Planning Allocations - should handle validation errors for invalid allocation data",
      "tags": ["async", "integration", "mobile"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.240Z",
      "stability": 0.7,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": ["mobile"],
        "requires": ["playwright"],
        "flaky": true,
        "slow": true
      }
    },
    {
      "id": "tests_e2e_1_setup_foundation_spec_ts__should_complete_setup_wizard_and_create_quarters_with_iterations",
      "name": "should complete setup wizard and create quarters with iterations",
      "filePath": "tests/e2e/1-setup-foundation.spec.ts",
      "type": "unit",
      "category": "utility",
      "featureArea": "dashboard",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "Foundation Setup (runs first) - should complete setup wizard and create quarters with iterations",
      "tags": ["async", "e2e"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.241Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["playwright"],
        "flaky": false,
        "slow": true
      }
    },
    {
      "id": "src___tests___accessibility_focus_trap_test_tsx__focuses_first_element_when_activated",
      "name": "focuses first element when activated",
      "filePath": "src/__tests__/accessibility/focus-trap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "focus-trap.test - focuses first element when activated",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.241Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___accessibility_focus_trap_test_tsx__traps_focus_within_container",
      "name": "traps focus within container",
      "filePath": "src/__tests__/accessibility/focus-trap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "focus-trap.test - traps focus within container",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.241Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___accessibility_focus_trap_test_tsx__handles_shift_tab_for_backward_navigation",
      "name": "handles shift+tab for backward navigation",
      "filePath": "src/__tests__/accessibility/focus-trap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "focus-trap.test - handles shift+tab for backward navigation",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.241Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___accessibility_focus_trap_test_tsx__calls_onDeactivate_when_escape_is_pressed",
      "name": "calls onDeactivate when escape is pressed",
      "filePath": "src/__tests__/accessibility/focus-trap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "focus-trap.test - calls onDeactivate when escape is pressed",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.241Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___accessibility_focus_trap_test_tsx__calls_onDeactivate_when_clicking_outside",
      "name": "calls onDeactivate when clicking outside",
      "filePath": "src/__tests__/accessibility/focus-trap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "focus-trap.test - calls onDeactivate when clicking outside",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.242Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___accessibility_focus_trap_test_tsx__does_not_call_onDeactivate_when_clicking_inside",
      "name": "does not call onDeactivate when clicking inside",
      "filePath": "src/__tests__/accessibility/focus-trap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "focus-trap.test - does not call onDeactivate when clicking inside",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.242Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___accessibility_focus_trap_test_tsx__does_not_trap_focus_when_inactive",
      "name": "does not trap focus when inactive",
      "filePath": "src/__tests__/accessibility/focus-trap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "focus-trap.test - does not trap focus when inactive",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.242Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___accessibility_focus_trap_test_tsx__restores_focus_when_deactivated",
      "name": "restores focus when deactivated",
      "filePath": "src/__tests__/accessibility/focus-trap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "focus-trap.test - restores focus when deactivated",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.242Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___accessibility_focus_trap_test_tsx__focuses_initial_focus_element_when_provided",
      "name": "focuses initial focus element when provided",
      "filePath": "src/__tests__/accessibility/focus-trap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "focus-trap.test - focuses initial focus element when provided",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.242Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___accessibility_focus_trap_test_tsx__handles_empty_container_gracefully",
      "name": "handles empty container gracefully",
      "filePath": "src/__tests__/accessibility/focus-trap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "focus-trap.test - handles empty container gracefully",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.242Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___accessibility_focus_trap_test_tsx__ignores_non_focusable_elements",
      "name": "ignores non-focusable elements",
      "filePath": "src/__tests__/accessibility/focus-trap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "focus-trap.test - ignores non-focusable elements",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.242Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___accessibility_focus_trap_test_tsx__manages_focus_trap_state",
      "name": "manages focus trap state",
      "filePath": "src/__tests__/accessibility/focus-trap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "focus-trap.test - manages focus trap state",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.242Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___accessibility_focus_trap_test_tsx__maintains_proper_ARIA_attributes",
      "name": "maintains proper ARIA attributes",
      "filePath": "src/__tests__/accessibility/focus-trap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "focus-trap.test - maintains proper ARIA attributes",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.242Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___accessibility_focus_trap_test_tsx__works_with_screen_readers",
      "name": "works with screen readers",
      "filePath": "src/__tests__/accessibility/focus-trap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "focus-trap.test - works with screen readers",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.242Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___accessibility_focus_trap_test_tsx__handles_keyboard_navigation_properly",
      "name": "handles keyboard navigation properly",
      "filePath": "src/__tests__/accessibility/focus-trap.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "settings",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "focus-trap.test - handles keyboard navigation properly",
      "tags": ["async", "mocked"],
      "estimatedDuration": 390,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.242Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___performance_skills_performance_test_tsx__should_handle_large_skill_sets_efficiently__1000_skills__100_teams_",
      "name": "should handle large skill sets efficiently (1000 skills, 100 teams)",
      "filePath": "src/__tests__/performance/skills-performance.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "skills",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Skills Performance Tests - should handle large skill sets efficiently (1000 skills, 100 teams)",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.243Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___performance_skills_performance_test_tsx__should_efficiently_find_best_teams_from_large_pool__500_teams_",
      "name": "should efficiently find best teams from large pool (500 teams)",
      "filePath": "src/__tests__/performance/skills-performance.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "skills",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Skills Performance Tests - should efficiently find best teams from large pool (500 teams)",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.243Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___performance_skills_performance_test_tsx__should_handle_complex_skill_coverage_analysis_efficiently",
      "name": "should handle complex skill coverage analysis efficiently",
      "filePath": "src/__tests__/performance/skills-performance.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "skills",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Skills Performance Tests - should handle complex skill coverage analysis efficiently",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.243Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___performance_skills_performance_test_tsx__should_handle_teams_with_no_skills_efficiently",
      "name": "should handle teams with no skills efficiently",
      "filePath": "src/__tests__/performance/skills-performance.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "skills",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Skills Performance Tests - should handle teams with no skills efficiently",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.243Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___performance_skills_performance_test_tsx__should_handle_projects_requiring_all_available_skills",
      "name": "should handle projects requiring all available skills",
      "filePath": "src/__tests__/performance/skills-performance.test.tsx",
      "type": "unit",
      "category": "component",
      "featureArea": "skills",
      "priority": "critical",
      "status": "active",
      "ciTiers": ["lightning", "comprehensive", "quality"],
      "description": "Skills Performance Tests - should handle projects requiring all available skills",
      "tags": ["mocked"],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.243Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["testing-library", "vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___performance_bundle_size_test_ts__should_not_exceed_main_bundle_size_limits",
      "name": "should not exceed main bundle size limits",
      "filePath": "src/__tests__/performance/bundle-size.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "bundle-size.test - should not exceed main bundle size limits",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.243Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___performance_bundle_size_test_ts__should_have_efficient_gzipped_sizes",
      "name": "should have efficient gzipped sizes",
      "filePath": "src/__tests__/performance/bundle-size.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "bundle-size.test - should have efficient gzipped sizes",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.243Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___performance_bundle_size_test_ts__should_have_proper_chunk_splitting",
      "name": "should have proper chunk splitting",
      "filePath": "src/__tests__/performance/bundle-size.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "bundle-size.test - should have proper chunk splitting",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.244Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    },
    {
      "id": "src___tests___performance_bundle_size_test_ts__should_not_have_overly_large_individual_files",
      "name": "should not have overly large individual files",
      "filePath": "src/__tests__/performance/bundle-size.test.ts",
      "type": "unit",
      "category": "component",
      "featureArea": "canvas",
      "priority": "medium",
      "status": "active",
      "ciTiers": ["comprehensive"],
      "description": "bundle-size.test - should not have overly large individual files",
      "tags": [],
      "estimatedDuration": 100,
      "dependencies": [],
      "maintainer": "team",
      "lastModified": "2025-08-15T20:53:19.244Z",
      "stability": 0.95,
      "coverage": {},
      "metadata": {
        "browser": [],
        "viewport": [],
        "requires": ["vitest"],
        "flaky": false,
        "slow": false
      }
    }
  ],
  "testSuites": [
    {
      "id": "skills_unit",
      "name": "skills unit tests",
      "tests": [
        "src_components___tests___SkillsSettings_test_tsx__should_handle_missing_setSkills_function_gracefully__testing_defensive_coding_",
        "src_components___tests___SkillsSettings_test_tsx__should_successfully_add_a_skill_when_setSkills_function_is_properly_available",
        "src_utils___tests___skillsUtils_test_ts__should_return_skill_names_for_valid_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_filter_out_invalid_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_return_empty_array_for_empty_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_return_empty_array_for_null_undefined_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_return_empty_array_for_null_undefined_skills",
        "src_utils___tests___skillsUtils_test_ts__should_handle_empty_skills_array",
        "src_utils___tests___skillsUtils_test_ts__should_preserve_order_of_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_handle_duplicate_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_return_skill_objects_for_valid_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_filter_out_invalid_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_return_empty_array_for_empty_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_return_empty_array_for_null_undefined_inputs",
        "src_utils___tests___skillsUtils_test_ts__should_preserve_order_of_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_handle_duplicate_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_validate_all_valid_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_identify_invalid_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_handle_all_invalid_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_handle_empty_skill_IDs_array",
        "src_utils___tests___skillsUtils_test_ts__should_handle_null_undefined_inputs_gracefully",
        "src_utils___tests___skillsUtils_test_ts__should_handle_duplicate_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_handle_empty_skills_array",
        "src_utils___tests___skillsUtils_test_ts__should_group_skills_by_category",
        "src_utils___tests___skillsUtils_test_ts__should_handle_skills_with_empty_or_null_categories",
        "src_utils___tests___skillsUtils_test_ts__should_handle_invalid_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_return_empty_object_for_empty_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_handle_null_undefined_inputs",
        "src_utils___tests___skillsUtils_test_ts__should_handle_single_category",
        "src_utils___tests___skillsUtils_test_ts__should_preserve_skill_order_within_categories",
        "src_utils___tests___skillsUtils_test_ts__should_return_unselected_skills",
        "src_utils___tests___skillsUtils_test_ts__should_return_all_skills_when_no_skills_are_selected",
        "src_utils___tests___skillsUtils_test_ts__should_return_all_skills_when_selectedSkillIds_is_null_undefined",
        "src_utils___tests___skillsUtils_test_ts__should_return_empty_array_when_allSkills_is_null_undefined",
        "src_utils___tests___skillsUtils_test_ts__should_handle_all_skills_selected",
        "src_utils___tests___skillsUtils_test_ts__should_handle_invalid_selected_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_handle_duplicate_selected_skill_IDs",
        "src_utils___tests___skillsUtils_test_ts__should_preserve_original_skills_array_order",
        "src_utils___tests___skillsUtils_test_ts__should_handle_empty_allSkills_array",
        "src_utils___tests___skillsUtils_test_ts__should_handle_malformed_skill_objects",
        "src_utils___tests___skillsUtils_test_ts__should_handle_very_large_skill_arrays_efficiently",
        "src_utils___tests___skillsUtils_test_ts__should_handle_circular_references_gracefully",
        "src_utils___tests___skillsUtils_test_ts__should_handle_special_characters_in_skill_IDs_and_names",
        "src_utils___tests___skillsMigration_test_ts__should_find_exact_matches_with_highest_confidence",
        "src_utils___tests___skillsMigration_test_ts__should_find_case_insensitive_exact_matches",
        "src_utils___tests___skillsMigration_test_ts__should_find_partial_matches",
        "src_utils___tests___skillsMigration_test_ts__should_find_fuzzy_matches_with_reasonable_confidence",
        "src_utils___tests___skillsMigration_test_ts__should_sort_matches_by_confidence_and_type_priority",
        "src_utils___tests___skillsMigration_test_ts__should_return_empty_array_when_no_matches_meet_threshold",
        "src_utils___tests___skillsMigration_test_ts__should_identify_team_already_using_skill_IDs",
        "src_utils___tests___skillsMigration_test_ts__should_categorize_skills_correctly_for_team_needing_migration",
        "src_utils___tests___skillsMigration_test_ts__should_handle_ambiguous_matches_correctly",
        "src_utils___tests___skillsMigration_test_ts__should_handle_empty_target_skills_gracefully",
        "src_utils___tests___skillsMigration_test_ts__should_create_skill_entities_with_proper_structure",
        "src_utils___tests___skillsMigration_test_ts__should_use_default_category_when_none_provided",
        "src_utils___tests___skillsMigration_test_ts__should_handle_empty_array",
        "src_utils___tests___skillsMigration_test_ts__should_trim_skill_names",
        "src_utils___tests___skillsMigration_test_ts__should_apply_automatic_matches_correctly",
        "src_utils___tests___skillsMigration_test_ts__should_apply_manual_mappings_for_ambiguous_matches",
        "src_utils___tests___skillsMigration_test_ts__should_preserve_team_properties_other_than_targetSkills",
        "src_utils___tests___skillsMigration_test_ts__should_pass_validation_for_successful_migration",
        "src_utils___tests___skillsMigration_test_ts__should_detect_invalid_skill_IDs",
        "src_utils___tests___skillsMigration_test_ts__should_detect_team_count_mismatch",
        "src_utils___tests___skillsMigration_test_ts__should_warn_about_skill_count_reductions",
        "src_utils___tests___skillsMigration_test_ts__should_analyze_all_teams_and_provide_summary",
        "src_utils___tests___skillsMigration_test_ts__should_count_already_migrated_teams_correctly",
        "src_utils___tests___skillsMigration_test_ts__should_generate_comprehensive_migration_preview",
        "src_utils___tests___skillsMigration_test_ts__should_identify_skills_needing_review",
        "src_utils___tests___skillsMigration_test_ts__should_deduplicate_missing_skills_across_teams",
        "src_utils___tests___skillsMigration_test_ts__should_handle_teams_with_null_targetSkills",
        "src_utils___tests___skillsMigration_test_ts__should_handle_teams_with_undefined_targetSkills",
        "src_utils___tests___skillsMigration_test_ts__should_handle_empty_skills_array",
        "src_utils___tests___skillsMigration_test_ts__should_handle_very_low_confidence_threshold",
        "src_utils___tests___skillsMigration_test_ts__should_handle_skills_with_special_characters",
        "src_utils___tests___skillsMigration_test_ts__should_handle_large_number_of_teams_efficiently",
        "src_utils___tests___skillsMigration_test_ts__should_handle_large_number_of_skills_efficiently",
        "src___tests___integration_skills_test_ts__should_have_people_with_assigned_skills",
        "src___tests___integration_skills_test_ts__should_have_people_with_multiple_skills",
        "src___tests___integration_skills_test_ts__should_have_Product_Owners_with_domain_skills",
        "src___tests___integration_skills_test_ts__should_have_Software_Engineers_with_technical_skills",
        "src___tests___integration_skills_test_ts__should_calculate_team_skill_coverage",
        "src___tests___integration_skills_test_ts__should_calculate_organization_skill_metrics",
        "src___tests___integration_skills_test_ts__should_identify_high_proficiency_skills",
        "src___tests___integration_skills_test_ts__should_have_consistent_data_types",
        "src___tests___integration_skills_test_ts__should_have_valid_skill_proficiency_levels",
        "src___tests___integration_skills_test_ts__should_have_valid_skill_categories",
        "tests_e2e_solution_skills_team_integration_spec_ts__complete_workflow__solution___skills___team_analysis",
        "tests_e2e_solution_skills_team_integration_spec_ts__verify_skill_importance_inheritance_from_solution",
        "tests_e2e_solution_skills_team_integration_spec_ts__verify_multiple_solutions_with_overlapping_skills",
        "src___tests___performance_skills_performance_test_tsx__should_handle_large_skill_sets_efficiently__1000_skills__100_teams_",
        "src___tests___performance_skills_performance_test_tsx__should_efficiently_find_best_teams_from_large_pool__500_teams_",
        "src___tests___performance_skills_performance_test_tsx__should_handle_complex_skill_coverage_analysis_efficiently",
        "src___tests___performance_skills_performance_test_tsx__should_handle_teams_with_no_skills_efficiently",
        "src___tests___performance_skills_performance_test_tsx__should_handle_projects_requiring_all_available_skills"
      ],
      "type": "unit",
      "featureArea": "skills",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": false
      }
    },
    {
      "id": "settings_unit",
      "name": "settings unit tests",
      "tests": [
        "src_components___tests___SidebarMinimize_test_tsx__should_render_minimize_button_in_expanded_state",
        "src_components___tests___SidebarMinimize_test_tsx__should_have_correct_accessibility_attributes",
        "src_components___tests___SidebarMinimize_test_tsx__should_have_proper_styling_classes",
        "src_components___tests___SidebarMinimize_test_tsx__should_be_clickable",
        "src_components___tests___SidebarMinimize_test_tsx__should_be_keyboard_accessible",
        "src_components___tests___SidebarMinimize_test_tsx__should_respond_to_Enter_key",
        "src_components___tests___SidebarMinimize_test_tsx__should_respond_to_Space_key",
        "src_components___tests___SidebarMinimize_test_tsx__should_be_positioned_in_sidebar_header",
        "src_components___tests___SidebarMinimize_test_tsx__should_be_positioned_after_the_title",
        "src_components___tests___SidebarMinimize_test_tsx__should_display_PanelLeft_icon",
        "src_components___tests___SidebarMinimize_test_tsx__should_have_tooltip_structure",
        "src_components___tests___SidebarMinimize_test_tsx__should_have_minimizeSidebar_function_available",
        "src_components___tests___Footer_test_tsx__renders_without_crashing",
        "src_components___tests___Footer_test_tsx__displays_version_information",
        "src_components___tests___Footer_test_tsx__has_proper_semantic_structure",
        "src_components_ui___tests___virtual_table_test_tsx__should_render_table_with_data",
        "src_components_ui___tests___virtual_table_test_tsx__should_render_empty_message_when_no_data",
        "src_components_ui___tests___virtual_table_test_tsx__should_render_with_custom_class_name",
        "src_components_ui___tests___virtual_table_test_tsx__should_render_custom_cell_content_using_render_function",
        "src_components_ui___tests___virtual_table_test_tsx__should_show_search_input_when_searchable_is_true",
        "src_components_ui___tests___virtual_table_test_tsx__should_filter_data_based_on_search_term",
        "src_components_ui___tests___virtual_table_test_tsx__should_search_across_all_columns",
        "src_components_ui___tests___virtual_table_test_tsx__should_show_no_results_when_search_term_has_no_matches",
        "src_components_ui___tests___virtual_table_test_tsx__should_show_sort_buttons_for_sortable_columns",
        "src_components_ui___tests___virtual_table_test_tsx__should_sort_data_in_ascending_order_on_first_click",
        "src_components_ui___tests___virtual_table_test_tsx__should_sort_data_in_descending_order_on_second_click",
        "src_components_ui___tests___virtual_table_test_tsx__should_clear_sort_on_third_click",
        "src_components_ui___tests___virtual_table_test_tsx__should_call_onRowClick_when_row_is_clicked",
        "src_components_ui___tests___virtual_table_test_tsx__should_not_throw_error_when_onRowClick_is_not_provided",
        "src_components_ui___tests___virtual_table_test_tsx__should_display_performance_statistics",
        "src_components_ui___tests___virtual_table_test_tsx__should_handle_large_datasets_efficiently",
        "src_components_ui___tests___virtual_table_test_tsx__should_use_custom_item_size_when_provided",
        "src_components_ui___tests___virtual_table_test_tsx__should_handle_empty_columns_array",
        "src_components_ui___tests___virtual_table_test_tsx__should_handle_missing_column_data_gracefully",
        "src_components_ui___tests___virtual_table_test_tsx__should_handle_null_or_undefined_values_in_data",
        "src_components_ui___tests___virtual_table_test_tsx__should_have_proper_ARIA_attributes_for_table_structure",
        "src_components_ui___tests___virtual_table_test_tsx__should_support_keyboard_navigation_for_sort_buttons",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_render_with_default_props",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_render_custom_title",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_show_notification_count",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_show_unread_notification_count",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_render_empty_state_when_no_notifications",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_render_loading_state",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_render_error_state",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_render_all_notification_types",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_show_notification_priorities",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_show_notification_categories",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_show_read_unread_status",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_display_timestamps",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_handle_notification_clicks",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_handle_notification_dismissal",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_handle_notification_actions",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_mark_all_notifications_as_read",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_clear_all_notifications",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_filter_notifications_by_type",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_filter_notifications_by_priority",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_filter_notifications_by_category",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_filter_notifications_by_read_status",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_sort_notifications_by_timestamp",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_group_notifications_by_category",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_group_notifications_by_priority",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_group_notifications_by_date",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_collapse_and_expand_groups",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_search_notifications_by_title",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_search_notifications_by_message_content",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_search_notifications_by_tags",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_display_notification_rules",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_create_new_notification_rule",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_toggle_rule_enabled_status",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_display_notification_settings",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_toggle_global_notifications",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_toggle_sound_notifications",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_configure_do_not_disturb",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_configure_notification_channels",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_handle_real_time_notification_updates",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_show_auto_refresh_indicator",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_handle_notification_sound",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_have_proper_ARIA_attributes",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_support_keyboard_navigation",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_announce_updates_to_screen_readers",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_provide_notification_count_for_screen_readers",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_virtualize_large_notification_lists",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_lazy_load_notification_details",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_handle_invalid_notification_data",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_display_error_state_for_data_loading_failures",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_export_notifications",
        "src_components_ui___tests___intelligent_notification_system_test_tsx__should_show_notification_analytics",
        "src_components_ui___tests___Input_test_tsx__renders_input_with_default_props",
        "src_components_ui___tests___Input_test_tsx__renders_input_with_different_types",
        "src_components_ui___tests___Input_test_tsx__applies_disabled_state",
        "src_components_ui___tests___Input_test_tsx__forwards_ref_correctly",
        "src_components_ui___tests___Input_test_tsx__handles_value_changes",
        "src_components_ui___tests___Input_test_tsx__applies_custom_className",
        "src_components_ui___tests___Input_test_tsx__renders_with_aria_attributes",
        "src_components_ui___tests___Card_test_tsx__renders_card_with_basic_content",
        "src_components_ui___tests___Card_test_tsx__renders_card_with_header",
        "src_components_ui___tests___Card_test_tsx__renders_card_with_footer",
        "src_components_ui___tests___Card_test_tsx__renders_complete_card_structure",
        "src_components_ui___tests___Card_test_tsx__applies_custom_className",
        "src_components_ui___tests___Button_test_tsx__renders_button_with_default_variant",
        "src_components_ui___tests___Button_test_tsx__renders_button_with_different_variants",
        "src_components_ui___tests___Button_test_tsx__renders_button_with_different_sizes",
        "src_components_ui___tests___Button_test_tsx__applies_disabled_state",
        "src_components_ui___tests___Button_test_tsx__renders_as_a_link_when_asChild_is_true",
        "src_components_ui___tests___Button_test_tsx__forwards_ref_correctly",
        "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_render_the_initial_step_with_file_upload_options",
        "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_show_validation_errors_for_missing_files",
        "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_enable_next_button_when_files_are_uploaded_and_cycle_is_selected",
        "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_show_step_indicators",
        "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_allow_closing_the_wizard",
        "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_show_progress_through_steps",
        "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_show_separate_financial_year_and_quarter_dropdowns",
        "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_show_helpful_text_for_quarter_selection",
        "src_components_settings___tests___PowerBiImportWizard_test_tsx__should_show_validation_error_when_quarter_selection_is_cleared",
        "src_components_settings___tests___IntegrationsSettings_test_tsx__should_display_O365_integration_section",
        "src_components_settings___tests___IntegrationsSettings_test_tsx__should_show_current_O365_configuration_values",
        "src_components_settings___tests___IntegrationsSettings_test_tsx__should_show_O365_integration_as_enabled",
        "src_components_settings___tests___IntegrationsSettings_test_tsx__should_show_empty_form_fields",
        "src_components_settings___tests___IntegrationsSettings_test_tsx__should_show_O365_integration_as_disabled",
        "src_components_settings___tests___IntegrationsSettings_test_tsx__should_update_client_ID_field",
        "src_components_settings___tests___IntegrationsSettings_test_tsx__should_update_tenant_ID_field",
        "src_components_settings___tests___IntegrationsSettings_test_tsx__should_update_redirect_URI_field",
        "src_components_settings___tests___IntegrationsSettings_test_tsx__should_toggle_enabled_state",
        "src_components_settings___tests___IntegrationsSettings_test_tsx__should_save_configuration_with_valid_data",
        "src_components_settings___tests___IntegrationsSettings_test_tsx__should_show_error_when_client_ID_is_missing",
        "src_components_settings___tests___IntegrationsSettings_test_tsx__should_show_test_connection_button",
        "src_components_settings___tests___IntegrationsSettings_test_tsx__should_attempt_connection_test_when_clicked",
        "src_components_settings___tests___IntegrationsSettings_test_tsx__should_show_reset_button",
        "src_components_settings___tests___IntegrationsSettings_test_tsx__should_reset_to_default_values_when_clicked",
        "src_components_settings___tests___GeneralSettings_test_tsx__renders_without_crashing",
        "src_components_settings___tests___GeneralSettings_test_tsx__displays_theme_and_appearance_section",
        "src_components_settings___tests___GeneralSettings_test_tsx__displays_application_name_field",
        "src_components_settings___tests___GeneralSettings_test_tsx__displays_default_capacity_field",
        "src_components_settings___tests___GeneralSettings_test_tsx__displays_default_employment_type_select",
        "src_components_settings___tests___GeneralSettings_test_tsx__displays_date_format_select",
        "src_components_settings___tests___GeneralSettings_test_tsx__displays_build_information_section",
        "src_components_settings___tests___GeneralSettings_test_tsx__handles_application_name_change",
        "src_components_settings___tests___GeneralSettings_test_tsx__handles_capacity_change",
        "src_components_settings___tests___GeneralSettings_test_tsx__handles_save_button_click",
        "src_components_settings___tests___GeneralSettings_test_tsx__toggles_theme_preview_visibility",
        "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_render_children_with_screen_reader_only_classes",
        "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_apply_custom_className",
        "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_clone_element_when_asChild_is_true",
        "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_render_as_span_wrapper_when_asChild_is_false",
        "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_handle_text_content",
        "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_apply_all_accessibility_classes",
        "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_return_sr_only_class_when_show_is_true",
        "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_return_empty_string_when_show_is_false",
        "src_components_ui_accessibility___tests___VisuallyHidden_test_tsx__should_default_to_true_when_no_parameter_provided",
        "src_components_ui_accessibility___tests___SkipLinks_test_tsx__should_render_skip_links_when_available",
        "src_components_ui_accessibility___tests___SkipLinks_test_tsx__should_not_render_when_no_skip_links_are_available",
        "src_components_ui_accessibility___tests___SkipLinks_test_tsx__should_call_skipToContent_when_skip_link_is_clicked",
        "src_components_ui_accessibility___tests___SkipLinks_test_tsx__should_apply_custom_className",
        "src_components_ui_accessibility___tests___SkipLinks_test_tsx__should_have_proper_ARIA_attributes",
        "src_components_ui_accessibility___tests___SkipLinks_test_tsx__should_register_skip_link_on_mount",
        "src_components_ui_accessibility___tests___SkipLinks_test_tsx__should_unregister_skip_link_on_unmount",
        "src_components_ui_accessibility___tests___SkipLinks_test_tsx__should_re_register_when_id_or_label_changes",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_render_with_default_aria_live_",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_use_assertive_priority_when_specified",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_use_off_priority_when_specified",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_set_atomic_to_false_when_specified",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_set_custom_aria_relevant",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_apply_custom_className",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_set_custom_id",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_render_as_polite_live_region_with_status_role",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_apply_custom_className",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_render_as_assertive_live_region_with_alert_role",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_apply_custom_className",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_initially_have_empty_announcement",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_set_announcement_when_announce_is_called",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_clear_announcement_after_default_duration",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_clear_announcement_after_custom_duration",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_immediately_clear_announcement_when_clearAnnouncement_is_called",
        "src_components_ui_accessibility___tests___LiveRegion_test_tsx__should_handle_multiple_announcements_and_use_the_latest",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_render_items_with_keyboard_navigation",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_have_proper_ARIA_attributes",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_handle_arrow_down_navigation",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_handle_arrow_up_navigation",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_handle_Home_and_End_keys",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_call_onSelect_when_Enter_is_pressed",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_call_onSelect_when_Space_is_pressed",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_call_onEscape_when_Escape_is_pressed",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_support_horizontal_orientation",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_support_custom_role",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_provide_ref_methods",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_render_option_elements_with_proper_ARIA_attributes",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_update_aria_selected_when_item_is_focused",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_initialize_with_focused_index__1",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_handle_arrow_down_navigation",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_handle_arrow_up_navigation",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_handle_Home_and_End_keys",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_allow_manual_focus_setting",
        "src_components_ui_accessibility___tests___KeyboardNavigable_test_tsx__should_handle_Escape_key",
        "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_render_children",
        "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_set_up_focus_trap_when_active",
        "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_not_set_up_focus_trap_when_inactive",
        "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_restore_focus_on_unmount_when_restoreFocus_is_true",
        "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_not_restore_focus_on_unmount_when_restoreFocus_is_false",
        "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_focus_first_focusable_element_when_trap_is_activated",
        "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_apply_custom_className",
        "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_have_tabIndex__1_on_container",
        "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_provide_containerRef",
        "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_enable_focus_trap_when_enableTrap_is_called",
        "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_disable_focus_trap_when_disableTrap_is_called",
        "src_components_ui_accessibility___tests___FocusTrap_test_tsx__should_handle_enableTrap_with_custom_container",
        "src_components_ui_accessibility___tests___AccessibilityProvider_test_tsx__should_provide_accessibility_context_to_children",
        "src_components_ui_accessibility___tests___AccessibilityProvider_test_tsx__should_provide_focus_management_functions",
        "src_components_ui_accessibility___tests___AccessibilityProvider_test_tsx__should_provide_announcement_function",
        "src_components_ui_accessibility___tests___AccessibilityProvider_test_tsx__should_throw_error_when_used_outside_provider",
        "src_hooks___tests___useSmartCache_test_ts__should_initialize_with_default_configuration",
        "src_hooks___tests___useSmartCache_test_ts__should_store_and_retrieve_data",
        "src_hooks___tests___useSmartCache_test_ts__should_return_null_for_non_existent_keys",
        "src_hooks___tests___useSmartCache_test_ts__should_handle_getOrFetch_with_cache_miss",
        "src_hooks___tests___useSmartCache_test_ts__should_handle_getOrFetch_with_cache_hit",
        "src_hooks___tests___useSmartCache_test_ts__should_expire_data_after_TTL",
        "src_hooks___tests___useSmartCache_test_ts__should_handle_stale_while_revalidate",
        "src_hooks___tests___useSmartCache_test_ts__should_invalidate_single_cache_entry",
        "src_hooks___tests___useSmartCache_test_ts__should_invalidate_by_pattern",
        "src_hooks___tests___useSmartCache_test_ts__should_clear_all_cache_entries",
        "src_hooks___tests___useSmartCache_test_ts__should_handle_fetcher_errors_with_retry",
        "src_hooks___tests___useSmartCache_test_ts__should_handle_persistent_fetcher_failures",
        "src_hooks___tests___useSmartCache_test_ts__should_update_statistics_as_cache_is_used",
        "src_hooks___tests___useSmartCache_test_ts__should_provide_memory_usage_information",
        "src_hooks___tests___useSmartCache_test_ts__should_run_cleanup_processes_in_background",
        "src_hooks___tests___useSmartCache_test_ts__should_accept_custom_configuration",
        "src_hooks___tests___useSmartCache_test_ts__should_handle_encryption_configuration",
        "src_hooks___tests___useO365SyncWithSettings_test_ts__should_initialize_O365_service_with_settings_config",
        "src_hooks___tests___useO365SyncWithSettings_test_ts__should_set_initialized_state_to_true_after_successful_init",
        "src_hooks___tests___useO365SyncWithSettings_test_ts__should_not_show_error_when_config_is_valid",
        "src_hooks___tests___useO365SyncWithSettings_test_ts__should_not_initialize_O365_service_when_disabled",
        "src_hooks___tests___useO365SyncWithSettings_test_ts__should_set_error_message_indicating_service_is_disabled",
        "src_hooks___tests___useO365SyncWithSettings_test_ts__should_not_initialize_O365_service",
        "src_hooks___tests___useO365SyncWithSettings_test_ts__should_set_error_message_indicating_missing_configuration",
        "src_hooks___tests___useO365SyncWithSettings_test_ts__should_not_initialize_O365_service",
        "src_hooks___tests___useO365SyncWithSettings_test_ts__should_set_error_message_indicating_missing_Client_ID",
        "src_hooks___tests___useO365SyncWithSettings_test_ts__should_set_error_message_from_thrown_error",
        "src_hooks___tests___useO365SyncWithSettings_test_ts__should_not_set_initialized_state_to_true",
        "src_hooks___tests___useO365SyncWithSettings_test_ts__should_reinitialize_service_with_new_config",
        "src_hooks___tests___useKeyboardShortcuts_test_ts__should_trigger_action_when_matching_shortcut_is_pressed",
        "src_hooks___tests___useKeyboardShortcuts_test_ts__should_trigger_action_for_keyboard_shortcut_with_modifier_keys",
        "src_hooks___tests___useKeyboardShortcuts_test_ts__should_not_trigger_action_when_modifier_key_is_missing",
        "src_hooks___tests___useKeyboardShortcuts_test_ts__should_trigger_escape_key_shortcut",
        "src_hooks___tests___useKeyboardShortcuts_test_ts__should_not_trigger_shortcuts_when_disabled",
        "src_hooks___tests___useKeyboardShortcuts_test_ts__should_not_trigger_shortcuts_when_typing_in_input_elements",
        "src_hooks___tests___useKeyboardShortcuts_test_ts__should_not_trigger_shortcuts_when_typing_in_textarea_elements",
        "src_hooks___tests___useKeyboardShortcuts_test_ts__should_prevent_default_behavior_when_shortcut_is_triggered",
        "src_hooks___tests___useKeyboardShortcuts_test_ts__should_handle_case_insensitive_key_matching",
        "src_hooks___tests___useKeyboardShortcuts_test_ts__should_clean_up_event_listeners_on_unmount",
        "src_hooks___tests___useAccessibility_test_ts__should_initialize_with_default_preferences",
        "src_hooks___tests___useAccessibility_test_ts__should_detect_reduced_motion_preference",
        "src_hooks___tests___useAccessibility_test_ts__should_update_preferences_when_media_query_changes",
        "src_hooks___tests___useAccessibility_test_ts__should_save_and_restore_focus",
        "src_hooks___tests___useAccessibility_test_ts__should_set_up_focus_trap",
        "src_hooks___tests___useAccessibility_test_ts__should_initialize_with_default_state",
        "src_hooks___tests___useAccessibility_test_ts__should_handle_arrow_down_navigation",
        "src_hooks___tests___useAccessibility_test_ts__should_handle_arrow_up_navigation",
        "src_hooks___tests___useAccessibility_test_ts__should_handle_Home_and_End_keys",
        "src_hooks___tests___useAccessibility_test_ts__should_handle_Enter_key_selection",
        "src_hooks___tests___useAccessibility_test_ts__should_handle_Escape_key",
        "src_hooks___tests___useAccessibility_test_ts__should_reset_focus",
        "src_hooks___tests___useAccessibility_test_ts__should_create_announcement_element_and_announce_message",
        "src_hooks___tests___useAccessibility_test_ts__should_use_assertive_priority_when_specified",
        "src_hooks___tests___useAccessibility_test_ts__should_register_and_unregister_skip_links",
        "src_hooks___tests___useAccessibility_test_ts__should_not_register_duplicate_skip_links",
        "src_hooks___tests___useAccessibility_test_ts__should_skip_to_content_element",
        "src_hooks___tests___useAccessibility_test_ts__should_initialize_with_media_query_preference",
        "src_hooks___tests___useAccessibility_test_ts__should_toggle_high_contrast_mode",
        "src_hooks___tests___useAccessibility_test_ts__should_manage_ARIA_descriptions",
        "src_utils___tests___powerBiImportUtils_test_ts__should_successfully_parse_valid_epic_CSV_data",
        "src_utils___tests___powerBiImportUtils_test_ts__should_handle_missing_required_fields",
        "src_utils___tests___powerBiImportUtils_test_ts__should_validate_story_points_as_numbers",
        "src_utils___tests___powerBiImportUtils_test_ts__should_handle_empty_CSV_content",
        "src_utils___tests___powerBiImportUtils_test_ts__should_successfully_parse_valid_story_CSV_data",
        "src_utils___tests___powerBiImportUtils_test_ts__should_handle_missing_required_fields_in_story_data",
        "src_utils___tests___powerBiImportUtils_test_ts__should_correctly_aggregate_epic_and_story_data_by_team_and_sprint",
        "src_utils___tests___powerBiImportUtils_test_ts__should_handle_unassigned_story_points__stories_without_matching_epics_",
        "src_utils___tests___powerBiImportUtils_test_ts__should_calculate_correct_allocation_percentages",
        "src_utils___tests___powerBiImportUtils_test_ts__should_handle_unassigned_points_as_Run_Work_allocation",
        "src_utils___tests___powerBiImportUtils_test_ts__should_handle_zero_story_points_gracefully",
        "src_utils___tests___powerBiImportUtils_test_ts__should_validate_team_allocation_totals",
        "src_utils___tests___powerBiImportUtils_test_ts__should_validate_team_existence",
        "src_utils___tests___powerBiImportUtils_test_ts__should_pass_validation_for_correct_data",
        "src_utils___tests___importWorkflowIntegration_test_ts__should_complete_full_people_import_workflow_with_validation",
        "src_utils___tests___importWorkflowIntegration_test_ts__should_handle_mixed_employment_types_and_validate_financial_data",
        "src_utils___tests___importWorkflowIntegration_test_ts__should_create_consistent_role_definitions_with_rate_hierarchies",
        "src_utils___tests___importWorkflowIntegration_test_ts__T",
        "src_utils___tests___importWorkflowIntegration_test_ts__T",
        "src_utils___tests___importWorkflowIntegration_test_ts__should_generate_complete_financial_year_structure",
        "src_utils___tests___importWorkflowIntegration_test_ts__should_validate_quarter_continuity_and_iteration_generation",
        "src_utils___tests___importWorkflowIntegration_test_ts__T",
        "src_utils___tests___importWorkflowIntegration_test_ts__T",
        "src_utils___tests___importWorkflowIntegration_test_ts__should_handle_different_financial_year_start_dates_correctly",
        "src_utils___tests___importWorkflowIntegration_test_ts__should_complete_full_allocation_import_and_validation_workflow",
        "src_utils___tests___importWorkflowIntegration_test_ts__should_integrate_with_capacity_planning_and_detect_over_under_allocation",
        "src_utils___tests___importWorkflowIntegration_test_ts__should_handle_validation_errors_and_provide_meaningful_feedback",
        "src_utils___tests___importWorkflowIntegration_test_ts__should_verify_imported_allocations_display_correctly_on_planning_page",
        "src_utils___tests___importWorkflowIntegration_test_ts__should_complete_full_setup_and_planning_workflow",
        "src_utils___tests___importWorkflowIntegration_test_ts__T",
        "src_utils___tests___importWorkflowIntegration_test_ts__T",
        "src_utils___tests___importWorkflowIntegration_test_ts__should_handle_realistic_enterprise_scenario_with_multiple_imports",
        "src_utils___tests___advanced_import_validation_test_ts___n",
        "src_utils___tests___advanced_import_validation_test_ts___",
        "src_utils___tests___advanced_import_validation_test_ts__should_handle_case_insensitive_validation_for_Project_Status",
        "src_utils___tests___advanced_import_validation_test_ts__should_not_validate_text_fields_against_existing_options",
        "src_utils___tests___advanced_import_validation_test_ts__should_handle_milestone_field_as_optional",
        "src_utils___tests___advanced_import_validation_test_ts__should_validate_required_fields_properly",
        "src_utils___tests___advanced_import_validation_test_ts__should_handle_mixed_field_types_correctly",
        "src_utils___tests___advanced_import_integration_test_ts__should_import_teams_first__then_actual_allocations_with_those_teams",
        "src_utils___tests___advanced_import_integration_test_ts__should_handle_case_sensitivity_and_whitespace_in_team_names",
        "src_utils___tests___advanced_import_integration_test_ts__should_provide_clear_error_messages_for_missing_teams",
        "src_utils___tests___advanced_import_integration_test_ts__should_handle_mixed_epic_and_run_work_allocations",
        "src_utils___tests___advanced_import_integration_test_ts__should_handle_missing_epic_names_gracefully",
        "src_utils___tests___advanced_import_integration_test_ts__should_reproduce_the_",
        "src_utils___tests___advanced_import_integration_test_ts__should_handle_advanced_import_with_large_CSV_files_and_team_creation",
        "src_utils___tests___advanced_import_integration_test_ts__should_handle_advanced_import_with_mixed_existing_and_new_values",
        "src_services___tests___o365AuthService_test_ts__should_initialize_MSAL_with_correct_configuration",
        "src_services___tests___o365AuthService_test_ts__should_use_common_authority_when_tenantId_is_not_provided",
        "src_services___tests___o365AuthService_test_ts__should_throw_error_when_not_initialized",
        "src_services___tests___o365AuthService_test_ts__should_perform_interactive_authentication_when_no_accounts_exist",
        "src_services___tests___o365AuthService_test_ts__should_try_silent_authentication_first_when_accounts_exist",
        "src_services___tests___o365AuthService_test_ts__should_return_null_when_not_initialized",
        "src_services___tests___o365AuthService_test_ts__should_return_null_when_no_accounts_exist",
        "src_services___tests___o365AuthService_test_ts__should_return_auth_result_when_silent_authentication_succeeds",
        "src_services___tests___o365AuthService_test_ts__should_return_null_when_silent_authentication_fails",
        "src_services___tests___o365AuthService_test_ts__should_sign_out_when_accounts_exist",
        "src_services___tests___o365AuthService_test_ts__should_not_call_logout_when_no_accounts_exist",
        "src_services___tests___o365AuthService_test_ts__should_handle_uninitialized_service_gracefully",
        "src_services___tests___o365AuthService_test_ts__should_request_additional_permissions_successfully",
        "src_services___tests___o365AuthService_test_ts__should_handle_permission_request_failure",
        "src_services___tests___o365AuthService_test_ts__should_return_error_when_no_authenticated_account_found",
        "src_services___tests___o365AuthService_test_ts__should_return_default_status_when_not_initialized",
        "src_services___tests___o365AuthService_test_ts__should_check_permission_status_successfully",
        "src_services___tests___o365AuthService_test_ts__should_generate_correct_admin_consent_URL",
        "src_services___tests___o365AuthService_test_ts__should_use_common_tenant_when_tenantId_not_provided",
        "src_services___tests___o365AuthService_test_ts__should_throw_error_when_not_initialized",
        "tests_e2e_smoke_test_ci_spec_ts__application_loads_successfully",
        "tests_e2e_2_advanced_data_import_spec_ts__should_complete_full_banking_portfolio_import_workflow",
        "tests_e2e_2_advanced_data_import_spec_ts__should_handle_basic_team_import_for_CI",
        "tests_e2e_2_advanced_data_import_spec_ts__should_handle_validation_errors_for_invalid_allocation_data",
        "src___tests___accessibility_focus_trap_test_tsx__focuses_first_element_when_activated",
        "src___tests___accessibility_focus_trap_test_tsx__traps_focus_within_container",
        "src___tests___accessibility_focus_trap_test_tsx__handles_shift_tab_for_backward_navigation",
        "src___tests___accessibility_focus_trap_test_tsx__calls_onDeactivate_when_escape_is_pressed",
        "src___tests___accessibility_focus_trap_test_tsx__calls_onDeactivate_when_clicking_outside",
        "src___tests___accessibility_focus_trap_test_tsx__does_not_call_onDeactivate_when_clicking_inside",
        "src___tests___accessibility_focus_trap_test_tsx__does_not_trap_focus_when_inactive",
        "src___tests___accessibility_focus_trap_test_tsx__restores_focus_when_deactivated",
        "src___tests___accessibility_focus_trap_test_tsx__focuses_initial_focus_element_when_provided",
        "src___tests___accessibility_focus_trap_test_tsx__handles_empty_container_gracefully",
        "src___tests___accessibility_focus_trap_test_tsx__ignores_non_focusable_elements",
        "src___tests___accessibility_focus_trap_test_tsx__manages_focus_trap_state",
        "src___tests___accessibility_focus_trap_test_tsx__maintains_proper_ARIA_attributes",
        "src___tests___accessibility_focus_trap_test_tsx__works_with_screen_readers",
        "src___tests___accessibility_focus_trap_test_tsx__handles_keyboard_navigation_properly"
      ],
      "type": "unit",
      "featureArea": "settings",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": false
      }
    },
    {
      "id": "teams_unit",
      "name": "teams unit tests",
      "tests": [
        "src_components___tests___ProjectTable_test_tsx__should_handle_undefined_project_status_gracefully__defensive_coding_test_",
        "src_components___tests___ProjectTable_test_tsx__should_handle_valid_project_status_correctly",
        "src_components___tests___ProjectTable_test_tsx__should_handle_invalid_project_status_gracefully_after_fix",
        "src_components___tests___ProjectTable_test_tsx__should_handle_all_valid_status_types",
        "src_components___tests___Calendar_test_tsx__should_render_without_crashing",
        "src_components___tests___Calendar_test_tsx__should_display_current_month_by_default",
        "src_components___tests___Calendar_test_tsx__should_display_events_on_calendar",
        "src_components___tests___Calendar_test_tsx__should_navigate_between_months",
        "src_components___tests___Calendar_test_tsx__should_display_event_details_on_click",
        "src_components___tests___Calendar_test_tsx__should_handle_month_year_navigation",
        "src_components___tests___Calendar_test_tsx__should_create_new_events",
        "src_components___tests___Calendar_test_tsx__should_integrate_with_existing_milestone_data",
        "src_components___tests___Calendar_test_tsx__should_handle_different_event_types_with_proper_styling",
        "src_components___tests___Calendar_test_tsx__should_filter_events_by_project",
        "src_components___tests___Calendar_test_tsx__should_show_add_event_dialog",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_render_with_default_props",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_render_step_indicator_with_all_steps",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_render_with_custom_title",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_render_with_custom_subtitle",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_start_at_specified_initial_step",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_navigate_to_next_step_when_valid",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_prevent_next_step_navigation_when_validation_fails",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_navigate_to_previous_step",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_support_step_indicator_click_navigation",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_prevent_step_indicator_click_when_not_allowed",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_handle_data_changes_and_persist_across_steps",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_initialize_with_provided_initial_data",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_validate_step_data_before_navigation",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_complete_workflow_when_all_steps_are_valid",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_handle_workflow_cancellation",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_show_progress_indicator",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_update_progress_as_steps_complete",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_apply_custom_className",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_show_compact_view_when_enabled",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_hide_step_descriptions_when_configured",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_apply_custom_step_indicator_style",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_have_proper_ARIA_attributes",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_support_keyboard_navigation",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_announce_step_changes_to_screen_readers",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_provide_step_indicator_labels",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_handle_step_component_errors_gracefully",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_handle_validation_errors_gracefully",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_validate_prop_requirements",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_support_conditional_step_visibility",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_support_custom_step_validation",
        "src_components_ui___tests___progressive_workflow_test_tsx__should_support_async_validation",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_render_with_default_props",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_render_matrix_grid_with_proper_structure",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_display_compatibility_scores_in_cells",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_render_with_custom_title",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_render_empty_state_when_no_items_provided",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_handle_cell_click_events",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_show_hover_tooltips_when_enabled",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_support_keyboard_navigation",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_handle_Enter_key_for_cell_selection",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_apply_custom_color_scheme",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_show_compact_view_when_enabled",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_hide_scores_when_showScores_is_false",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_use_custom_cell_renderer_when_provided",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_filter_rows_based_on_search_term",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_sort_rows_by_compatibility_score",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_filter_by_minimum_compatibility_threshold",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_support_CSV_export",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_support_JSON_export",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_have_proper_ARIA_attributes",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_support_screen_reader_descriptions",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_provide_cell_descriptions_for_screen_readers",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_support_high_contrast_mode",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_handle_large_datasets_efficiently",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_use_virtualization_for_large_matrices",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_handle_scorer_function_errors_gracefully",
        "src_components_ui___tests___compatibility_matrix_test_tsx__should_validate_prop_types_and_show_warnings",
        "src_components_teams___tests___TeamTable_test_tsx__should_display_skills_column_header",
        "src_components_teams___tests___TeamTable_test_tsx__should_display_skill_names_for_teams_with_valid_skills",
        "src_components_teams___tests___TeamTable_test_tsx__should_display_first_3_skills_with_overflow_indicator",
        "src_components_teams___tests___TeamTable_test_tsx__should_display_",
        "src_components_teams___tests___TeamTable_test_tsx__should_handle_teams_with_invalid_skill_references_gracefully",
        "src_components_teams___tests___TeamTable_test_tsx__should_display_skills_with_proper_badge_styling",
        "src_components_teams___tests___TeamTable_test_tsx__should_handle_empty_skills_array_gracefully",
        "src_components_teams___tests___TeamTable_test_tsx__should_handle_null_undefined_skills_gracefully",
        "src_components_teams___tests___TeamTable_test_tsx__should_handle_teams_with_null_targetSkills",
        "src_components_teams___tests___TeamTable_test_tsx__should_handle_teams_with_undefined_targetSkills",
        "src_components_teams___tests___TeamTable_test_tsx__should_maintain_correct_column_count_with_skills_column",
        "src_components_teams___tests___TeamTable_test_tsx__should_handle_team_editing_interaction",
        "src_components_teams___tests___TeamTable_test_tsx__should_handle_team_selection_with_skills_display",
        "src_components_teams___tests___TeamTable_test_tsx__should_efficiently_render_large_numbers_of_teams_with_skills",
        "src_components_teams___tests___TeamTable_test_tsx__should_handle_teams_with_many_skills_efficiently",
        "src_components_teams___tests___TeamTable_test_tsx__should_have_proper_ARIA_labels_for_team_selection",
        "src_components_teams___tests___TeamTable_test_tsx__should_maintain_table_accessibility_with_skills_column",
        "src_components_teams___tests___TeamTable_test_tsx__should_have_proper_semantic_markup_for_skills_badges",
        "src_components_teams___tests___TeamTable_test_tsx__should_update_skills_display_when_team_data_changes",
        "src_components_teams___tests___TeamTable_test_tsx__should_handle_skill_data_updates_correctly",
        "src_components_teams___tests___TeamTable_test_tsx__should_display_Contract_Perm___column_instead_of_Capacity",
        "src_components_teams___tests___TeamTable_test_tsx__should_display_SE_QE_Roles___column_instead_of_Utilization",
        "src_components_teams___tests___TeamTable_test_tsx__should_calculate_permanent_vs_contractor_percentages_correctly",
        "src_components_teams___tests___TeamTable_test_tsx__should_calculate_SE_vs_QE_role_percentages_correctly",
        "src_components_teams___tests___TeamTable_test_tsx__should_display_role_composition_with_visual_indicators",
        "src_components_teams___tests___TeamTable_test_tsx__should_not_display_",
        "src_components_teams___tests___TeamTable_test_tsx__should_handle_teams_with_no_members_gracefully",
        "src_components_teams___tests___TeamTable_test_tsx__should_handle_edge_case_with_only_contractors",
        "src_components_teams___tests___TeamTable_test_tsx__should_handle_edge_case_with_only_permanent_employees",
        "src_components_teams___tests___TeamDialog_test_tsx__renders_without_crashing",
        "src_components_teams___tests___TeamDialog_test_tsx__renders_edit_mode_when_team_is_provided",
        "src_components_teams___tests___TeamDialog_test_tsx__displays_team_form_fields",
        "src_components_teams___tests___TeamDialog_test_tsx__populates_form_fields_when_editing_existing_team",
        "src_components_teams___tests___TeamDialog_test_tsx__handles_team_name_change",
        "src_components_teams___tests___TeamDialog_test_tsx__handles_description_change",
        "src_components_teams___tests___TeamDialog_test_tsx__handles_capacity_change",
        "src_components_teams___tests___TeamDialog_test_tsx__displays_team_tabs_correctly",
        "src_components_teams___tests___TeamDialog_test_tsx__handles_skills_tab_functionality",
        "src_components_teams___tests___TeamDialog_test_tsx__handles_timeline_tab_functionality",
        "src_components_teams___tests___TeamDialog_test_tsx__handles_members_tab_functionality",
        "src_components_teams___tests___TeamDialog_test_tsx__validates_required_fields",
        "src_components_teams___tests___TeamDialog_test_tsx__validates_capacity_value",
        "src_components_teams___tests___TeamDialog_test_tsx__creates_new_team_successfully",
        "src_components_teams___tests___TeamDialog_test_tsx__updates_existing_team_successfully",
        "src_components_teams___tests___TeamDialog_test_tsx__handles_cancel_action",
        "src_components_teams___tests___TeamDialog_test_tsx__shows_team_member_management_section",
        "src_components_teams___tests___TeamDialog_test_tsx__allows_switching_between_tabs",
        "src_components_teams___tests___TeamDialog_test_tsx__handles_team_type_selection",
        "src_components_teams___tests___TeamDialog_test_tsx__handles_team_status_selection",
        "src_components_teams___tests___TeamCards_test_tsx__should_display_skills_section_with_proper_label",
        "src_components_teams___tests___TeamCards_test_tsx__should_display_skills_with_Target_icon",
        "src_components_teams___tests___TeamCards_test_tsx__should_display_skill_names_for_teams_with_valid_skills",
        "src_components_teams___tests___TeamCards_test_tsx__should_display_up_to_4_skills_without_overflow_indicator",
        "src_components_teams___tests___TeamCards_test_tsx__should_display_overflow_indicator_for_teams_with_more_than_4_skills",
        "src_components_teams___tests___TeamCards_test_tsx__should_display_",
        "src_components_teams___tests___TeamCards_test_tsx__should_handle_teams_with_invalid_skill_references_gracefully",
        "src_components_teams___tests___TeamCards_test_tsx__should_display_skills_with_proper_badge_styling",
        "src_components_teams___tests___TeamCards_test_tsx__should_display_skills_section_in_correct_position_within_card",
        "src_components_teams___tests___TeamCards_test_tsx__should_maintain_card_responsive_layout_with_skills_section",
        "src_components_teams___tests___TeamCards_test_tsx__should_handle_card_interactions_with_skills_display",
        "src_components_teams___tests___TeamCards_test_tsx__should_handle_empty_skills_array_gracefully",
        "src_components_teams___tests___TeamCards_test_tsx__should_handle_null_undefined_skills_gracefully",
        "src_components_teams___tests___TeamCards_test_tsx__should_handle_teams_with_null_targetSkills",
        "src_components_teams___tests___TeamCards_test_tsx__should_handle_teams_with_undefined_targetSkills",
        "src_components_teams___tests___TeamCards_test_tsx__should_handle_empty_teams_array",
        "src_components_teams___tests___TeamCards_test_tsx__should_show_exactly_4_skills_without_overflow_indicator",
        "src_components_teams___tests___TeamCards_test_tsx__should_show_correct_overflow_count_for_teams_with_more_than_4_skills",
        "src_components_teams___tests___TeamCards_test_tsx__should_handle_large_numbers_of_skills_correctly",
        "src_components_teams___tests___TeamCards_test_tsx__should_efficiently_render_many_teams_with_skills",
        "src_components_teams___tests___TeamCards_test_tsx__should_handle_skill_lookup_efficiently",
        "src_components_teams___tests___TeamCards_test_tsx__should_have_proper_ARIA_labels_for_team_selection",
        "src_components_teams___tests___TeamCards_test_tsx__should_maintain_card_accessibility_with_skills_section",
        "src_components_teams___tests___TeamCards_test_tsx__should_have_semantic_markup_for_skills_with_icons",
        "src_components_teams___tests___TeamCards_test_tsx__should_update_skills_display_when_team_data_changes",
        "src_components_teams___tests___TeamCards_test_tsx__should_handle_skill_data_updates_correctly",
        "src_components_teams___tests___TeamCards_test_tsx__should_maintain_team_selection_state_during_skills_updates",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_render_without_crashing",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_display_teams_in_the_left_panel",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_display_unassigned_people_in_the_right_panel",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_show_team_details_when_a_team_is_selected",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_display_team_members_when_team_is_selected",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_remove_person_with_TeamMember_record__existing_functionality_",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_remove_person_without_TeamMember_record__bug_fix_for_temp_IDs_",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_display_role_title_for_unassigned_people",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_display_employment_type_for_unassigned_people",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_display_role_type_for_unassigned_people",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_display_division_for_unassigned_people",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_display_enhanced_details_for_team_members",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_display_perm_contractor_ratio",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_display_role_type_split",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_display_total_cost_per_financial_year",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_allow_selecting_unassigned_people",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_assign_selected_people_to_team",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_filter_people_by_search_term",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_show_assigned_people_when_toggle_is_enabled",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_open_create_team_dialog",
        "src_components_teams___tests___TeamBuilder_test_tsx__should_create_new_team_with_provided_data",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_render_without_crashing",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_the_main_heading",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_show_team_allocations_by_quarter_section",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_show_project_summary_section",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_show_related_projects_section",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_allocated_teams_with_their_names",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_show_team_costs_in_correct_format",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_team_allocation_percentages",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_show_quarterly_breakdown_with_quarters",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_financial_year_information",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_teams_involved_count",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_show_total_budget",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_average_team_allocation",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_related_project_names",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_show_skill_match_percentages",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_required_skills",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_show_matching_skills",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_display_conflicting_teams_when_they_exist",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_handle_projects_with_no_team_allocations",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_handle_projects_with_no_related_projects",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_call_calculateTeamAllocations_with_correct_parameters",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_call_aggregateTeamAllocationsToQuarterly_with_team_summaries",
        "src_components_projects___tests___AllocatedTeamsTab_test_tsx__should_call_findRelatedProjects_with_correct_parameters",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_render_the_upload_interface_by_default",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_show_step_indicators",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_disable_process_button_when_no_file_is_selected",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_accept_valid_file_types",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_reject_invalid_file_types",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_accept_image_files",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_accept_PowerPoint_files",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_show_loading_state_during_processing",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_process_image_files_successfully",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_display_extraction_results",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_display_mapping_results",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_show_recommendations",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_show_action_buttons_when_mappings_are_available",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_apply_high_confidence_mappings",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_reset_the_process_when_Start_Over_is_clicked",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_display_error_when_OCR_processing_fails",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_display_error_when_extraction_fails",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_display_error_when_no_file_is_selected_but_process_is_attempted",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_update_step_indicators_during_processing",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_show_raw_OCR_text_in_collapsed_format",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_have_proper_ARIA_labels",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_be_keyboard_navigable",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_use_data_from_app_context_for_mapping",
        "src_components_ocr___tests___SteerCoOCR_test_tsx__should_handle_missing_context_gracefully",
        "src_hooks___tests___useLargeDatasetStorage_test_ts__should_handle_small_datasets_normally",
        "src_hooks___tests___useLargeDatasetStorage_test_ts__should_handle_large_datasets_with_chunking",
        "src_hooks___tests___useLargeDatasetStorage_test_ts__should_prevent_stack_overflow_with_deep_nested_objects",
        "src_hooks___tests___useLargeDatasetStorage_test_ts__should_handle_circular_references_gracefully",
        "src_hooks___tests___useLargeDatasetStorage_test_ts__should_migrate_from_legacy_single_storage_to_chunked_storage",
        "src___tests___integration_teams_test_ts__should_have_teams_with_proper_division_assignments",
        "src___tests___integration_teams_test_ts__should_have_teams_distributed_across_divisions",
        "src___tests___integration_teams_test_ts__should_have_people_assigned_to_teams",
        "src___tests___integration_teams_test_ts__should_have_one_Product_Owner_per_team",
        "src___tests___integration_teams_test_ts__should_calculate_team_capacity_metrics",
        "src___tests___integration_teams_test_ts__should_calculate_division_team_metrics",
        "src___tests___integration_teams_test_ts__should_have_consistent_team_data",
        "src___tests___integration_teams_test_ts__should_have_people_with_valid_team_assignments",
        "src___tests___integration_people_test_ts__should_have_people_assigned_to_valid_roles",
        "src___tests___integration_people_test_ts__should_have_one_Product_Owner_per_team",
        "src___tests___integration_people_test_ts__should_have_people_assigned_to_valid_teams",
        "src___tests___integration_people_test_ts__should_have_balanced_team_sizes",
        "src___tests___integration_people_test_ts__should_calculate_role_distribution_metrics",
        "src___tests___integration_people_test_ts__should_calculate_team_composition_metrics",
        "src___tests___integration_people_test_ts__should_calculate_organization_wide_metrics",
        "src___tests___integration_people_test_ts__should_have_consistent_data_types",
        "src___tests___integration_people_test_ts__should_have_valid_salary_ranges",
        "src___tests___integration_people_test_ts__should_have_consistent_employment_data",
        "tests_e2e_solution_skill_matching_spec_ts__should_match_a_team_to_a_project_via_a_solution_skill",
        "tests_e2e_o365_sync_spec_ts__should_display_O365_sync_button_in_TeamBuilder",
        "tests_e2e_o365_sync_spec_ts__should_open_O365_sync_dialog_when_button_is_clicked",
        "tests_e2e_o365_sync_spec_ts__should_handle_sync_with_business_unit_filter",
        "tests_e2e_o365_sync_spec_ts__should_handle_authentication_flow",
        "tests_e2e_o365_sync_spec_ts__should_handle_sync_errors_gracefully",
        "tests_e2e_o365_sync_spec_ts__should_handle_API_permission_errors",
        "tests_e2e_o365_sync_spec_ts__should_cancel_sync_dialog",
        "tests_e2e_o365_sync_spec_ts__should_disable_sync_button_during_operation",
        "tests_e2e_o365_sync_spec_ts__should_display_sync_instructions",
        "tests_e2e_o365_sync_spec_ts__should_integrate_synced_employees_into_people_list",
        "tests_e2e_crud_operations_spec_ts__T",
        "tests_e2e_crud_operations_spec_ts__should_view___entity_name__list_page_and_display_interface",
        "tests_e2e_crud_operations_spec_ts__should_create_new___entity_name_slice_0___1__",
        "tests_e2e_crud_operations_spec_ts__should_test___entity_name__search_and_filtering",
        "tests_e2e_crud_operations_spec_ts__should_validate___entity_name__management_interface_elements"
      ],
      "type": "unit",
      "featureArea": "teams",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": false
      }
    },
    {
      "id": "dashboard_unit",
      "name": "dashboard unit tests",
      "tests": [
        "src_components___tests___Navigation_test_tsx__renders_navigation_component_with_proper_structure",
        "src_components___tests___Navigation_test_tsx__contains_all_navigation_links",
        "src_components___tests___Navigation_test_tsx__renders_version_info_component",
        "src_components___tests___Navigation_test_tsx__renders_all_navigation_items",
        "src_components___tests___Navigation_test_tsx__has_proper_link_structure_for_navigation_items",
        "src_components___tests___Layout_test_tsx__renders_the_sidebar_with_proper_structure",
        "src_components___tests___Layout_test_tsx__renders_version_info_in_sidebar_header",
        "src_components___tests___Layout_test_tsx__renders_minimize_button_when_sidebar_is_expanded",
        "src_components___tests___Layout_test_tsx__minimize_button_has_proper_tooltip",
        "src_components___tests___Layout_test_tsx__minimize_button_is_positioned_correctly_in_header",
        "src_components___tests___Layout_test_tsx__minimize_functionality_is_accessible_via_keyboard",
        "src_components___tests___Layout_test_tsx__renders_all_navigation_items_with_proper_icons",
        "src_components___tests___Layout_test_tsx__has_proper_link_structure_for_navigation_items",
        "src_components___tests___Layout_test_tsx__has_proper_ARIA_labels_and_roles",
        "src_components___tests___Layout_test_tsx__has_proper_heading_structure",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_render_with_default_props",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_render_custom_title",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_display_all_health_metrics",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_show_metric_values_and_units",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_display_metric_status_indicators",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_show_overall_system_health_status",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_render_loading_state",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_render_error_state",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_display_all_system_alerts",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_show_alert_severity_levels",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_handle_alert_acknowledgment",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_display_alert_timestamps",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_filter_alerts_by_severity",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_handle_metric_clicks",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_show_metric_trends",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_display_metric_details_on_expand",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_show_auto_refresh_indicator",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_handle_manual_refresh",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_handle_real_time_metric_updates",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_filter_metrics_by_category",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_group_metrics_by_category",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_sort_metrics_by_status",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_display_performance_summary",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_show_system_uptime",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_display_resource_utilization_chart",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_have_proper_ARIA_attributes",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_support_keyboard_navigation",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_announce_status_changes",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_export_health_report",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_support_custom_metric_templates",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_display_historical_data",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_handle_threshold_configuration",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_handle_invalid_metric_data",
        "src_components_ui___tests___system_health_monitor_test_tsx__should_handle_metric_loading_failures",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_render_with_default_configuration",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_render_custom_title_when_provided",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_render_empty_state_when_no_nodes_provided",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_render_all_node_types_correctly",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_render_node_statuses_correctly",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_render_loading_state",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_workflow_execution_start",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_automatic_execution_mode",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_node_execution",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_conditional_execution",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_show_execution_progress",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_node_addition",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_node_deletion",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_node_configuration",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_node_connections",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_display_automation_rules",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_rule_creation",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_rule_execution",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_toggle_rule_status",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_display_workflow_templates",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_apply_template",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_save_workflow_as_template",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_filter_templates_by_category",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_display_workflow_metrics",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_show_execution_time_analytics",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_identify_bottlenecks",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_update_metrics_in_real_time",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_show_active_users",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_comments_and_annotations",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_show_version_history",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_export_workflow",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_integrate_with_external_systems",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_webhook_notifications",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_have_proper_ARIA_attributes",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_support_keyboard_navigation",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_announce_workflow_changes",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_invalid_workflow_configuration",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_execution_errors_gracefully",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_recover_from_connection_failures",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_virtualize_large_workflows",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_lazy_load_node_details",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_support_custom_node_components",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_support_parallel_execution_paths",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_handle_workflow_scheduling",
        "src_components_ui___tests___smart_workflow_engine_test_tsx__should_support_workflow_versioning",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_render_with_default_props",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_render_custom_title_when_provided",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_render_empty_state_when_no_insights_provided",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_render_insights_with_proper_priority_indicators",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_render_insights_with_confidence_indicators",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_handle_insight_click_events",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_expand_insight_details_on_click",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_handle_recommendation_action_buttons",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_toggle_insight_favorites",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_filter_insights_by_category",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_filter_insights_by_priority",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_sort_insights_by_impact_score",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_search_insights_by_text",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_handle_real_time_insight_updates",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_show_loading_state_during_updates",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_auto_refresh_insights_when_enabled",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_display_insight_metrics_correctly",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_show_trend_indicators",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_display_impact_and_likelihood_scores",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_format_timeframes_correctly",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_display_recommendation_lists",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_handle_recommendation_acceptance",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_handle_recommendation_dismissal",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_render_metric_charts_for_insights",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_display_confidence_visualization",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_show_impact_vs_likelihood_scatter_plot",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_have_proper_ARIA_attributes",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_support_keyboard_navigation",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_announce_insights_to_screen_readers",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_provide_alternative_data_representations",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_export_insights_as_CSV",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_export_insights_as_PDF_report",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_handle_invalid_insight_data_gracefully",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_handle_missing_metrics_gracefully",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_display_error_state_for_processing_failures",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_virtualize_large_insight_lists",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_lazy_load_insight_details",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_debounce_search_input",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_support_insight_comparison_mode",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_track_insight_history_and_changes",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_support_custom_insight_templates",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_integrate_with_notification_system",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_apply_light_theme_correctly",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_apply_dark_theme_correctly",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_support_high_contrast_mode",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_adapt_to_mobile_viewport",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_stack_insights_vertically_on_small_screens",
        "src_components_ui___tests___predictive_insights_panel_test_tsx__should_show_horizontal_layout_on_large_screens",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_with_default_props",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_custom_title_when_provided",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_empty_state_when_no_metrics_provided",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_metrics_with_proper_status_indicators",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_metrics_with_trend_indicators",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_alerts_when_present",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_metric_click_events",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_expand_metric_details_on_click",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_alert_acknowledgment",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_toggle_metric_favorites",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_filter_metrics_by_category",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_filter_metrics_by_status",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_switch_between_grid_and_list_views",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_show_metrics_in_compact_mode",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_real_time_metric_updates",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_show_loading_state_during_updates",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_auto_refresh_metrics_when_enabled",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_pause_and_resume_auto_refresh",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_time_range_changes",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_display_historical_trend_charts",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_compare_metrics_across_time_periods",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_display_threshold_indicators",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_threshold_changes",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_validate_threshold_ranges",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_display_active_alerts",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_alert_acknowledgment",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_show_alert_severity_levels",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_group_alerts_by_severity",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_metric_value_with_proper_formatting",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_display_percentage_changes",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_mini_sparkline_charts",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_display_target_vs_actual_comparison",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_render_metric_progress_bars",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_export_metrics_as_CSV",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_export_metrics_as_PDF",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_generate_performance_summary_report",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_have_proper_ARIA_attributes",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_support_keyboard_navigation",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_announce_updates_to_screen_readers",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_provide_alternative_text_representations",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_invalid_metric_data_gracefully",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_missing_threshold_data",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_display_error_state_for_data_processing_failures",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_validate_metric_value_ranges",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_virtualize_large_metric_lists",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_lazy_load_metric_details",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_debounce_threshold_input_changes",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_support_custom_metric_cards",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_support_metric_drill_down",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_support_metric_grouping_by_category",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_calculate_performance_scores",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_support_metric_annotations",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_apply_light_theme_correctly",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_apply_dark_theme_correctly",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_support_high_contrast_mode",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_support_custom_color_schemes",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_adapt_to_mobile_viewport",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_stack_metrics_vertically_on_small_screens",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_show_grid_layout_on_large_screens",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_adjust_columns_based_on_screen_size",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_integrate_with_external_monitoring_systems",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_display_metric_collection_timestamps",
        "src_components_ui___tests___performance_metrics_widget_test_tsx__should_handle_webhook_notifications",
        "src_components_ui___tests___intelligence_panel_test_tsx__renders_with_default_props",
        "src_components_ui___tests___intelligence_panel_test_tsx__renders_with_custom_header_icon",
        "src_components_ui___tests___intelligence_panel_test_tsx__renders_empty_state_when_no_insights_or_recommendations",
        "src_components_ui___tests___intelligence_panel_test_tsx__applies_severity_styling_correctly",
        "src_components_ui___tests___intelligence_panel_test_tsx__is_expanded_by_default",
        "src_components_ui___tests___intelligence_panel_test_tsx__can_be_collapsed_and_expanded",
        "src_components_ui___tests___intelligence_panel_test_tsx__cannot_be_collapsed_when_collapsible_is_false",
        "src_components_ui___tests___intelligence_panel_test_tsx__starts_collapsed_when_defaultExpanded_is_false",
        "src_components_ui___tests___intelligence_panel_test_tsx__displays_insights_grouped_by_severity",
        "src_components_ui___tests___intelligence_panel_test_tsx__displays_insight_metrics_correctly",
        "src_components_ui___tests___intelligence_panel_test_tsx__displays_trend_information",
        "src_components_ui___tests___intelligence_panel_test_tsx__shows_confidence_when_enabled",
        "src_components_ui___tests___intelligence_panel_test_tsx__hides_confidence_when_disabled",
        "src_components_ui___tests___intelligence_panel_test_tsx__calls_onInsightView_when_insight_is_clicked",
        "src_components_ui___tests___intelligence_panel_test_tsx__displays_recommendations_sorted_by_priority",
        "src_components_ui___tests___intelligence_panel_test_tsx__displays_effort_and_impact_indicators",
        "src_components_ui___tests___intelligence_panel_test_tsx__calls_onRecommendationView_when_recommendation_is_clicked",
        "src_components_ui___tests___intelligence_panel_test_tsx__handles_primary_action_clicks",
        "src_components_ui___tests___intelligence_panel_test_tsx__handles_secondary_action_clicks",
        "src_components_ui___tests___intelligence_panel_test_tsx__handles_external_action_clicks",
        "src_components_ui___tests___intelligence_panel_test_tsx__prevents_event_bubbling_when_action_is_clicked",
        "src_components_ui___tests___intelligence_panel_test_tsx__shows_tab_navigation_when_both_insights_and_recommendations_exist",
        "src_components_ui___tests___intelligence_panel_test_tsx__does_not_show_tabs_when_only_insights_exist",
        "src_components_ui___tests___intelligence_panel_test_tsx__does_not_show_tabs_when_only_recommendations_exist",
        "src_components_ui___tests___intelligence_panel_test_tsx__switches_between_tabs_correctly",
        "src_components_ui___tests___intelligence_panel_test_tsx__has_proper_ARIA_attributes",
        "src_components_ui___tests___intelligence_panel_test_tsx__supports_keyboard_navigation",
        "src_components_ui___tests___intelligence_panel_test_tsx__applies_custom_className",
        "src_components_ui___tests___intelligence_panel_test_tsx__respects_maxHeight_setting",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_render_with_default_configuration",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_render_custom_title_when_provided",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_render_empty_state_when_no_widgets_provided",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_render_all_widget_types_correctly",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_render_widgets_with_proper_sizes",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_render_loading_state_for_widgets",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_widget_addition",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_widget_removal",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_widget_configuration_changes",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_widget_duplication",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_drag_and_drop_layout_changes",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_responsive_layout_breakpoints",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_save_and_restore_layout_preferences",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_reset_layout_to_defaults",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_auto_refresh_functionality",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_pause_auto_refresh_when_dashboard_is_inactive",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_manual_refresh",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_widget_specific_refresh",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_show_real_time_data_updates",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_global_filters",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_filter_widgets_based_on_search",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_widget_specific_filters",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_apply_light_theme_correctly",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_apply_dark_theme_correctly",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_support_high_contrast_mode",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_apply_custom_color_schemes",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_export_dashboard_as_PDF",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_export_dashboard_as_JSON",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_dashboard_sharing",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_generate_dashboard_snapshots",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_virtualize_large_widget_lists",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_lazy_load_widget_data",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_debounce_layout_changes",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_have_proper_ARIA_attributes",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_support_keyboard_navigation",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_announce_updates_to_screen_readers",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_provide_alternative_content_for_screen_readers",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_widget_error_states_gracefully",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_configuration_validation_errors",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_recover_from_data_loading_failures",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_support_custom_widget_templates",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_support_dashboard_templates",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_support_dashboard_versioning",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_support_collaborative_editing",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_support_dashboard_permissions",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_integrate_with_external_data_sources",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_display_refresh_timestamps",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_handle_webhook_notifications",
        "src_components_ui___tests___dynamic_dashboard_test_tsx__should_support_dashboard_embedding",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_render_with_default_props",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_render_custom_title",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_data_points_summary",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_render_loading_state",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_render_error_state",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_render_empty_state_when_no_data",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_all_charts",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_show_chart_types",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_handle_chart_clicks",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_chart_titles",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_show_chart_data_point_counts",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_support_chart_zoom",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_handle_chart_drill_down",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_all_insights",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_show_insight_types_and_severity",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_insight_confidence_levels",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_handle_insight_clicks",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_show_insight_recommendations",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_filter_insights_by_severity",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_time_range_selector",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_handle_time_range_changes",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_custom_time_range_picker",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_show_real_time_indicator",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_filter_controls",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_apply_metric_filters",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_apply_category_filters",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_support_text_search",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_clear_all_filters",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_reports_section",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_generate_new_report",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_schedule_reports",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_report_metadata",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_export_charts_as_images",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_export_data_as_CSV",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_export_reports_as_PDF",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_share_analytics_dashboard",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_display_configuration_panel",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_toggle_real_time_updates",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_configure_refresh_interval",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_configure_data_thresholds",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_show_auto_refresh_indicator",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_handle_manual_refresh",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_update_data_in_real_time",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_virtualize_large_datasets",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_lazy_load_chart_details",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_cache_analytics_results",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_have_proper_ARIA_attributes",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_support_keyboard_navigation",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_announce_updates_to_screen_readers",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_provide_chart_data_in_accessible_format",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_handle_invalid_data_points",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_handle_chart_rendering_errors",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_handle_API_failures_gracefully",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_recover_from_network_errors",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_support_custom_chart_renderers",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_support_drill_down_analytics",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_support_predictive_analytics",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_support_anomaly_detection",
        "src_components_ui___tests___advanced_analytics_engine_test_tsx__should_support_correlation_analysis",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_render_with_default_props",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_render_custom_title",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_show_empty_state_when_no_resources",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_display_resource_metrics",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_render_all_resource_types",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_show_resource_statuses",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_render_loading_state",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_optimization_trigger",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_show_optimization_strategies",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_resource_scaling",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_display_optimization_recommendations",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_auto_optimization_toggle",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_filter_resources_by_type",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_filter_resources_by_status",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_show_resource_details_on_expand",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_resource_tagging",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_display_efficiency_analytics",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_show_cost_analysis",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_export_optimization_report",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_display_historical_trends",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_display_optimization_rules",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_rule_toggle",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_create_new_optimization_rule",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_real_time_resource_updates",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_show_auto_refresh_indicator",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_optimization_in_progress",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_invalid_resource_data",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_display_optimization_errors",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_have_proper_ARIA_attributes",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_support_keyboard_navigation",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_announce_optimization_updates",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_support_custom_optimization_templates",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_handle_resource_predictions",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_support_batch_operations",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_display_optimization_history",
        "src_components_ui___tests___adaptive_resource_optimizer_test_tsx__should_support_resource_scheduling",
        "src_components_mobile___tests___MobileDashboard_test_tsx__should_not_render_when_not_on_mobile",
        "src_components_mobile___tests___MobileDashboard_test_tsx__should_render_mobile_dashboard_with_stats",
        "src_components_mobile___tests___MobileDashboard_test_tsx__should_render_current_status_information",
        "src_components_mobile___tests___MobileDashboard_test_tsx__should_show_attention_items_when_present",
        "src_components_mobile___tests___MobileDashboard_test_tsx__should_not_show_attention_items_when_count_is_zero",
        "src_components_mobile___tests___MobileDashboard_test_tsx__should_render_quick_actions",
        "src_components_mobile___tests___MobileDashboard_test_tsx__should_show_PWA_install_banner_when_installable",
        "src_components_mobile___tests___MobileDashboard_test_tsx__should_show_offline_status_when_offline",
        "src_components_mobile___tests___MobileDashboard_test_tsx__should_show_online_status_when_connected",
        "src_components_mobile___tests___MobileDashboard_test_tsx__should_display_progress_bar_with_correct_percentage",
        "src_components_mobile___tests___MobileDashboard_test_tsx__should_handle_quick_actions_with_different_variants",
        "src_components_mobile___tests___MobileDashboard_test_tsx__should_handle_missing_PWA_features_gracefully",
        "src_components_mobile___tests___MobileDashboard_test_tsx__should_be_accessible",
        "src_components_dashboard___tests___DashboardHeader_test_tsx__renders_without_crashing",
        "src_components_dashboard___tests___DashboardHeader_test_tsx__displays_the_correct_heading",
        "src_components_dashboard___tests___DashboardHeader_test_tsx__has_proper_accessibility_attributes",
        "src_utils___tests___dashboardUtils_test_ts__returns_dashboard_data_structure_when_cycles_array_is_empty",
        "src_utils___tests___dashboardUtils_test_ts__returns_dashboard_data_structure_when_cycles_array_is_undefined",
        "src_utils___tests___dashboardUtils_test_ts__returns_dashboard_data_when_cycles_are_provided",
        "src_utils___tests___dashboardUtils_test_ts__handles_cycles_that_are_not_currently_active",
        "src_utils___tests___dashboardUtils_test_ts__handles_empty_allocations_and_projects",
        "src___tests___integration_workItems_test_ts__should_have_work_items_assigned_to_valid_projects",
        "src___tests___integration_workItems_test_ts__should_have_balanced_work_item_distribution_across_projects",
        "src___tests___integration_workItems_test_ts__should_calculate_work_item_portfolio_metrics",
        "src___tests___integration_workItems_test_ts__should_calculate_project_work_item_metrics",
        "src___tests___integration_workItems_test_ts__should_identify_high_effort_work_items",
        "src___tests___integration_workItems_test_ts__should_calculate_team_workload",
        "src___tests___integration_workItems_test_ts__should_have_no_duplicate_work_item_titles_within_projects",
        "src___tests___integration_workItems_test_ts__should_have_consistent_data_types",
        "src___tests___integration_workItems_test_ts__should_have_valid_hour_values",
        "src___tests___integration_endToEnd_test_ts__should_have_complete_organizational_hierarchy",
        "src___tests___integration_endToEnd_test_ts__should_have_complete_people_assignments",
        "src___tests___integration_endToEnd_test_ts__should_have_complete_project_assignments",
        "src___tests___integration_endToEnd_test_ts__should_maintain_referential_integrity_across_all_entities",
        "src___tests___integration_endToEnd_test_ts__should_have_realistic_team_compositions",
        "src___tests___integration_endToEnd_test_ts__should_have_realistic_project_portfolios",
        "src___tests___integration_endToEnd_test_ts__should_have_realistic_work_item_distribution",
        "src___tests___integration_endToEnd_test_ts__should_have_consistent_naming_patterns_across_related_entities",
        "src___tests___integration_endToEnd_test_ts___",
        "src___tests___integration_endToEnd_test_ts__should_have_consistent_data_across_all_entities",
        "tests_e2e_project_command_center_modal_spec_ts__should_open_ProjectCommandCenterModal_from_project_list",
        "tests_e2e_project_command_center_modal_spec_ts__should_display_all_six_tabs_in_ProjectCommandCenterModal",
        "tests_e2e_project_command_center_modal_spec_ts__should_switch_between_tabs_correctly",
        "tests_e2e_project_command_center_modal_spec_ts__should_display_project_information_in_Overview_tab",
        "tests_e2e_project_command_center_modal_spec_ts__should_display_projected_end_date_calculation",
        "tests_e2e_project_command_center_modal_spec_ts__should_switch_between_view_and_edit_modes",
        "tests_e2e_project_command_center_modal_spec_ts__should_display_financial_information_in_Financials_tab",
        "tests_e2e_project_command_center_modal_spec_ts__should_close_modal_when_close_button_is_clicked",
        "tests_e2e_project_command_center_modal_spec_ts__should_be_keyboard_accessible",
        "tests_e2e_project_command_center_modal_spec_ts__should_handle_large_project_data_efficiently",
        "tests_e2e_project_command_center_modal_spec_ts__should_not_have_console_errors_when_rendering",
        "tests_e2e_console_errors_ci_spec_ts____pageInfo_name__should_load_without_critical_errors",
        "tests_e2e_console_errors_ci_spec_ts__Summary_report",
        "tests_e2e_comprehensive_console_errors_spec_ts____pageInfo_name__page_should_load_without_critical_errors",
        "tests_e2e_comprehensive_console_errors_spec_ts__Settings_page___all_tabs_and_sections",
        "tests_e2e_comprehensive_console_errors_spec_ts__Planning_page___all_views_and_modes",
        "tests_e2e_comprehensive_console_errors_spec_ts__Projects_page___project_details_and_modals",
        "tests_e2e_comprehensive_console_errors_spec_ts__Summary_report___comprehensive_coverage",
        "tests_e2e_4_ocr_workflow_spec_ts__should_display_OCR_interface_correctly",
        "tests_e2e_4_ocr_workflow_spec_ts__should_handle_file_upload_validation",
        "tests_e2e_4_ocr_workflow_spec_ts__should_accept_valid_image_files",
        "tests_e2e_4_ocr_workflow_spec_ts__should_accept_valid_PDF_files",
        "tests_e2e_4_ocr_workflow_spec_ts__should_show_loading_state_during_processing",
        "tests_e2e_4_ocr_workflow_spec_ts__should_update_step_indicators_during_processing",
        "tests_e2e_4_ocr_workflow_spec_ts__should_reset_workflow_when_Start_Over_is_clicked",
        "tests_e2e_4_ocr_workflow_spec_ts__should_handle_large_files_gracefully",
        "tests_e2e_4_ocr_workflow_spec_ts__should_be_accessible",
        "tests_e2e_4_ocr_workflow_spec_ts__should_handle_navigation_away_and_back",
        "tests_e2e_4_ocr_workflow_spec_ts__should_work_on_different_screen_sizes",
        "tests_e2e_4_ocr_workflow_spec_ts__should_maintain_state_during_tab_switching",
        "tests_e2e_1_setup_foundation_spec_ts__should_complete_setup_wizard_and_create_quarters_with_iterations"
      ],
      "type": "unit",
      "featureArea": "dashboard",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": false
      }
    },
    {
      "id": "financials_unit",
      "name": "financials unit tests",
      "tests": [
        "src_components___tests___FinancialImpactAnalysis_test_tsx__renders_the_component_with_initial_state",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__renders_without_crashing",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__displays_control_panel",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__displays_stats_cards",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__displays_React_Flow_visualization",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__displays_visualization_legend",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_view_mode_changes",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_node_sizing_changes",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_color_coding_changes",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_division_filter_changes",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_minimum_team_size_slider",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_maximum_cost_filter_slider",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_cost_labels_toggle",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__displays_correct_stats_for_teams",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_empty_data_gracefully",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_view_mode_switching_properly",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__displays_proper_legend_for_different_view_modes",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__displays_interaction_instructions",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_cost_efficiency_color_coding_legend",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_contractor_ratio_color_coding_legend",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_risk_level_color_coding_legend",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__calculates_team_metrics_correctly",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_slider_value_changes",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__displays_cost_formatting_in_stats",
        "src_components_canvas___tests___TeamCostVisualization_test_tsx__handles_all_view_modes_correctly",
        "src_components_canvas___tests___FinancialImpactAnalysis_test_tsx__renders_the_component_and_calculates_the_financial_impact",
        "src_utils___tests___projectBudgetUtils_test_ts__should_calculate_total_from_financial_year_budgets",
        "src_utils___tests___projectBudgetUtils_test_ts__should_fall_back_to_legacy_budget_when_no_financial_year_budgets_exist",
        "src_utils___tests___projectBudgetUtils_test_ts__should_return_0_when_no_budgets_exist_at_all",
        "src_utils___tests___projectBudgetUtils_test_ts__should_prefer_financial_year_budgets_over_legacy_budget",
        "src_utils___tests___projectBudgetUtils_test_ts__should_handle_empty_financial_year_budgets_array",
        "src_utils___tests___projectBudgetUtils_test_ts__should_return_priorityOrder_when_set",
        "src_utils___tests___projectBudgetUtils_test_ts__should_fall_back_to_priority_when_priorityOrder_is_not_set",
        "src_utils___tests___projectBudgetUtils_test_ts__should_handle_priorityOrder_of_0",
        "src_utils___tests___projectBudgetUtils_test_ts__should_return_budget_for_existing_financial_year",
        "src_utils___tests___projectBudgetUtils_test_ts__should_return_0_for_non_existing_financial_year",
        "src_utils___tests___projectBudgetUtils_test_ts__should_return_0_when_no_financial_year_budgets_exist",
        "src_utils___tests___projectBudgetUtils_test_ts__should_add_new_budget_when_financial_year_does_not_exist",
        "src_utils___tests___projectBudgetUtils_test_ts__should_update_existing_budget_when_financial_year_exists",
        "src_utils___tests___projectBudgetUtils_test_ts__should_create_financial_year_budgets_array_when_it_does_not_exist",
        "src_utils___tests___projectBudgetUtils_test_ts__should_not_mutate_the_original_project",
        "src_utils___tests___projectBudgetUtils_test_ts__should_remove_budget_for_existing_financial_year",
        "src_utils___tests___projectBudgetUtils_test_ts__should_return_unchanged_project_when_financial_year_does_not_exist",
        "src_utils___tests___projectBudgetUtils_test_ts__should_return_unchanged_project_when_no_financial_year_budgets_exist",
        "src_utils___tests___projectBudgetUtils_test_ts__should_return_all_financial_year_IDs_with_budgets",
        "src_utils___tests___projectBudgetUtils_test_ts__should_return_empty_array_when_no_financial_year_budgets_exist",
        "src_utils___tests___projectBudgetUtils_test_ts__should_return_empty_array_for_empty_budgets_array",
        "src_utils___tests___projectBudgetUtils_test_ts__should_migrate_legacy_budget_to_financial_year_budget",
        "src_utils___tests___projectBudgetUtils_test_ts__should_not_migrate_when_financial_year_budgets_already_exist",
        "src_utils___tests___projectBudgetUtils_test_ts__should_not_migrate_when_no_legacy_budget_exists",
        "src_utils___tests___projectBudgetUtils_test_ts__should_not_mutate_the_original_project",
        "src_utils___tests___financialImpactUtils_test_ts__should_correctly_calculate_the_total_cost_of_a_team_with_mixed_employment_types",
        "src_utils___tests___financialImpactUtils_test_ts__should_correctly_analyze_the_financial_impact_of_moving_a_person",
        "src_utils___tests___financialImpactUtils_test_ts__should_throw_an_error_if_the_original_team_is_not_found",
        "src_utils___tests___financialImpactUtils_test_ts__should_throw_an_error_if_the_person_role_is_not_found",
        "src_utils___tests___financialCalculations_test_ts__should_calculate_cost_for_a_permanent_employee_with_annual_salary",
        "src_utils___tests___financialCalculations_test_ts__should_calculate_cost_for_a_contractor_with_hourly_rate",
        "src_utils___tests___financialCalculations_test_ts__should_calculate_cost_for_a_contractor_with_daily_rate",
        "src_utils___tests___financialCalculations_test_ts__should_use_role_default_annual_salary_for_permanent_employee_if_no_personal_salary",
        "src_utils___tests___financialCalculations_test_ts__should_use_role_default_hourly_rate_for_contractor_if_no_personal_rate",
        "src_utils___tests___financialCalculations_test_ts__should_use_legacy_fallback_if_no_other_rates_are_available",
        "src_utils___tests___financialCalculations_test_ts__should_calculate_the_total_weekly_cost_for_a_team",
        "src_utils___tests___financialCalculations_test_ts__should_calculate_the_total_monthly_cost_for_a_team",
        "src_utils___tests___financialCalculations_test_ts__should_calculate_the_total_quarterly_cost_for_a_team",
        "src_utils___tests___financialCalculations_test_ts__should_calculate_the_total_annual_cost_for_a_team",
        "src_utils___tests___financialCalculations_test_ts__should_calculate_the_cost_of_an_allocation",
        "tests_e2e_financial_impact_analysis_spec_ts__should_display_the_financial_impact_analysis_tab_and_its_content_on_the_Canvas_page",
        "tests_e2e_financial_impact_analysis_spec_ts__should_display_the_financial_impact_analysis_tab_and_its_content_on_the_Projects_page",
        "tests_e2e_financial_impact_analysis_spec_ts__should_display_the_financial_impact_analysis_tab_and_its_content_on_the_Teams_page"
      ],
      "type": "unit",
      "featureArea": "financials",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": false
      }
    },
    {
      "id": "projects_unit",
      "name": "projects unit tests",
      "tests": [
        "src_components_ui___tests___unified_selector_test_tsx__renders_with_default_props",
        "src_components_ui___tests___unified_selector_test_tsx__renders_with_custom_placeholder",
        "src_components_ui___tests___unified_selector_test_tsx__renders_without_search_input_when_searchable_is_false",
        "src_components_ui___tests___unified_selector_test_tsx__calls_onSelectionChange_when_item_is_selected",
        "src_components_ui___tests___unified_selector_test_tsx__supports_multi_select_mode",
        "src_components_ui___tests___unified_selector_test_tsx__supports_single_select_mode",
        "src_components_ui___tests___unified_selector_test_tsx__displays_selected_items",
        "src_components_ui___tests___unified_selector_test_tsx__allows_removing_selected_items",
        "src_components_ui___tests___unified_selector_test_tsx__filters_items_based_on_search_term",
        "src_components_ui___tests___unified_selector_test_tsx__filters_items_by_category",
        "src_components_ui___tests___unified_selector_test_tsx__shows_",
        "src_components_ui___tests___unified_selector_test_tsx__groups_items_by_category_when_enabled",
        "src_components_ui___tests___unified_selector_test_tsx__displays_compatibility_scores_when_enabled",
        "src_components_ui___tests___unified_selector_test_tsx__sorts_items_by_compatibility_score",
        "src_components_ui___tests___unified_selector_test_tsx__displays_recommendations_when_enabled",
        "src_components_ui___tests___unified_selector_test_tsx__allows_selecting_from_recommendations",
        "src_components_ui___tests___unified_selector_test_tsx__supports_arrow_key_navigation",
        "src_components_ui___tests___unified_selector_test_tsx__closes_dropdown_on_Escape_key",
        "src_components_ui___tests___unified_selector_test_tsx__has_proper_ARIA_attributes",
        "src_components_ui___tests___unified_selector_test_tsx__updates_aria_expanded_when_dropdown_opens",
        "src_components_ui___tests___unified_selector_test_tsx__provides_screen_reader_feedback_for_selected_items",
        "src_components_ui___tests___unified_selector_test_tsx__uses_custom_item_renderer_when_provided",
        "src_components_ui___tests___unified_selector_test_tsx__uses_custom_selected_item_renderer_when_provided",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_budget_column_header",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_project_budget_values_in_correct_format",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_sortable_column_headers",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_sort_projects_by_name_in_ascending_order_when_clicked",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_sort_projects_by_name_in_descending_order_when_clicked_twice",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_sort_projects_by_budget_amount",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_sort_projects_by_priority",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_sort_projects_by_start_date",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_filter_controls",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_filter_projects_by_name",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_filter_projects_by_status",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_filter_projects_by_priority",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_clear_filters_when_clear_button_is_clicked",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_combine_multiple_filters_correctly",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_total_budget_for_all_projects",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_filtered_budget_total_when_filters_are_applied",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_update_budget_total_when_projects_are_filtered_by_name",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_show_project_count_in_budget_totals",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_update_project_count_when_filters_are_applied",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_handle_projects_without_budget_in_totals",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_priority_column_header",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_project_priority_values",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_display_priority_badge_with_appropriate_styling",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_maintain_sorting_when_filters_are_applied",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_update_budget_totals_when_sorting_changes_visible_projects",
        "src_components_projects___tests___ProjectTableEnhancements_test_tsx__should_preserve_user_selections_when_applying_filters",
        "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_render_drag_and_drop_enabled_table",
        "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_display_drag_handles_in_priority_order_column",
        "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_show_drag_indicator_when_no_sorting_is_applied",
        "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_display_priority_order_values_correctly",
        "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_handle_projects_without_priority_order_gracefully",
        "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_show_sortable_projects_in_priority_order",
        "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_handle_empty_projects_array",
        "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_maintain_drag_functionality_with_filtering",
        "src_components_projects___tests___ProjectTableDragDrop_test_tsx__should_integrate_with_existing_table_features",
        "src_components_projects___tests___ProjectSolutionsSkillsSection_test_tsx__should_render_without_crashing",
        "src_components_projects___tests___ProjectSolutionsSkillsSection_test_tsx__should_display_empty_state_messages",
        "src_components_projects___tests___ProjectSolutionsSkillsSection_test_tsx__should_allow_switching_between_tabs",
        "src_components_projects___tests___ProjectSolutionsSkillsSection_test_tsx__should_handle_props_correctly",
        "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_render_priority_and_priority_order_fields",
        "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_show_priority_level_descriptions",
        "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_update_priority_value",
        "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_update_priority_order_value",
        "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_show_fallback_behavior_explanation_when_priority_order_is_not_set",
        "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_validate_priority_order_as_positive_integer",
        "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_handle_empty_priority_order_input",
        "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_display_priority_badges_with_correct_colors",
        "src_components_projects___tests___ProjectPriorityEditor_test_tsx__should_show_help_text_explaining_the_difference_between_priority_and_priority_order",
        "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_detect_projects_with_legacy_budget_structure",
        "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_show_migration_prompt_for_projects_with_legacy_budgets",
        "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_not_show_migration_prompt_when_all_projects_have_financial_year_budgets",
        "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_migrate_single_legacy_project_when_migration_button_is_clicked",
        "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_migrate_all_legacy_projects_in_bulk",
        "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_show_confirmation_dialog_before_bulk_migration",
        "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_handle_projects_with_zero_or_undefined_legacy_budgets",
        "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_show_success_message_after_successful_migration",
        "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_show_migration_progress_for_bulk_operations",
        "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_disable_migration_button_during_migration_process",
        "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_use_current_financial_year_from_settings_for_migration",
        "src_components_projects___tests___ProjectLegacyBudgetMigration_test_tsx__should_preserve_existing_financial_year_budgets_during_migration",
        "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_calculate_total_budget_from_financial_year_budgets",
        "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_show_",
        "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_calculate_budget_totals_correctly_with_financial_year_budgets",
        "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_sort_projects_by_total_budget_correctly",
        "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_display_priority_order_column",
        "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_sort_projects_by_priority_order",
        "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_filter_projects_by_priority_order",
        "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_display_priority_badges_with_correct_styling",
        "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_update_budget_totals_when_filtering_projects_with_FY_budgets",
        "src_components_projects___tests___ProjectFinancialYearBudgets_test_tsx__should_handle_projects_with_empty_financial_year_budgets_gracefully",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_render_financial_year_budgets_table",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_calculate_and_display_total_budget",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_add_new_financial_year_budget",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_update_budget_amount",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_update_financial_year_selection",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_remove_financial_year_budget",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_handle_empty_budgets_array",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_show_legacy_budget_migration_option_when_available",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_migrate_legacy_budget_to_current_financial_year",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_validate_financial_year_selection_uniqueness",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_test_tsx__should_handle_invalid_budget_amounts_gracefully",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_display_total_budget_with_proper_comma_formatting_for_thousands",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_display_total_budget_with_proper_comma_formatting_for_millions",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_display_legacy_budget_migration_message_with_proper_formatting",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_update_total_budget_display_when_budget_amounts_change",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_handle_various_currency_amounts_correctly",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_handle_negative_values_correctly_by_converting_to_positive",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_handle_decimal_values_correctly",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_handle_empty_input_correctly",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_have_proper_labels_and_testids_for_budget_inputs",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_display_empty_state_message_when_no_budgets_exist",
        "src_components_projects___tests___ProjectFinancialYearBudgetEditor_currency_test_tsx__should_show_total_budget_label_and_value_prominently",
        "src_components_projects___tests___ProjectDialog_test_tsx__renders_without_crashing",
        "src_components_projects___tests___ProjectDialog_test_tsx__renders_edit_mode_when_project_is_provided",
        "src_components_projects___tests___ProjectDialog_test_tsx__displays_project_form_fields",
        "src_components_projects___tests___ProjectDialog_test_tsx__displays_tabs_for_different_sections",
        "src_components_projects___tests___ProjectDialog_test_tsx__populates_form_fields_when_editing_existing_project",
        "src_components_projects___tests___ProjectDialog_test_tsx__handles_form_field_changes",
        "src_components_projects___tests___ProjectDialog_test_tsx__handles_status_change",
        "src_components_projects___tests___ProjectDialog_test_tsx__handles_priority_change",
        "src_components_projects___tests___ProjectDialog_test_tsx__handles_budget_changes",
        "src_components_projects___tests___ProjectDialog_test_tsx__handles_date_changes",
        "src_components_projects___tests___ProjectDialog_test_tsx__handles_form_data_correctly",
        "src_components_projects___tests___ProjectDialog_test_tsx__switches_between_tabs",
        "src_components_projects___tests___ProjectDialog_test_tsx__handles_skills_section_updates",
        "src_components_projects___tests___ProjectDialog_test_tsx__handles_solutions_section_updates",
        "src_components_projects___tests___ProjectDialog_test_tsx__validates_required_fields",
        "src_components_projects___tests___ProjectDialog_test_tsx__validates_date_range",
        "src_components_projects___tests___ProjectDialog_test_tsx__validates_budget_values",
        "src_components_projects___tests___ProjectDialog_test_tsx__creates_new_project_successfully",
        "src_components_projects___tests___ProjectDialog_test_tsx__updates_existing_project_successfully",
        "src_components_projects___tests___ProjectDialog_test_tsx__handles_save_error_gracefully",
        "src_components_projects___tests___ProjectDialog_test_tsx__handles_cancel_action",
        "src_components_projects___tests___ProjectDialog_test_tsx__handles_dialog_close",
        "src_components_projects___tests___ProjectDialog_test_tsx__resets_form_when_dialog_is_closed_and_reopened",
        "src_components_projects___tests___ProjectDialog_test_tsx__displays_progress_indicator_when_provided",
        "src_components_projects___tests___ProjectDialog_test_tsx__handles_milestone_management",
        "src_components_projects___tests___ProjectDialog_test_tsx__shows_project_statistics",
        "src_components_projects___tests___ProjectDialog_test_tsx__handles_tag_management",
        "src_components_projects___tests___ProjectDialog_test_tsx__removes_tags_when_clicked",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_not_render_when_isOpen_is_false",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_not_render_when_project_is_null",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_render_the_modal_with_project_name_in_header",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_render_all_six_tabs",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_render_close_button_and_handle_close_action",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_always_be_in_edit_mode_and_show_form_fields",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_display_basic_project_information_in_editable_form_fields",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_display_projected_end_date_from_calculation",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_projects_with_missing_optional_fields",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_always_show_edit_actions_and_form_fields",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_cancel_button_click",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_save_button_click",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_render_all_tab_buttons_as_clickable",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_maintain_accessibility_for_keyboard_navigation",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_use_project_data_from_context_when_available",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_context_with_related_data__epics__milestones_",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_empty_context_gracefully",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_invalid_project_data_gracefully",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_always_be_in_edit_mode_with_form_fields",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_missing_context_provider",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_have_proper_ARIA_attributes_for_modal",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_support_keyboard_navigation_for_tabs",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_focus_management_correctly",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_not_re_render_unnecessarily",
        "src_components_projects___tests___ProjectCommandCenterModal_test_tsx__should_handle_large_datasets_efficiently",
        "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_display_estimated_cost_with_proper_comma_formatting",
        "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_display_monthly_burn_rate_with_proper_comma_formatting",
        "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_display_budget_variance_with_proper_comma_formatting",
        "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_display_total_estimated_cost_in_financials_tab_with_commas",
        "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_display_monthly_burn_rate_in_financials_tab_with_commas",
        "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_display_budget_variance_in_financials_tab_with_proper_formatting",
        "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_handle_different_currency_amounts_correctly",
        "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_display_currency_symbol_in_budget_input_field",
        "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_handle_budget_input_changes_correctly",
        "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_integrate_properly_with_ProjectFinancialYearBudgetEditor",
        "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_handle_zero_amounts_correctly",
        "src_components_projects___tests___ProjectCommandCenterModal_currency_test_tsx__should_handle_very_large_amounts_correctly",
        "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_display_custom_priority_labels_in_table",
        "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_show_custom_priority_labels_in_filter_dropdown",
        "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_filter_projects_by_custom_priority_labels",
        "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_display_custom_priority_labels_in_dropdown",
        "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_show_custom_priority_descriptions",
        "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_display_custom_priority_badge_colors",
        "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_handle_priority_level_changes_with_custom_labels",
        "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_fallback_to_default_labels_when_no_custom_priority_levels_configured",
        "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_save_custom_priority_levels_to_settings",
        "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_persist_custom_priority_levels_across_sessions",
        "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_handle_projects_created_before_custom_priority_levels",
        "src_components_projects___tests___ConfigurablePriorityLevels_test_tsx__should_handle_invalid_priority_values_gracefully",
        "src___tests___integration_projects_test_ts__should_have_projects_assigned_to_valid_teams",
        "src___tests___integration_projects_test_ts__should_have_balanced_project_distribution_across_teams",
        "src___tests___integration_projects_test_ts__should_calculate_project_portfolio_metrics",
        "src___tests___integration_projects_test_ts__should_calculate_team_project_metrics",
        "src___tests___integration_projects_test_ts__should_identify_high_value_projects",
        "src___tests___integration_projects_test_ts__should_have_work_items_with_proper_project_assignments",
        "src___tests___integration_projects_test_ts__should_have_projects_with_associated_work_items",
        "src___tests___integration_projects_test_ts__should_have_consistent_data_types",
        "src___tests___integration_projects_test_ts__should_have_valid_budget_values",
        "src___tests___integration_projects_test_ts__should_have_realistic_project_timelines",
        "tests_e2e_3_jira_integration_spec_ts__should_show_Jira_import_option_and_basic_functionality",
        "tests_e2e_3_jira_integration_spec_ts__should_verify_Jira_import_appears_in_dropdown_options"
      ],
      "type": "unit",
      "featureArea": "projects",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": false
      }
    },
    {
      "id": "scenarios_unit",
      "name": "scenarios unit tests",
      "tests": [
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_with_default_props",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_custom_title_when_provided",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_empty_state_when_no_trends_provided",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_trends_with_proper_direction_indicators",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_trends_with_strength_indicators",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_trends_with_confidence_levels",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_handle_trend_click_events",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_expand_trend_details_on_click",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_handle_trend_drill_down",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_toggle_forecast_display",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_filter_trends_by_type",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_filter_trends_by_direction",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_switch_between_chart_views",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_show_trends_in_compact_mode",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_handle_period_changes",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_display_trend_charts_with_historical_data",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_display_forecast_data_when_enabled",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_compare_trends_across_time_periods",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_trend_value_with_proper_formatting",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_display_percentage_changes",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_trend_line_charts",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_display_trend_indicators",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_render_trend_metrics_summary",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_handle_real_time_trend_updates",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_show_loading_state_during_updates",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_auto_refresh_trends_when_enabled",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_pause_and_resume_auto_refresh",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_display_trend_summary_statistics",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_show_confidence_distribution",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_calculate_overall_trend_health_score",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_display_trend_correlation_matrix",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_export_trends_as_CSV",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_export_trends_as_PDF",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_generate_trend_summary_report",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_have_proper_ARIA_attributes",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_support_keyboard_navigation",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_announce_updates_to_screen_readers",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_provide_alternative_data_representations",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_handle_invalid_trend_data_gracefully",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_handle_missing_forecast_data",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_display_error_state_for_processing_failures",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_validate_trend_value_ranges",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_virtualize_large_trend_lists",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_lazy_load_trend_details",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_debounce_period_selector_changes",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_support_custom_trend_cards",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_support_trend_grouping_by_type",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_calculate_trend_significance_scores",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_support_trend_annotations",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_apply_light_theme_correctly",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_apply_dark_theme_correctly",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_support_high_contrast_mode",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_support_custom_color_schemes",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_adapt_to_mobile_viewport",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_stack_trends_vertically_on_small_screens",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_show_grid_layout_on_large_screens",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_adjust_columns_based_on_screen_size",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_integrate_with_external_analytics_systems",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_display_trend_collection_timestamps",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_handle_webhook_notifications",
        "src_components_ui___tests___trend_analysis_component_test_tsx__should_support_trend_alerts_and_notifications",
        "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_render_the_impact_summary_correctly",
        "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_render_financial_impact_when_present",
        "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_render_resource_impact_when_present",
        "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_group_and_display_changes_by_category",
        "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_display_change_details_with_old_and_new_values",
        "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_display_appropriate_impact_badges",
        "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_handle_empty_comparison_gracefully",
        "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_handle_negative_financial_changes_correctly",
        "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_render_correctly_with_no_people_removed",
        "src_components_scenarios___tests___ScenarioVisualDiff_test_tsx__should_render_change_icons_correctly",
        "src_components_scenarios___tests___ScenarioSwitcher_test_tsx__should_render_in_live_mode_initially",
        "src_components_scenarios___tests___ScenarioSwitcher_test_tsx__should_show_compact_view_correctly",
        "src_components_scenarios___tests___ScenarioSwitcher_test_tsx__should_open_create_scenario_dialog_when_clicked",
        "src_components_scenarios___tests___ScenarioSwitcher_test_tsx__should_display_scenarios_in_dropdown_when_available",
        "src_components_scenarios___tests___ScenarioSwitcher_test_tsx__should_show_unsaved_changes_indicator_when_applicable",
        "src_components_scenarios___tests___ScenarioSwitcher_test_tsx__should_handle_manage_scenarios_click",
        "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_delegate_person_operations_to_live_context",
        "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_delegate_team_operations_to_live_context",
        "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_create_scenario_aware_person_operations",
        "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_update_existing_person_in_scenario",
        "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_delete_person_from_scenario",
        "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_handle_team_operations_in_scenario_mode",
        "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_handle_errors_gracefully",
        "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_not_perform_operations_on_non_existent_entities",
        "src_hooks___tests___useScenarioAwareOperations_test_tsx__should_handle_allocation_operations_in_scenario_mode",
        "tests_e2e_scenario_features_spec_ts__should_navigate_to_scenario_analysis_page",
        "tests_e2e_scenario_features_spec_ts__should_create_a_new_scenario",
        "tests_e2e_scenario_features_spec_ts__should_switch_between_scenarios_and_live_mode",
        "tests_e2e_scenario_features_spec_ts__should_show_scenario_context_in_Projects_page",
        "tests_e2e_scenario_features_spec_ts__should_show_scenario_context_in_Planning_page",
        "tests_e2e_scenario_features_spec_ts__should_perform_scenario_comparison",
        "tests_e2e_scenario_features_spec_ts__should_create_scenario_from_template",
        "tests_e2e_scenario_features_spec_ts__should_export_and_import_scenarios",
        "tests_e2e_scenario_features_spec_ts__should_delete_scenarios",
        "tests_e2e_scenario_features_spec_ts__should_handle_scenario_modifications_and_tracking",
        "tests_e2e_scenario_features_spec_ts__should_maintain_scenario_state_across_page_navigation",
        "tests_e2e_scenario_features_spec_ts__should_handle_scenario_expiration_cleanup"
      ],
      "type": "unit",
      "featureArea": "scenarios",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": true
      }
    },
    {
      "id": "canvas_unit",
      "name": "canvas unit tests",
      "tests": [
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_render_with_default_props",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_render_different_chart_types_correctly",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_render_with_custom_title_and_description",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_render_chart_controls_when_enabled",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_render_export_controls_when_enabled",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_data_point_clicks",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_zoom_interactions",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_brush_selection_for_time_range",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_legend_toggle_interactions",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_switch_between_chart_types",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_maintain_data_integrity_when_switching_chart_types",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_disable_incompatible_chart_types_for_data_structure",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_filter_data_by_category",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_date_range_filtering",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_aggregate_data_when_requested",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_export_chart_as_PNG",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_export_data_as_CSV",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_export_data_as_JSON",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_data_updates_gracefully",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_streaming_data_updates",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_pause_and_resume_real_time_updates",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_have_proper_ARIA_attributes",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_provide_data_table_alternative",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_support_keyboard_navigation_for_interactive_elements",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_announce_data_changes_to_screen_readers",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_support_high_contrast_mode",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_virtualize_large_datasets",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_debounce_user_interactions",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_lazy_load_chart_components",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_invalid_data_gracefully",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_handle_chart_rendering_errors",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_validate_prop_requirements",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_support_multiple_datasets",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_support_custom_color_schemes",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_support_annotations_and_markers",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_support_drill_down_interactions",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_support_comparison_mode",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_adapt_to_container_size_changes",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_provide_mobile_optimized_view",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_apply_light_theme_correctly",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_apply_dark_theme_correctly",
        "src_components_ui___tests___data_visualization_engine_test_tsx__should_support_custom_theme_configuration",
        "src_components_canvas___tests___DivisionCanvasView_test_tsx__should_generate_nodes_and_edges_for_division_view",
        "src_components_canvas___tests___DivisionCanvasView_test_tsx__should_create_division_nodes_with_correct_information",
        "src_components_canvas___tests___DivisionCanvasView_test_tsx__should_create_team_nodes_for_each_team",
        "src_components_canvas___tests___DivisionCanvasView_test_tsx__should_create_leadership_nodes_for_division_leaders",
        "src_components_canvas___tests___DivisionCanvasView_test_tsx__should_create_edges_connecting_divisions_to_teams",
        "src_components_canvas___tests___DivisionCanvasView_test_tsx__should_create_edges_connecting_leaders_to_divisions",
        "src_components_canvas___tests___DivisionCanvasView_test_tsx__should_filter_divisions_when_selectedDivision_is_provided",
        "src_components_canvas___tests___DivisionCanvasView_test_tsx__should_handle_empty_data_gracefully",
        "src_components_canvas___tests___CanvasStats_test_tsx__renders_without_crashing",
        "src_components_canvas___tests___CanvasStats_test_tsx__displays_all_stat_cards",
        "src_components_canvas___tests___CanvasStats_test_tsx__displays_correct_stat_values",
        "src_components_canvas___tests___CanvasStats_test_tsx__displays_proper_icons_for_each_stat",
        "src_components_canvas___tests___CanvasStats_test_tsx__handles_zero_values_correctly",
        "src_components_canvas___tests___CanvasStats_test_tsx__handles_large_numbers_correctly",
        "src_components_canvas___tests___CanvasStats_test_tsx__displays_stats_in_correct_order",
        "src_components_canvas___tests___CanvasStats_test_tsx__uses_proper_grid_layout",
        "src_components_canvas___tests___CanvasStats_test_tsx__has_proper_card_structure",
        "src_components_canvas___tests___CanvasStats_test_tsx__displays_Building_icon_for_Divisions",
        "src_components_canvas___tests___CanvasStats_test_tsx__displays_Users_icon_for_Teams",
        "src_components_canvas___tests___CanvasStats_test_tsx__displays_FolderOpen_icon_for_Projects",
        "src_components_canvas___tests___CanvasStats_test_tsx__displays_Target_icon_for_Epics",
        "src_components_canvas___tests___CanvasStats_test_tsx__displays_Zap_icon_for_Allocations",
        "src_components_canvas___tests___CanvasStats_test_tsx__displays_PersonStanding_icon_for_People",
        "src_components_canvas___tests___CanvasStats_test_tsx__handles_missing_stats_gracefully",
        "src_components_canvas___tests___CanvasStats_test_tsx__formats_numbers_correctly",
        "src_components_canvas___tests___CanvasStats_test_tsx__maintains_responsive_layout",
        "src_components_canvas___tests___CanvasStats_test_tsx__shows_proper_text_size_for_values",
        "src_components_canvas___tests___CanvasStats_test_tsx__displays_proper_header_structure",
        "src_components_canvas___tests___CanvasStats_test_tsx__handles_negative_values_correctly",
        "src_components_canvas___tests___CanvasLegend_test_tsx__renders_without_crashing",
        "src_components_canvas___tests___CanvasLegend_test_tsx__displays_all_legend_items",
        "src_components_canvas___tests___CanvasLegend_test_tsx__displays_correct_visual_indicators_for_each_item",
        "src_components_canvas___tests___CanvasLegend_test_tsx__displays_financial_indicators_with_icon",
        "src_components_canvas___tests___CanvasLegend_test_tsx__uses_proper_color_coding_for_entity_types",
        "src_components_canvas___tests___CanvasLegend_test_tsx__displays_line_type_indicators_correctly",
        "src_components_canvas___tests___CanvasLegend_test_tsx__has_proper_layout_structure",
        "src_components_canvas___tests___CanvasLegend_test_tsx__displays_entities_with_proper_visual_distinctions",
        "src_components_canvas___tests___CanvasLegend_test_tsx__displays_connection_types_with_different_line_styles",
        "src_components_canvas___tests___CanvasLegend_test_tsx__has_accessible_structure",
        "src_components_canvas___tests___CanvasLegend_test_tsx__displays_all_required_entity_types",
        "src_components_canvas___tests___CanvasLegend_test_tsx__displays_all_required_connection_types",
        "src_components_canvas___tests___CanvasLegend_test_tsx__displays_financial_indicators_properly",
        "src_components_canvas___tests___CanvasLegend_test_tsx__renders_with_proper_responsive_grid_layout",
        "src_components_canvas___tests___CanvasControls_test_tsx__renders_without_crashing",
        "src_components_canvas___tests___CanvasControls_test_tsx__displays_view_selector",
        "src_components_canvas___tests___CanvasControls_test_tsx__displays_division_filter",
        "src_components_canvas___tests___CanvasControls_test_tsx__displays_team_filter",
        "src_components_canvas___tests___CanvasControls_test_tsx__displays_project_filter",
        "src_components_canvas___tests___CanvasControls_test_tsx__displays_correct_layout_structure",
        "src_components_canvas___tests___CanvasControls_test_tsx__displays_proper_icons_for_each_control",
        "src_components_canvas___tests___CanvasControls_test_tsx__handles_empty_data_gracefully",
        "src_components_canvas___tests___CanvasControls_test_tsx__handles_different_view_types",
        "src_components_canvas___tests___CanvasControls_test_tsx__handles_selected_division_correctly",
        "src_components_canvas___tests___CanvasControls_test_tsx__handles_selected_team_correctly",
        "src_components_canvas___tests___CanvasControls_test_tsx__handles_selected_project_correctly",
        "src_components_canvas___tests___CanvasControls_test_tsx__displays_all_required_controls_with_labels",
        "src_components_canvas___tests___CanvasControls_test_tsx__renders_with_consistent_styling",
        "src_components_canvas___tests___CanvasControls_test_tsx__handles_props_correctly",
        "src_services___tests___o365Service_test_ts__should_initialize_auth_service_and_set_initialized_flag",
        "src_services___tests___o365Service_test_ts__should_return_false_when_not_initialized",
        "src_services___tests___o365Service_test_ts__should_return_true_when_initialized",
        "src_services___tests___o365Service_test_ts__should_throw_error_when_not_initialized",
        "src_services___tests___o365Service_test_ts__should_authenticate_and_initialize_graph_service",
        "src_services___tests___o365Service_test_ts__should_set_sync_status_to_authenticating_during_process",
        "src_services___tests___o365Service_test_ts__should_set_sync_status_to_error_on_failure",
        "src_services___tests___o365Service_test_ts__should_return_null_when_not_initialized",
        "src_services___tests___o365Service_test_ts__should_return_auth_status_and_initialize_graph_service_when_authenticated",
        "src_services___tests___o365Service_test_ts__should_not_initialize_graph_service_when_not_authenticated",
        "src_services___tests___o365Service_test_ts__should_handle_uninitialized_service_gracefully",
        "src_services___tests___o365Service_test_ts__should_sign_out_and_reset_state",
        "src_services___tests___o365Service_test_ts__should_throw_error_when_not_initialized",
        "src_services___tests___o365Service_test_ts__should_throw_error_when_not_authenticated",
        "src_services___tests___o365Service_test_ts__should_sync_employees_successfully",
        "src_services___tests___o365Service_test_ts__should_set_status_to_error_when_sync_has_errors",
        "src_services___tests___o365Service_test_ts__should_set_status_to_error_on_exception",
        "src_services___tests___o365Service_test_ts__should_get_employees_by_business_unit",
        "src_services___tests___o365Service_test_ts__Engineering",
        "src_services___tests___o365Service_test_ts__should_throw_error_when_not_authenticated",
        "src_services___tests___o365Service_test_ts__Engineering",
        "src_services___tests___o365Service_test_ts__should_get_business_units",
        "src_services___tests___o365Service_test_ts__should_get_current_user",
        "src_services___tests___o365Service_test_ts__should_return_null_when_not_authenticated",
        "src_services___tests___o365Service_test_ts__should_test_connection_successfully",
        "src_services___tests___o365Service_test_ts__should_return_false_when_not_authenticated",
        "src_services___tests___o365Service_test_ts__should_create_default_config",
        "src_services___tests___o365Service_test_ts__should_use_defaults_when_environment_variables_not_set",
        "src_services___tests___o365Service_test_ts__should_merge_overrides_with_default_config",
        "src_services___tests___o365GraphService_test_ts__should_initialize_Graph_client_with_access_token",
        "src_services___tests___o365GraphService_test_ts__should_call_auth_provider_callback_with_access_token",
        "src_services___tests___o365GraphService_test_ts__should_throw_error_when_not_initialized",
        "src_services___tests___o365GraphService_test_ts__should_sync_employees_successfully",
        "src_services___tests___o365GraphService_test_ts__should_filter_by_business_unit_when_specified",
        "src_services___tests___o365GraphService_test_ts__should_respect_maxUsers_limit",
        "src_services___tests___o365GraphService_test_ts__should_handle_pagination",
        "src_services___tests___o365GraphService_test_ts__should_handle_API_errors_gracefully",
        "src_services___tests___o365GraphService_test_ts__should_handle_pagination_errors_gracefully",
        "src_services___tests___o365GraphService_test_ts__should_get_employees_by_business_unit",
        "src_services___tests___o365GraphService_test_ts__Engineering",
        "src_services___tests___o365GraphService_test_ts__should_get_current_user_profile_successfully",
        "src_services___tests___o365GraphService_test_ts__should_return_null_when_API_call_fails",
        "src_services___tests___o365GraphService_test_ts__should_throw_error_when_not_initialized",
        "src_services___tests___o365GraphService_test_ts__should_get_unique_business_units",
        "src_services___tests___o365GraphService_test_ts__should_return_empty_array_when_API_call_fails",
        "src_services___tests___o365GraphService_test_ts__should_return_true_when_connection_test_succeeds",
        "src_services___tests___o365GraphService_test_ts__should_return_false_when_connection_test_fails",
        "src_services___tests___o365GraphService_test_ts__should_return_false_when_not_initialized",
        "src_services___tests___o365GraphService_test_ts__should_transform_Graph_user_correctly",
        "src___tests___performance_bundle_size_test_ts__should_not_exceed_main_bundle_size_limits",
        "src___tests___performance_bundle_size_test_ts__should_have_efficient_gzipped_sizes",
        "src___tests___performance_bundle_size_test_ts__should_have_proper_chunk_splitting",
        "src___tests___performance_bundle_size_test_ts__should_not_have_overly_large_individual_files"
      ],
      "type": "unit",
      "featureArea": "canvas",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": false
      }
    },
    {
      "id": "planning_unit",
      "name": "planning unit tests",
      "tests": [
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__renders_without_crashing",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__displays_summary_statistics",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__shows_metric_type_selector",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__shows_chart_type_selector",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__can_switch_between_metric_types",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__can_switch_between_chart_types",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__displays_teams_in_bar_chart_mode",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__shows_different_tabs",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__displays_detailed_table_view",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__shows_analysis_tab_with_recommendations",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__identifies_over_allocated_teams",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__handles_division_filtering",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__shows_export_button",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__displays_risk_badges_correctly",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__shows_trend_indicators",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__handles_empty_cycle_gracefully",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__handles_no_allocations",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__calculates_correct_summary_statistics",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__shows_correct_metric_values_in_bar_chart",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__handles_pie_chart_mode",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__filters_by_division_when_selected",
        "src_components_planning___tests___WorkloadDistributionCharts_test_tsx__displays_health_scores_in_table_view",
        "src_components_planning___tests___TimelineGanttView_test_tsx__renders_without_crashing",
        "src_components_planning___tests___TimelineGanttView_test_tsx__displays_view_mode_selector",
        "src_components_planning___tests___TimelineGanttView_test_tsx__shows_timeline_header_with_correct_periods",
        "src_components_planning___tests___TimelineGanttView_test_tsx__displays_teams_in_teams_view_mode",
        "src_components_planning___tests___TimelineGanttView_test_tsx__displays_epics_in_epics_view_mode",
        "src_components_planning___tests___TimelineGanttView_test_tsx__displays_projects_in_projects_view_mode",
        "src_components_planning___tests___TimelineGanttView_test_tsx__can_switch_between_view_modes",
        "src_components_planning___tests___TimelineGanttView_test_tsx__shows_allocation_bars_with_correct_percentages",
        "src_components_planning___tests___TimelineGanttView_test_tsx__handles_allocation_clicks",
        "src_components_planning___tests___TimelineGanttView_test_tsx__can_zoom_in_and_out_on_timeline",
        "src_components_planning___tests___TimelineGanttView_test_tsx__shows_progress_bars_for_epics_and_projects",
        "src_components_planning___tests___TimelineGanttView_test_tsx__applies_show_only_allocated_filter",
        "src_components_planning___tests___TimelineGanttView_test_tsx__handles_team_filter_selection",
        "src_components_planning___tests___TimelineGanttView_test_tsx__shows_correct_allocation_count_badges",
        "src_components_planning___tests___TimelineGanttView_test_tsx__displays_empty_state_when_no_items_match_filters",
        "src_components_planning___tests___TimelineGanttView_test_tsx__shows_legend_with_allocation_indicators",
        "src_components_planning___tests___TimelineGanttView_test_tsx__handles_empty_timeline_range_gracefully",
        "src_components_planning___tests___TimelineGanttView_test_tsx__shows_export_button",
        "src_components_planning___tests___TimelineGanttView_test_tsx__displays_correct_item_type_badges",
        "src_components_planning___tests___TimelineGanttView_test_tsx__shows_timeline_columns_for_correct_date_range",
        "src_components_planning___tests___TimelineGanttView_test_tsx__handles_run_work_allocations_without_epics",
        "src_components_planning___tests___SearchAndFilter_test_tsx__renders_without_crashing",
        "src_components_planning___tests___SearchAndFilter_test_tsx__displays_search_input",
        "src_components_planning___tests___SearchAndFilter_test_tsx__handles_search_input_changes",
        "src_components_planning___tests___SearchAndFilter_test_tsx__shows_search_results_when_searching",
        "src_components_planning___tests___SearchAndFilter_test_tsx__shows_search_results_for_projects",
        "src_components_planning___tests___SearchAndFilter_test_tsx__shows_search_results_for_epics",
        "src_components_planning___tests___SearchAndFilter_test_tsx__shows_no_results_message_when_search_yields_nothing",
        "src_components_planning___tests___SearchAndFilter_test_tsx__can_clear_search",
        "src_components_planning___tests___SearchAndFilter_test_tsx__displays_allocation_status_filter",
        "src_components_planning___tests___SearchAndFilter_test_tsx__handles_allocation_status_filter_changes",
        "src_components_planning___tests___SearchAndFilter_test_tsx__displays_date_range_filter",
        "src_components_planning___tests___SearchAndFilter_test_tsx__shows_advanced_filters_when_expanded",
        "src_components_planning___tests___SearchAndFilter_test_tsx__handles_division_filter_selection",
        "src_components_planning___tests___SearchAndFilter_test_tsx__handles_team_filter_selection",
        "src_components_planning___tests___SearchAndFilter_test_tsx__shows_active_filters_count",
        "src_components_planning___tests___SearchAndFilter_test_tsx__can_clear_all_filters",
        "src_components_planning___tests___SearchAndFilter_test_tsx__handles_preset_saving",
        "src_components_planning___tests___SearchAndFilter_test_tsx__displays_filter_presets",
        "src_components_planning___tests___SearchAndFilter_test_tsx__handles_preset_loading",
        "src_components_planning___tests___SearchAndFilter_test_tsx__handles_search_result_selection",
        "src_components_planning___tests___ProgressIndicators_test_tsx__renders_without_crashing",
        "src_components_planning___tests___ProgressIndicators_test_tsx__calculates_and_displays_correct_completion_percentage",
        "src_components_planning___tests___ProgressIndicators_test_tsx__displays_team_coverage_correctly",
        "src_components_planning___tests___ProgressIndicators_test_tsx__displays_iteration_coverage_correctly",
        "src_components_planning___tests___ProgressIndicators_test_tsx__calculates_average_allocation_correctly",
        "src_components_planning___tests___ProgressIndicators_test_tsx__shows_optimal_cells_count",
        "src_components_planning___tests___ProgressIndicators_test_tsx__displays_epic_coverage",
        "src_components_planning___tests___ProgressIndicators_test_tsx__shows_planning_health_summary",
        "src_components_planning___tests___ProgressIndicators_test_tsx__handles_empty_data_gracefully",
        "src_components_planning___tests___ProgressIndicators_test_tsx__handles_over_allocated_scenarios",
        "src_components_planning___tests___ProgressIndicators_test_tsx__shows_correct_progress_bars",
        "src_components_planning___tests___ProgressIndicators_test_tsx__displays_health_score_correctly",
        "src_components_planning___tests___ProgressIndicators_test_tsx__shows_epic_coverage_progress",
        "src_components_planning___tests___ProgressIndicators_test_tsx__handles_different_completion_scenarios",
        "src_components_planning___tests___BulkOperationsPanel_test_tsx__renders_without_crashing",
        "src_components_planning___tests___BulkOperationsPanel_test_tsx__displays_all_teams_for_selection",
        "src_components_planning___tests___BulkOperationsPanel_test_tsx__displays_all_iterations_for_selection",
        "src_components_planning___tests___BulkOperationsPanel_test_tsx__allows_team_selection_and_calls_onSelectionChange",
        "src_components_planning___tests___BulkOperationsPanel_test_tsx__allows_iteration_selection_and_calls_onSelectionChange",
        "src_components_planning___tests___BulkOperationsPanel_test_tsx__shows_selection_count_when_items_are_selected",
        "src_components_planning___tests___BulkOperationsPanel_test_tsx__enables_bulk_allocation_form_when_selection_exists",
        "src_components_planning___tests___BulkOperationsPanel_test_tsx__provides_quick_percentage_buttons",
        "src_components_planning___tests___BulkOperationsPanel_test_tsx__calls_onBulkAllocate_when_allocation_is_submitted",
        "src_components_planning___tests___BulkOperationsPanel_test_tsx__calls_onBulkDelete_when_delete_is_clicked",
        "src_components_planning___tests___BulkOperationsPanel_test_tsx__allows_setting_copy_source_for_single_cell_selection",
        "src_components_planning___tests___BulkOperationsPanel_test_tsx__disables_copy_source_button_for_multiple_selections",
        "src_components_planning___tests___BulkOperationsPanel_test_tsx__allows_selecting_all_teams",
        "src_components_planning___tests___BulkOperationsPanel_test_tsx__validates_allocation_form_before_submission",
        "src_components_planning___tests___BulkOperationsPanel_test_tsx__clears_selection_when_clear_button_is_clicked",
        "src_components_planning___tests___AllocationClipboard_test_tsx__provides_clipboard_context",
        "src_components_planning___tests___AllocationClipboard_test_tsx__handles_copying_allocations",
        "src_components_planning___tests___AllocationClipboard_test_tsx__handles_pasting_allocations",
        "src_components_planning___tests___AllocationClipboard_test_tsx__handles_clearing_clipboard",
        "src_components_planning___tests___AllocationClipboard_test_tsx__renders_copy_and_paste_buttons",
        "src_components_planning___tests___AllocationClipboard_test_tsx__renders_compact_version",
        "src_components_planning___tests___AllocationClipboard_test_tsx__disables_copy_button_when_no_allocations",
        "src_components_planning___tests___AllocationClipboard_test_tsx__disables_paste_button_when_no_clipboard_data",
        "src_components_planning___tests___AllocationClipboard_test_tsx__handles_copy_action",
        "src_components_planning___tests___AllocationClipboard_test_tsx__handles_paste_action",
        "src_components_planning___tests___AllocationClipboard_test_tsx__renders_nothing_when_no_clipboard_data",
        "src_components_planning___tests___AllocationClipboard_test_tsx__displays_clipboard_information_when_data_is_present",
        "src_components_planning___tests___AllocationClipboard_test_tsx__shows_epic_names_in_clipboard_status",
        "src_components_planning___tests___AllocationClipboard_test_tsx__displays_total_percentage_and_epic_count",
        "src_components_planning___tests___AllocationClipboard_test_tsx__allows_clearing_clipboard_from_status",
        "src_components_planning___tests___AllocationClipboard_test_tsx__prevents_pasting_to_same_location",
        "src_components_planning___tests___AllocationClipboard_test_tsx__handles_empty_allocations_list",
        "src_components_planning___tests___AllocationClipboard_test_tsx__handles_run_work_allocations",
        "src_components_planning___tests___AllocationClipboard_test_tsx__shows_time_since_copy",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__renders_without_crashing",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__displays_team_names_in_the_matrix",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__displays_iteration_names_in_the_matrix",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__displays_allocation_percentages",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__shows_epic_information_in_allocation_cells",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__displays_run_work_category_badges",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__shows_empty_cells_for_teams_without_allocations",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__allows_selection_of_allocation_cells",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__enables_bulk_delete_when_allocations_are_selected",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__shows_select_all_checkbox",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__shows_confirmation_dialog_for_bulk_delete",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__handles_bulk_delete_confirmation",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__handles_bulk_delete_cancellation",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__displays_capacity_utilization_correctly",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__handles_empty_allocations_array",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__handles_empty_teams_array",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__handles_empty_iterations_array",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__shows_allocation_details_on_hover_or_click",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__updates_selection_count_when_items_are_selected",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__clears_selection_after_successful_bulk_delete",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__handles_allocation_data_with_missing_references_gracefully",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__sorts_teams_and_iterations_consistently",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__shows_loading_state_when_data_is_being_processed",
        "src_components_allocations___tests___AllocationMatrix_test_tsx__handles_keyboard_navigation_for_accessibility",
        "src_components_allocations___tests___AllocationImportDialog_test_tsx__renders_trigger_button",
        "src_components_allocations___tests___AllocationImportDialog_test_tsx__opens_dialog_when_trigger_button_is_clicked",
        "src_components_allocations___tests___AllocationImportDialog_test_tsx__displays_file_upload_input",
        "src_components_allocations___tests___AllocationImportDialog_test_tsx__displays_sample_download_button",
        "src_components_allocations___tests___AllocationImportDialog_test_tsx__handles_file_upload_and_parsing",
        "src_components_allocations___tests___AllocationImportDialog_test_tsx__displays_validation_errors",
        "src_components_allocations___tests___AllocationImportDialog_test_tsx__displays_preview_table_with_valid_data",
        "src_components_allocations___tests___AllocationImportDialog_test_tsx__enables_import_button_when_valid_data_is_present",
        "src_components_allocations___tests___AllocationImportDialog_test_tsx__disables_import_button_when_no_valid_data",
        "src_components_allocations___tests___AllocationImportDialog_test_tsx__handles_successful_import",
        "src_components_allocations___tests___AllocationImportDialog_test_tsx__handles_download_sample_CSV",
        "src_components_allocations___tests___AllocationImportDialog_test_tsx__handles_file_parsing_errors",
        "src_components_allocations___tests___AllocationImportDialog_test_tsx__handles_empty_file_selection",
        "src_components_allocations___tests___AllocationImportDialog_test_tsx__handles_reset_functionality",
        "src_components_allocations___tests___AllocationImportDialog_test_tsx__handles_cancel_action",
        "src_components_allocations___tests___AllocationImportDialog_test_tsx__shows_success_message_with_valid_data",
        "src_utils___tests___skillBasedPlanning_test_ts__should_get_skills_from_project_solutions",
        "src_utils___tests___skillBasedPlanning_test_ts__should_get_skills_from_project_specific_skills",
        "src_utils___tests___skillBasedPlanning_test_ts__should_combine_solution_skills_and_project_specific_skills",
        "src_utils___tests___skillBasedPlanning_test_ts__should_handle_projects_with_multiple_solutions",
        "src_utils___tests___skillBasedPlanning_test_ts__should_handle_missing_solutions_gracefully",
        "src_utils___tests___skillBasedPlanning_test_ts__should_calculate_fair_compatibility_for_partial_skill_match",
        "src_utils___tests___skillBasedPlanning_test_ts__should_calculate_high_compatibility_for_full_stack_team",
        "src_utils___tests___skillBasedPlanning_test_ts__should_identify_category_matches_for_related_skills",
        "src_utils___tests___skillBasedPlanning_test_ts__should_provide_detailed_reasoning_for_recommendations",
        "src_utils___tests___skillBasedPlanning_test_ts__should_handle_teams_with_no_matching_skills",
        "src_utils___tests___skillBasedPlanning_test_ts__should_handle_empty_skill_requirements",
        "src_utils___tests___skillBasedPlanning_test_ts__should_identify_the_best_team_for_a_project",
        "src_utils___tests___skillBasedPlanning_test_ts__should_identify_skill_gaps_across_teams",
        "src_utils___tests___skillBasedPlanning_test_ts__should_categorize_skill_priorities_correctly",
        "src_utils___tests___skillBasedPlanning_test_ts__should_provide_training_and_hiring_recommendations",
        "src_utils___tests___skillBasedPlanning_test_ts__should_handle_projects_with_no_matching_teams",
        "src_utils___tests___skillBasedPlanning_test_ts__should_filter_teams_by_required_skills",
        "src_utils___tests___skillBasedPlanning_test_ts__should_sort_results_by_compatibility_score",
        "src_utils___tests___skillBasedPlanning_test_ts__should_include_matching_skills_in_results",
        "src_utils___tests___skillBasedPlanning_test_ts__should_handle_empty_skill_requirements",
        "src_utils___tests___skillBasedPlanning_test_ts__should_respect_minimum_compatibility_threshold",
        "src_utils___tests___skillBasedPlanning_test_ts__should_calculate_overall_skill_coverage",
        "src_utils___tests___skillBasedPlanning_test_ts__should_identify_skills_coverage_per_skill",
        "src_utils___tests___skillBasedPlanning_test_ts__should_analyze_coverage_by_category",
        "src_utils___tests___skillBasedPlanning_test_ts__should_identify_well_covered_and_at_risk_skills",
        "src_utils___tests___skillBasedPlanning_test_ts__should_identify_categories_needing_attention",
        "src_utils___tests___skillBasedPlanning_test_ts__should_handle_teams_with_no_skills",
        "src_utils___tests___skillBasedPlanning_test_ts__should_recommend_best_teams_for_a_project",
        "src_utils___tests___skillBasedPlanning_test_ts__should_provide_ranked_recommendations_with_explanations",
        "src_utils___tests___skillBasedPlanning_test_ts__should_respect_maximum_recommendations_limit",
        "src_utils___tests___skillBasedPlanning_test_ts__should_handle_projects_requiring_skills_no_teams_have",
        "src_utils___tests___skillBasedPlanning_test_ts__should_provide_appropriate_recommendations_for_different_compatibility_levels",
        "src_utils___tests___skillBasedPlanning_test_ts__should_handle_empty_teams_array",
        "src_utils___tests___skillBasedPlanning_test_ts__should_handle_empty_skills_array",
        "src_utils___tests___skillBasedPlanning_test_ts__should_handle_projects_with_no_solutions_or_skills",
        "src_utils___tests___skillBasedPlanning_test_ts__should_handle_teams_with_null_or_undefined_targetSkills",
        "src_utils___tests___skillBasedPlanning_test_ts__should_handle_missing_skill_references_gracefully",
        "src_utils___tests___skillBasedPlanning_test_ts__should_handle_large_numbers_of_teams_efficiently",
        "src_utils___tests___skillBasedPlanning_test_ts__should_handle_large_numbers_of_skills_efficiently",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_calculate_correct_capacity_for_perfectly_allocated_team",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_detect_under_allocation_correctly",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_detect_over_allocation_correctly",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_team_with_no_allocations",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_calculate_capacity_correctly_for_different_iteration_lengths",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_missing_iteration_with_default_duration",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_calculate_iteration_duration_correctly",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_edge_case_of_same_start_and_end_date",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_aggregate_multiple_allocations_correctly",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_floating_point_percentages_accurately",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_return_latest_target_end_date_when_no_actual_dates",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_prioritize_actual_end_dates_over_target_dates",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_return_undefined_for_epics_with_no_dates",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_empty_epics_array",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_mix_of_actual_and_target_dates_correctly",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_same_dates_correctly",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_calculate_team_utilization_across_multiple_iterations",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_complex_project_timeline_calculations",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_validate_quarter_level_capacity_planning",
        "src_utils___tests___planningAllocationCalculations_test_ts__T",
        "src_utils___tests___planningAllocationCalculations_test_ts__T",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_handle_real_world_allocation_scenarios_with_rounding",
        "src_utils___tests___planningAllocationCalculations_test_ts__should_detect_capacity_conflicts_across_teams_and_iterations",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_calculate_team_utilization_metrics_correctly",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_handle_team_with_no_allocations",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_identify_skill_gaps_from_epic_requirements",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_validate_allocation_consistency",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_detect_over_allocation_scenarios",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_handle_empty_allocations",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_generate_allocation_recommendations",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_handle_recommendations_for_balanced_teams",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_analyze_cross_team_dependencies",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_identify_shared_epics_between_teams",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_analyze_allocation_trends",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_handle_empty_cycles_array",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_optimize_allocation_distribution",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_handle_optimization_with_constraints",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_handle_missing_team_data",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_handle_empty_allocations_gracefully",
        "src_utils___tests___planningAllocationCalculations_comprehensive_test_ts__should_handle_cycles_without_iterations",
        "src_utils___tests___financialYearPlanning_test_ts__should_create_financial_year_with_complete_Q1_Q4_structure",
        "src_utils___tests___financialYearPlanning_test_ts__should_correctly_link_projects_to_financial_year_timeline",
        "src_utils___tests___financialYearPlanning_test_ts__should_correctly_map_project_solutions_to_required_skills",
        "src_utils___tests___financialYearPlanning_test_ts__should_handle_overlapping_skills_from_multiple_solutions",
        "src_utils___tests___financialYearPlanning_test_ts__should_find_teams_with_matching_skills_for_frontend_solution",
        "src_utils___tests___financialYearPlanning_test_ts__should_provide_team_recommendations_based_on_skill_compatibility",
        "src_utils___tests___financialYearPlanning_test_ts__should_calculate_available_capacity_considering_existing_allocations",
        "src_utils___tests___financialYearPlanning_test_ts__should_identify_teams_with_full_availability",
        "src_utils___tests___financialYearPlanning_test_ts__should_aggregate_capacity_across_all_quarters_for_financial_year_planning",
        "src_utils___tests___financialYearPlanning_test_ts__should_prioritize_highest_priority_project_for_team_selection",
        "src_utils___tests___financialYearPlanning_test_ts__should_allocate_teams_considering_both_skills_and_availability",
        "src_utils___tests___financialYearPlanning_test_ts__should_handle_resource_conflicts_when_teams_are_needed_by_multiple_projects",
        "src_utils___tests___financialYearPlanning_test_ts__should_provide_actionable_recommendations_for_team_allocation_conflicts",
        "src_utils___tests___financialYearPlanning_test_ts__should_execute_complete_financial_year_planning_process",
        "src_utils___tests___financialYearPlanning_test_ts__should_provide_comprehensive_planning_summary_with_actionable_insights",
        "src_utils___tests___allocationImportUtils_test_ts__should_parse_valid_allocation_CSV",
        "src_utils___tests___allocationImportUtils_test_ts__should_handle_quoted_CSV_fields",
        "src_utils___tests___allocationImportUtils_test_ts__should_filter_out_rows_with_missing_required_fields",
        "src_utils___tests___allocationImportUtils_test_ts__should_parse_numeric_fields_correctly",
        "src_utils___tests___allocationImportUtils_test_ts__should_handle_empty_CSV_gracefully",
        "src_utils___tests___allocationImportUtils_test_ts__should_handle_CSV_with_only_headers",
        "src_utils___tests___allocationImportUtils_test_ts__should_validate_correct_allocation_data",
        "src_utils___tests___allocationImportUtils_test_ts__should_catch_invalid_team_names",
        "src_utils___tests___allocationImportUtils_test_ts__should_catch_invalid_quarter_names",
        "src_utils___tests___allocationImportUtils_test_ts__should_catch_invalid_epic_names_for_project_work",
        "src_utils___tests___allocationImportUtils_test_ts__should_catch_invalid_run_work_category_names",
        "src_utils___tests___allocationImportUtils_test_ts__should_validate_percentage_ranges",
        "src_utils___tests___allocationImportUtils_test_ts__should_provide_accurate_row_numbers_in_error_messages",
        "src_utils___tests___allocationImportUtils_test_ts__should_handle_case_insensitive_matching",
        "src_utils___tests___allocationImportUtils_test_ts__should_convert_valid_import_data_to_allocations",
        "src_utils___tests___allocationImportUtils_test_ts__should_generate_unique_allocation_IDs",
        "src_utils___tests___allocationImportUtils_test_ts__should_skip_rows_with_missing_team_or_quarter_references",
        "src_utils___tests___allocationImportUtils_test_ts__should_handle_case_insensitive_name_matching",
        "src_utils___tests___allocationImportUtils_test_ts__should_handle_complete_import_workflow_with_mixed_epic_types",
        "src_utils___tests___allocationImportUtils_test_ts__should_handle_quarterly_allocation_planning_across_multiple_teams",
        "src_utils___tests___allocationImportUtils_test_ts__should_handle_malformed_CSV_gracefully",
        "src_utils___tests___allocationImportUtils_test_ts__should_handle_very_large_percentage_allocations",
        "src_utils___tests___allocationImportUtils_test_ts__should_handle_floating_point_percentage_precision",
        "src_utils___tests___actual_allocation_import_test_ts__should_successfully_parse_valid_CSV_data",
        "src_utils___tests___actual_allocation_import_test_ts__should_handle_team_name_case_insensitivity",
        "src_utils___tests___actual_allocation_import_test_ts__should_handle_team_name_with_extra_spaces",
        "src_utils___tests___actual_allocation_import_test_ts__should_error_for_non_existent_team",
        "src_utils___tests___actual_allocation_import_test_ts__should_handle_",
        "src_utils___tests___actual_allocation_import_test_ts__should_handle_run_work_categories",
        "src_utils___tests___actual_allocation_import_test_ts__should_handle_missing_epic_name"
      ],
      "type": "unit",
      "featureArea": "planning",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": false
      }
    },
    {
      "id": "mobile_unit",
      "name": "mobile unit tests",
      "tests": [
        "src_components_mobile___tests___MobileNavigation_test_tsx__should_not_render_when_not_on_mobile",
        "src_components_mobile___tests___MobileNavigation_test_tsx__should_render_navigation_items",
        "src_components_mobile___tests___MobileNavigation_test_tsx__should_have_correct_href_attributes",
        "src_components_mobile___tests___MobileNavigation_test_tsx__should_highlight_active_route___home_page",
        "src_components_mobile___tests___MobileNavigation_test_tsx__should_highlight_active_route___dashboard_page",
        "src_components_mobile___tests___MobileNavigation_test_tsx__should_highlight_active_route___teams_page",
        "src_components_mobile___tests___MobileNavigation_test_tsx__should_show_attention_badge_when_attention_items_present",
        "src_components_mobile___tests___MobileNavigation_test_tsx__should_show_9__for_attention_items_over_9",
        "src_components_mobile___tests___MobileNavigation_test_tsx__should_not_show_badge_when_no_attention_items",
        "src_components_mobile___tests___MobileNavigation_test_tsx__should_be_positioned_fixed_at_bottom",
        "src_components_mobile___tests___MobileNavigation_test_tsx__should_have_proper_z_index_for_overlay",
        "src_components_mobile___tests___MobileNavigation_test_tsx__should_handle_nested_routes_correctly",
        "src_components_mobile___tests___MobileNavigation_test_tsx__should_show_active_indicator_for_current_route",
        "src_components_mobile___tests___MobileNavigation_test_tsx__should_be_accessible",
        "src_components_mobile___tests___MobileNavigation_test_tsx__should_have_proper_responsive_spacing",
        "src_components_mobile___tests___MobileNavigation_test_tsx__should_handle_undefined_attention_items_count",
        "src_components_layout___tests___ResponsiveLayout_test_tsx__should_have_no_max_width_constraint_for_widescreen_support",
        "src_components_layout___tests___ResponsiveLayout_test_tsx__should_maintain_proper_flex_layout_structure",
        "src_components_layout___tests___ResponsiveLayout_test_tsx__should_allow_main_content_to_expand_on_widescreen",
        "src_components_layout___tests___ResponsiveLayout_test_tsx__should_display_responsive_grid_layout",
        "src_components_layout___tests___ResponsiveLayout_test_tsx__should_handle_content_spacing_properly",
        "src_components_layout___tests___ResponsiveLayout_test_tsx__should_support_ultra_wide_content_layout",
        "src_components_layout___tests___ResponsiveLayout_test_tsx__should_maintain_readability_with_proper_content_constraints",
        "src_components_layout___tests___ResponsiveLayout_test_tsx__should_handle_mobile_layout_appropriately",
        "src_components_layout___tests___ResponsiveLayout_test_tsx__should_maintain_proper_grid_behavior_on_different_screen_sizes",
        "src_components_layout___tests___ResponsiveLayout_test_tsx__should_maintain_semantic_structure",
        "src_components_layout___tests___ResponsiveLayout_test_tsx__should_handle_overflow_properly",
        "src_components_layout___tests___ResponsiveLayout_test_tsx__should_handle_wide_tables_on_widescreen",
        "src_components_layout___tests___ResponsiveLayout_test_tsx__should_support_horizontal_scrolling_on_narrow_screens",
        "src_hooks___tests___usePWA_test_ts__should_initialize_with_default_values",
        "src_hooks___tests___usePWA_test_ts__should_detect_PWA_support_correctly",
        "src_hooks___tests___usePWA_test_ts__should_handle_beforeinstallprompt_event",
        "src_hooks___tests___usePWA_test_ts__should_handle_install_function",
        "src_hooks___tests___usePWA_test_ts__should_handle_app_installed_event",
        "src_hooks___tests___usePWA_test_ts__should_handle_online_offline_status",
        "src_hooks___tests___usePWA_test_ts__should_detect_installed_app_from_display_mode",
        "src_hooks___tests___usePWA_test_ts__should_register_service_worker_successfully",
        "src_hooks___tests___usePWA_test_ts__should_handle_service_worker_registration_failure",
        "src_hooks___tests___usePWA_test_ts__should_handle_service_worker_update",
        "src_hooks___tests___usePWA_test_ts__should_handle_unsupported_service_worker",
        "tests_e2e_mobile_pwa_features_spec_ts__should_display_mobile_dashboard_on_mobile_viewport",
        "tests_e2e_mobile_pwa_features_spec_ts__should_show_mobile_navigation_at_bottom",
        "tests_e2e_mobile_pwa_features_spec_ts__should_hide_desktop_sidebar_on_mobile",
        "tests_e2e_mobile_pwa_features_spec_ts__should_show_PWA_install_banner_when_applicable",
        "tests_e2e_mobile_pwa_features_spec_ts__should_show_offline_indicator_when_offline",
        "tests_e2e_mobile_pwa_features_spec_ts__should_navigate_between_pages_using_mobile_navigation",
        "tests_e2e_mobile_pwa_features_spec_ts__should_show_attention_badge_on_navigation_when_items_present",
        "tests_e2e_mobile_pwa_features_spec_ts__should_handle_quick_actions_in_mobile_dashboard",
        "tests_e2e_mobile_pwa_features_spec_ts__should_display_stats_in_mobile_friendly_format",
        "tests_e2e_mobile_pwa_features_spec_ts__should_show_current_status_information",
        "tests_e2e_mobile_pwa_features_spec_ts__should_work_offline_with_service_worker",
        "tests_e2e_mobile_pwa_features_spec_ts__should_maintain_responsive_design_across_different_mobile_sizes",
        "tests_e2e_mobile_pwa_features_spec_ts__should_handle_PWA_manifest_correctly",
        "tests_e2e_mobile_pwa_features_spec_ts__should_show_connection_status_indicator",
        "tests_e2e_all_pages_responsive_spec_ts____pageInfo_name__responsive_at___resolution_name_____resolution_width_x__resolution_height__",
        "tests_e2e_all_pages_responsive_spec_ts__Dynamic_viewport_resizing_should_work_correctly",
        "tests_e2e_all_pages_responsive_spec_ts__Search_and_filter_controls_should_remain_accessible_on_all_resolutions"
      ],
      "type": "unit",
      "featureArea": "mobile",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": false
      }
    },
    {
      "id": "core_unit",
      "name": "core unit tests",
      "tests": [
        "src_utils___tests___teamUtils_test_ts__should_return_",
        "src_utils___tests___teamUtils_test_ts__should_return_",
        "src_utils___tests___teamUtils_test_ts__should_return_natural_PO_name_with_",
        "src_utils___tests___teamUtils_test_ts__should_return_acting_PO_name_with_",
        "src_utils___tests___teamUtils_test_ts__should_return_external_PO_name_with_",
        "src_utils___tests___teamUtils_test_ts__should_return_just_the_name_when_no_PO_role_exists",
        "src_utils___tests___teamUtils_test_ts__should_return_only_active_team_members",
        "src_utils___tests___teamUtils_test_ts__should_return_empty_array_for_team_with_no_members",
        "src_utils___tests___teamUtils_test_ts__should_exclude_inactive_members",
        "src_utils___tests___teamUtils_test_ts__should_return_the_person_with_PO_role_in_the_team",
        "src_utils___tests___teamUtils_test_ts__should_return_null_when_no_PO_role_exists",
        "src_utils___tests___teamUtils_test_ts__should_return_the_natural_PO_when_person_with_PO_role_exists_in_team",
        "src_utils___tests___teamUtils_test_ts__should_return_true_for_person_who_is_natural_PO",
        "src_utils___tests___teamUtils_test_ts__should_return_false_for_person_who_is_not_natural_PO",
        "src_utils___tests___teamUtils_test_ts__should_return_false_for_person_who_does_not_exist",
        "src_utils___tests___teamUtils_test_ts__should_return_false_for_person_without_team",
        "src_utils___tests___teamUtils_test_ts__should_prioritize_natural_PO_at_the_beginning",
        "src_utils___tests___teamUtils_test_ts__should_return_all_team_members_when_no_natural_PO_exists",
        "src_utils___tests___teamUtils_test_ts__should_return_empty_array_for_team_with_no_members",
        "src_utils___tests___teamUtils_test_ts__should_return_division_name_when_division_exists",
        "src_utils___tests___teamUtils_test_ts__should_return_",
        "src_utils___tests___teamUtils_test_ts__should_return_",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_a_valid_ground_truth_dataset",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_reproducible_results_with_same_seed",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_different_results_with_different_seeds",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_project_statuses_with_valid_properties",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_limit_project_count_based_on_template_complexity",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_risks_with_valid_properties",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_financials_with_valid_properties",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_realistic_budget_ranges",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_milestones_with_valid_properties",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_team_updates_with_valid_properties",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_correct_document_metadata",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_calculate_total_expected_entities_correctly",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_a_complete_test_suite",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_datasets_for_each_template",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_use_default_values_when_config_is_empty",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_handle_invalid_template_IDs_gracefully",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_synthetic_documents",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_create_a_complete_benchmark",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_realistic_performance_metrics",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_allow_custom_performance_metrics",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_calculate_throughput_correctly",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_include_timestamp",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_have_valid_template_definitions",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_have_unique_template_IDs",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_include_expected_template_types",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_provide_valid_sample_test_cases",
        "src_utils___tests___ocrTestDataGenerator_test_ts__should_generate_valid_datasets_from_sample_test_cases",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_start_and_complete_operations_successfully",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_track_multiple_concurrent_operations",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_update_operation_stages",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_handle_operation_errors",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_throw_error_for_non_existent_operation",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_generate_current_performance_snapshots",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_track_performance_history",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_calculate_performance_statistics",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_detect_system_under_stress",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_not_detect_stress_under_normal_conditions",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_provide_optimization_recommendations_under_stress",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_provide_idle_recommendations_when_system_is_idle",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_trigger_processing_time_alert",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_trigger_queue_length_alert",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_trigger_throughput_alert",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_trigger_error_rate_alert",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_not_trigger_alerts_when_disabled",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_reset_all_tracking_data",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_stop_performance_tracking",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_return_singleton_instance",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_create_new_instance_with_custom_config",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_wrap_async_function_with_monitoring",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_handle_function_errors_and_record_them",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_work_with_functions_that_have_multiple_parameters",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_create_a_complete_monitored_pipeline",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_configure_monitor_with_OCR_specific_thresholds",
        "src_utils___tests___ocrPerformanceMonitor_test_ts__should_provide_bound_methods_that_work_correctly",
        "src_utils___tests___ocrMapping_test_ts__should_map_extracted_entities_to_existing_data",
        "src_utils___tests___ocrMapping_test_ts__should_successfully_map_similar_project_names",
        "src_utils___tests___ocrMapping_test_ts__should_identify_unmapped_entities",
        "src_utils___tests___ocrMapping_test_ts__should_map_team_updates_correctly",
        "src_utils___tests___ocrMapping_test_ts__should_map_milestones_with_project_context",
        "src_utils___tests___ocrMapping_test_ts__should_detect_conflicts_for_status_changes",
        "src_utils___tests___ocrMapping_test_ts__should_generate_appropriate_recommendations",
        "src_utils___tests___ocrMapping_test_ts__should_handle_empty_existing_data_gracefully",
        "src_utils___tests___ocrMapping_test_ts__should_handle_empty_extraction_result_gracefully",
        "src_utils___tests___ocrMapping_test_ts__should_generate_context_updates_for_projects",
        "src_utils___tests___ocrMapping_test_ts__should_generate_context_updates_for_epics",
        "src_utils___tests___ocrMapping_test_ts__should_create_new_risk_entries",
        "src_utils___tests___ocrMapping_test_ts__should_handle_milestone_updates",
        "src_utils___tests___ocrMapping_test_ts__should_preserve_original_data_for_unmapped_entities",
        "src_utils___tests___ocrMapping_test_ts__should_only_apply_high_confidence_mappings_automatically",
        "src_utils___tests___ocrMapping_test_ts__should_handle_fuzzy_string_matching_for_similar_names",
        "src_utils___tests___ocrMapping_test_ts__should_prioritize_exact_matches_over_fuzzy_matches",
        "src_utils___tests___ocrMapping_test_ts__should_detect_high_level_conflicts_for_major_status_changes",
        "src_utils___tests___ocrMapping_test_ts__should_detect_date_conflicts_for_milestones",
        "src_utils___tests___ocrExtraction_test_ts__should_extract_all_entity_types_from_steering_committee_text",
        "src_utils___tests___ocrExtraction_test_ts__should_extract_project_statuses_correctly",
        "src_utils___tests___ocrExtraction_test_ts__should_extract_risks_with_impact_levels",
        "src_utils___tests___ocrExtraction_test_ts__should_extract_financial_information",
        "src_utils___tests___ocrExtraction_test_ts__should_extract_milestone_information",
        "src_utils___tests___ocrExtraction_test_ts__should_extract_team_updates_with_utilization",
        "src_utils___tests___ocrExtraction_test_ts__should_extract_commentary_with_sentiment_analysis",
        "src_utils___tests___ocrExtraction_test_ts__should_calculate_extraction_metadata",
        "src_utils___tests___ocrExtraction_test_ts__should_handle_empty_text_gracefully",
        "src_utils___tests___ocrExtraction_test_ts__should_respect_confidence_threshold_settings",
        "src_utils___tests___ocrExtraction_test_ts__should_handle_different_extraction_modes",
        "src_utils___tests___ocrExtraction_test_ts__should_handle_malformed_status_text",
        "src_utils___tests___ocrExtraction_test_ts__should_handle_special_characters_and_Unicode",
        "src_utils___tests___ocrExtraction_test_ts__should_deduplicate_similar_entities",
        "src_utils___tests___ocrExtraction_test_ts__should_handle_very_large_text_input",
        "src_utils___tests___ocrExtraction_test_ts__should_normalize_different_status_representations",
        "src_utils___tests___ocrExtraction_test_ts__should_detect_different_currencies",
        "src_utils___tests___ocrExtraction_test_ts__should_normalize_different_date_formats",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_correct_overall_accuracy_metrics",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_precision_correctly",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_recall_correctly",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_F1_score_correctly",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_accuracy_score_correctly",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_project_status_accuracy_correctly",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_risk_accuracy_correctly",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_financial_accuracy_correctly",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_milestone_accuracy_correctly",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_team_update_accuracy_correctly",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_average_confidence_correctly",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_confidence_distribution_correctly",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_assess_text_quality",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_assess_structural_accuracy",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_generate_a_complete_benchmark_report",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_calculate_correct_summary_statistics",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_provide_meaningful_recommendations",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_identify_improvement_areas",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_analyze_trends_correctly",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_handle_empty_benchmarks_array",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_handle_single_benchmark",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_handle_extraction_result_with_no_entities",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_handle_ground_truth_with_no_expected_entities",
        "src_utils___tests___ocrAccuracyMeasurement_test_ts__should_handle_perfect_extraction_accuracy",
        "src_utils___tests___mathUtils_test_ts__should_add_two_positive_numbers",
        "src_utils___tests___mathUtils_test_ts__should_add_negative_numbers",
        "src_utils___tests___mathUtils_test_ts__should_add_zero",
        "src_utils___tests___mathUtils_test_ts__should_subtract_two_numbers",
        "src_utils___tests___mathUtils_test_ts__should_handle_negative_results",
        "src_utils___tests___mathUtils_test_ts__should_multiply_two_numbers",
        "src_utils___tests___mathUtils_test_ts__should_handle_zero",
        "src_utils___tests___mathUtils_test_ts__should_divide_two_numbers",
        "src_utils___tests___mathUtils_test_ts__should_throw_error_on_division_by_zero",
        "src_utils___tests___heatMapUtils_test_ts__should_return_empty_for_0_",
        "src_utils___tests___heatMapUtils_test_ts__should_return_under_for_low_percentages",
        "src_utils___tests___heatMapUtils_test_ts__should_return_optimal_for_good_percentages",
        "src_utils___tests___heatMapUtils_test_ts__should_return_near_full_for_high_percentages",
        "src_utils___tests___heatMapUtils_test_ts__should_return_over_for_overallocated_percentages",
        "src_utils___tests___heatMapUtils_test_ts__should_return_critical_for_very_high_percentages",
        "src_utils___tests___heatMapUtils_test_ts__should_return_0_for_empty_level",
        "src_utils___tests___heatMapUtils_test_ts__should_return_appropriate_intensity_for_under_level",
        "src_utils___tests___heatMapUtils_test_ts__should_return_appropriate_intensity_for_optimal_level",
        "src_utils___tests___heatMapUtils_test_ts__should_return_appropriate_intensity_for_critical_level",
        "src_utils___tests___heatMapUtils_test_ts__should_return_appropriate_colors_for_empty_level",
        "src_utils___tests___heatMapUtils_test_ts__should_return_appropriate_colors_for_optimal_level",
        "src_utils___tests___heatMapUtils_test_ts__should_return_appropriate_colors_for_critical_level",
        "src_utils___tests___heatMapUtils_test_ts__should_adjust_alpha_based_on_intensity",
        "src_utils___tests___heatMapUtils_test_ts__should_generate_heat_map_data_for_all_team_iteration_combinations",
        "src_utils___tests___heatMapUtils_test_ts__should_calculate_correct_statistics",
        "src_utils___tests___heatMapUtils_test_ts__should_handle_edge_cases",
        "src_utils___tests___heatMapUtils_test_ts__should_return_complete_legend_data",
        "src_utils___tests___heatMapUtils_test_ts__should_work_end_to_end_with_realistic_data",
        "src_utils___tests___epic_type_mapping_test_ts__should_return_true_for_Critical_Run",
        "src_utils___tests___epic_type_mapping_test_ts__should_return_false_for_Change_Work_types",
        "src_utils___tests___epic_type_mapping_test_ts__should_be_case_sensitive",
        "src_utils___tests___epic_type_mapping_test_ts__should_return_true_for_Change_Work_types",
        "src_utils___tests___epic_type_mapping_test_ts__should_return_false_for_Run_Work_types",
        "src_utils___tests___epic_type_mapping_test_ts__should_be_case_sensitive",
        "src_utils___tests___epic_type_mapping_test_ts__should_correctly_identify_Run_Work_Epic_Types",
        "src_utils___tests___epic_type_mapping_test_ts__should_correctly_identify_Change_Work_Epic_Types",
        "src_utils___tests___epic_type_mapping_test_ts__should_handle_project_detection_in_planning_allocations",
        "src_utils___tests___epic_type_mapping_test_ts__should_handle_direct_project_references_without_epic_names",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_parse_CSV_and_clean_quoted_fields",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_handle_mixed_quoted_and_unquoted_fields",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_parse_basic_people_CSV_with_default_values",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_parse_enhanced_people_CSV_with_all_fields",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_create_divisions_with_proper_attributes",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_create_teams_with_division_assignments_and_capacity",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_create_roles_with_multiple_rate_types",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_handle_duplicate_teams_and_roles_correctly",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_handle_missing_optional_fields_gracefully",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_parse_employment_type_correctly",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_parse_boolean_fields_correctly",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_skip_rows_with_insufficient_data",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_parse_teams_with_divisions_correctly",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_handle_teams_without_divisions",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_deduplicate_divisions",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_parse_roles_with_multiple_rate_types",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_handle_missing_rate_fields",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_filter_out_empty_role_names",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_export_people_with_all_fields",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_handle_missing_related_data_gracefully",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_properly_escape_CSV_fields",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_export_teams_with_divisions",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_handle_teams_without_divisions",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_export_roles_with_all_rate_types",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_handle_missing_optional_fields",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_maintain_referential_integrity_between_people__teams__and_roles",
        "src_utils___tests___enhancedCsvUtils_test_ts__should_generate_consistent_IDs_for_similar_data",
        "src_utils___tests___enhancedCsvParser_test_ts__should_parse_basic_CSV_with_explicit_headers",
        "src_utils___tests___enhancedCsvParser_test_ts__should_auto_detect_semicolon_delimiter",
        "src_utils___tests___enhancedCsvParser_test_ts__should_auto_detect_tab_delimiter",
        "src_utils___tests___enhancedCsvParser_test_ts__should_handle_CSV_without_headers",
        "src_utils___tests___enhancedCsvParser_test_ts__should_handle_quoted_fields",
        "src_utils___tests___enhancedCsvParser_test_ts__should_limit_rows_when_maxRows_specified",
        "src_utils___tests___enhancedCsvParser_test_ts__should_skip_empty_rows_when_configured",
        "src_utils___tests___enhancedCsvParser_test_ts__should_provide_basic_metadata",
        "src_utils___tests___enhancedCsvParser_test_ts__should_handle_different_line_endings",
        "src_utils___tests___enhancedCsvParser_test_ts__should_handle_empty_content_gracefully",
        "src_utils___tests___enhancedCsvParser_test_ts__should_call_progress_callback_for_large_files",
        "src_utils___tests___enhancedCsvParser_test_ts__should_handle_basic_parsing_errors_gracefully",
        "src_utils___tests___enhancedCsvParser_test_ts__should_detect_headers_when_specified",
        "src_utils___tests___enhancedCsvParser_test_ts__should_validate_required_headers_when_specified",
        "src_utils___tests___enhancedCsvParser_test_ts__should_validate_required_fields_in_data",
        "src_utils___tests___enhancedCsvParser_test_ts__should_consistently_detect_the_same_delimiter_across_similar_files",
        "src_utils___tests___enhancedCsvParser_test_ts__should_prefer_more_consistent_delimiter_when_multiple_are_possible",
        "src_utils___tests___enhancedCsvParser_test_ts__should_work_as_wrapper_for_EnhancedCSVParser_parse",
        "src_utils___tests___enhancedCsvParser_test_ts__should_pass_options_correctly",
        "src_utils___tests___enhancedCsvParser_test_ts__should_handle_reasonably_large_files_efficiently",
        "src_utils___tests___enhancedCsvParser_test_ts__should_report_accurate_processing_time_in_metadata",
        "src_utils___tests___enhancedCsvParser_test_ts__should_handle_malformed_CSV_gracefully",
        "src_utils___tests___enhancedCsvParser_test_ts__should_handle_very_large_field_values",
        "src_utils___tests___enhancedCsvParser_test_ts__should_handle_Unicode_characters",
        "src_utils___tests___enhancedCsvParser_test_ts__should_handle_mixed_delimiters_gracefully",
        "src_utils___tests___enhancedCsvParser_simple_test_ts__should_parse_simple_CSV_data",
        "src_utils___tests___enhancedCsvParser_simple_test_ts__should_handle_empty_content",
        "src_utils___tests___enhancedCsvParser_simple_test_ts__should_handle_malformed_content_gracefully",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_complete_quarterly_allocation_import",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_mixed_valid_invalid_data_with_detailed_error_reporting",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_case_insensitive_team_and_epic_matching",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_validate_percentage_allocation_constraints",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_large_CSV_files_with_performance_tracking",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_CSV_with_different_delimiter_formats",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_CSV_with_quoted_fields_and_special_characters",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_provide_detailed_import_statistics",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_malformed_CSV_gracefully",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_empty_CSV_file",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_CSV_with_only_headers",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_CSV_with_missing_required_columns",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_provide_recovery_suggestions_for_common_errors",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_concurrent_CSV_processing",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_handle_memory_efficient_processing_of_large_files",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_validate_allocation_percentages_sum_to_reasonable_totals",
        "src_utils___tests___enhancedCsvParser_integration_test_ts__should_validate_cross_team_epic_dependencies",
        "src_utils___tests___dateUtils_test_ts__should_parse_ISO_date_format__yyyy_MM_dd_",
        "src_utils___tests___dateUtils_test_ts__should_parse_US_date_format__MM_dd_yyyy_",
        "src_utils___tests___dateUtils_test_ts__should_parse_UK_date_format__dd_MM_yyyy_",
        "src_utils___tests___dateUtils_test_ts__should_parse_short_US_date_format__M_d_yyyy_",
        "src_utils___tests___dateUtils_test_ts__should_parse_dot_separated_format__yyyy_MM_dd_",
        "src_utils___tests___dateUtils_test_ts__should_parse_dash_separated_format__dd_MM_yyyy_",
        "src_utils___tests___dateUtils_test_ts__should_parse_slash_separated_ISO_format__yyyy_MM_dd_",
        "src_utils___tests___dateUtils_test_ts__should_handle_invalid_date_strings",
        "src_utils___tests___dateUtils_test_ts__should_handle_null_and_undefined_inputs",
        "src_utils___tests___dateUtils_test_ts__should_use_fallback_parsing_for_other_formats",
        "src_utils___tests___dateUtils_test_ts__should_handle_edge_cases",
        "src_utils___tests___dateUtils_test_ts__should_return_current_FY_when_current_date_is_after_FY_start",
        "src_utils___tests___dateUtils_test_ts__should_return_previous_FY_when_current_date_is_before_FY_start",
        "src_utils___tests___dateUtils_test_ts__should_handle_FY_starting_on_exact_date",
        "src_utils___tests___dateUtils_test_ts__should_handle_January_1st_FY_start",
        "src_utils___tests___dateUtils_test_ts__should_handle_July_1st_FY_start__common_in_many_organizations_",
        "src_utils___tests___dateUtils_test_ts__should_handle_cross_year_scenarios",
        "src_utils___tests___dateUtils_test_ts__should_use_current_date_when_no_currentDate_provided",
        "src_utils___tests___dateUtils_test_ts__should_handle_leap_year_FY_start",
        "src_utils___tests___dateUtils_test_ts__should_handle_different_month_and_day_combinations",
        "src_utils___tests___dateUtils_test_ts__should_maintain_proper_date_format",
        "src_utils___tests___dateUtils_test_ts__should_return_quarter_containing_current_date",
        "src_utils___tests___dateUtils_test_ts__should_return_quarter_when_current_date_is_on_start_date",
        "src_utils___tests___dateUtils_test_ts__should_return_quarter_when_current_date_is_on_end_date",
        "src_utils___tests___dateUtils_test_ts__should_return_next_future_quarter_when_current_date_is_between_quarters",
        "src_utils___tests___dateUtils_test_ts__should_return_first_quarter_chronologically_when_no_current_or_future_quarters",
        "src_utils___tests___dateUtils_test_ts__should_handle_empty_quarters_array",
        "src_utils___tests___dateUtils_test_ts__should_handle_null_quarters_array",
        "src_utils___tests___dateUtils_test_ts__should_use_current_date_when_no_currentDate_provided",
        "src_utils___tests___dateUtils_test_ts__should_handle_unsorted_quarters_array",
        "src_utils___tests___dateUtils_test_ts__should_handle_overlapping_quarters_by_returning_first_match",
        "src_utils___tests___dateUtils_test_ts__should_handle_financial_year_quarters__April_March_",
        "src_utils___tests___dateUtils_test_ts__should_select_nearest_future_quarter_correctly",
        "src_utils___tests___dateUtils_test_ts__should_handle_quarter_boundaries_correctly",
        "src_utils___tests___dateUtils_test_ts__should_handle_timezone_independent_date_comparison",
        "src_utils___tests___dateUtils_test_ts__should_work_together_for_complete_FY_quarter_navigation",
        "src_utils___tests___dateUtils_test_ts__should_handle_year_end_transitions_properly",
        "src_utils___tests___currency_test_ts__should_format_small_amounts_without_decimals",
        "src_utils___tests___currency_test_ts__should_format_thousands_with_commas",
        "src_utils___tests___currency_test_ts__should_format_hundreds_of_thousands_with_commas",
        "src_utils___tests___currency_test_ts__should_format_millions_with_commas",
        "src_utils___tests___currency_test_ts__should_format_billions_with_commas",
        "src_utils___tests___currency_test_ts__should_handle_zero_and_negative_values",
        "src_utils___tests___currency_test_ts__should_round_decimal_values_to_whole_numbers",
        "src_utils___tests___currency_test_ts__should_format_with_EUR_currency_code",
        "src_utils___tests___currency_test_ts__should_format_with_GBP_currency_code",
        "src_utils___tests___currency_test_ts__should_format_with_JPY_currency_code",
        "src_utils___tests___currency_test_ts__should_convert_dollar_symbol_to_USD_currency",
        "src_utils___tests___currency_test_ts__should_convert_euro_symbol_to_EUR_currency",
        "src_utils___tests___currency_test_ts__should_convert_pound_symbol_to_GBP_currency",
        "src_utils___tests___currency_test_ts__should_convert_yen_symbol_to_JPY_currency",
        "src_utils___tests___currency_test_ts__should_convert_rupee_symbol_to_INR_currency",
        "src_utils___tests___currency_test_ts__should_convert_ruble_symbol_to_RUB_currency",
        "src_utils___tests___currency_test_ts__should_fallback_to_USD_for_unknown_currency_symbols",
        "src_utils___tests___currency_test_ts__should_format_with_German_locale__uses_dots_for_thousands_",
        "src_utils___tests___currency_test_ts__should_format_with_French_locale",
        "src_utils___tests___currency_test_ts__should_handle_very_large_numbers",
        "src_utils___tests___currency_test_ts__should_handle_NaN_and_undefined_values_gracefully",
        "src_utils___tests___currency_test_ts__should_handle_null_and_undefined_values",
        "src_utils___tests___currency_test_ts__should_handle_Infinity_values",
        "src_utils___tests___csvUtils_test_ts__should_parse_simple_CSV_without_quotes",
        "src_utils___tests___csvUtils_test_ts__should_handle_CSV_with_quoted_fields",
        "src_utils___tests___csvUtils_test_ts__should_handle_CSV_with_commas_inside_quoted_fields",
        "src_utils___tests___csvUtils_test_ts__should_handle_mixed_quoted_and_unquoted_fields",
        "src_utils___tests___csvUtils_test_ts__should_handle_empty_fields",
        "src_utils___tests___csvUtils_test_ts__should_trim_whitespace_from_fields",
        "src_utils___tests___csvUtils_test_ts__should_handle_single_row_CSV",
        "src_utils___tests___csvUtils_test_ts__should_handle_empty_input",
        "src_utils___tests___csvUtils_test_ts__should_parse_valid_people_CSV_with_teams",
        "src_utils___tests___csvUtils_test_ts__should_handle_people_CSV_with_quoted_fields",
        "src_utils___tests___csvUtils_test_ts__should_skip_rows_with_insufficient_data",
        "src_utils___tests___csvUtils_test_ts__should_handle_duplicate_team_IDs_by_reusing_existing_team",
        "src_utils___tests___csvUtils_test_ts__should_generate_unique_person_IDs",
        "src_utils___tests___csvUtils_test_ts__should_set_default_employment_type_and_start_date",
        "src_utils___tests___csvUtils_test_ts__should_parse_valid_projects_CSV",
        "src_utils___tests___csvUtils_test_ts__should_handle_missing_optional_fields",
        "src_utils___tests___csvUtils_test_ts__should_handle_quoted_project_data",
        "src_utils___tests___csvUtils_test_ts__should_filter_out_invalid_rows",
        "src_utils___tests___csvUtils_test_ts__should_generate_unique_project_IDs",
        "src_utils___tests___csvUtils_test_ts__should_set_default_values_for_missing_fields",
        "src_utils___tests___csvUtils_test_ts__should_parse_valid_roles_CSV",
        "src_utils___tests___csvUtils_test_ts__should_handle_roles_with_spaces_in_names",
        "src_utils___tests___csvUtils_test_ts__should_handle_quoted_role_data",
        "src_utils___tests___csvUtils_test_ts__should_filter_out_invalid_rows",
        "src_utils___tests___csvUtils_test_ts__should_handle_non_numeric_rates_gracefully",
        "src_utils___tests___csvUtils_test_ts__should_generate_consistent_role_IDs",
        "src_utils___tests___csvUtils_test_ts__should_set_default_values_for_role_properties",
        "src_utils___tests___conflictDetection_test_ts__should_detect_no_conflicts_with_normal_allocations",
        "src_utils___tests___conflictDetection_test_ts__should_detect_overallocation_conflicts",
        "src_utils___tests___conflictDetection_test_ts__should_detect_critical_overallocation",
        "src_utils___tests___conflictDetection_test_ts__should_detect_resource_contention_conflicts",
        "src_utils___tests___conflictDetection_test_ts__should_detect_dependency_violation_conflicts",
        "src_utils___tests___conflictDetection_test_ts__should_detect_timeline_overlap_conflicts",
        "src_utils___tests___conflictDetection_test_ts__should_calculate_correct_summary_statistics",
        "src_utils___tests___conflictDetection_test_ts__should_filter_conflicts_by_selected_cycle",
        "src_utils___tests___conflictDetection_test_ts__should_return_correct_icons_for_conflict_types",
        "src_utils___tests___conflictDetection_test_ts__should_return_correct_colors_for_severity_levels",
        "src_utils___tests___conflictDetection_test_ts__should_handle_empty_allocations",
        "src_utils___tests___conflictDetection_test_ts__should_handle_empty_teams",
        "src_utils___tests___conflictDetection_test_ts__should_handle_run_work_allocations__without_epic_",
        "src_utils___tests___calculateProjectedEndDate_test_ts__should_return_the_original_project_end_date",
        "src_utils___tests___calculateProjectedEndDate_test_ts__should_return_null_when_project_has_no_end_date",
        "src_utils___tests___calculateProjectedEndDate_test_ts__should_return_the_latest_completion_date_from_epics",
        "src_utils___tests___calculateProjectedEndDate_test_ts__should_return_the_latest_completion_date_from_milestones",
        "src_utils___tests___calculateProjectedEndDate_test_ts__should_calculate_projected_end_date_based_on_team_capacity_and_epic_effort",
        "src_utils___tests___calculateProjectedEndDate_test_ts__should_handle_teams_with_no_allocations_gracefully",
        "src_utils___tests___calculateProjectedEndDate_test_ts__should_factor_in_team_member_availability_and_capacity",
        "src_utils___tests___calculateProjectedEndDate_test_ts__should_account_for_different_role_velocities",
        "src_utils___tests___calculateProjectedEndDate_test_ts__should_handle_projects_with_missing_data_gracefully",
        "src_utils___tests___calculateProjectedEndDate_test_ts__should_handle_epics_without_effort_estimates",
        "src_utils___tests___calculateProjectedEndDate_test_ts__should_handle_teams_with_zero_capacity",
        "src_utils___tests___calculateProjectedEndDate_test_ts__should_validate_input_parameters",
        "src_utils___tests___calculateProjectedEndDate_test_ts__should_handle_projects_with_mixed_epic_statuses_correctly",
        "src_utils___tests___calculateProjectedEndDate_test_ts__should_prioritize_milestone_dates_over_epic_estimates_when_milestones_are_later",
        "src_utils___tests___data_sampleData_test_ts__should_have_the_correct_number_of_divisions",
        "src_utils___tests___data_sampleData_test_ts__should_have_the_correct_number_of_teams",
        "src_utils___tests___data_sampleData_test_ts__should_have_the_correct_number_of_roles",
        "src_utils___tests___data_sampleData_test_ts__should_have_people_data",
        "src_utils___tests___data_sampleData_test_ts__should_have_teams_distributed_across_divisions",
        "src_utils___tests___data_sampleData_test_ts__should_have_realistic_team_sizes",
        "src_utils___tests___data_sampleData_test_ts__should_have_one_Product_Owner_per_team",
        "src_utils___tests___data_sampleData_test_ts__should_find_team_by_ID",
        "src_utils___tests___data_sampleData_test_ts__should_find_division_by_ID",
        "src_utils___tests___data_sampleData_test_ts__should_find_people_by_team_ID",
        "src_utils___tests___data_sampleData_test_ts__should_find_teams_by_division_ID",
        "src_utils___tests___data_sampleData_test_ts__should_find_role_by_ID",
        "src_utils___tests___data_sampleData_test_ts__should_load_sample_data_correctly",
        "src_utils___tests___data_sampleData_test_ts__should_validate_loaded_data",
        "src_utils___tests___data_sampleData_test_ts__should_provide_data_summary",
        "src_utils___tests___data_sampleData_test_ts__should_load_minimal_test_data",
        "src_utils___tests___data_sampleData_test_ts__should_load_people_test_data",
        "src_utils___tests___data_sampleData_test_ts__should_load_full_test_data",
        "src_utils___tests___data_sampleData_test_ts__should_validate_test_data",
        "src_utils___tests___data_sampleData_test_ts__should_create_test_fixtures",
        "src_utils___tests___data_sampleData_test_ts__should_have_consistent_team_division_relationships",
        "src_utils___tests___data_sampleData_test_ts__should_have_consistent_person_team_relationships",
        "src_utils___tests___data_sampleData_test_ts__should_have_consistent_person_role_relationships",
        "src_utils___tests___data_sampleData_test_ts__should_have_realistic_salary_ranges",
        "src_utils___tests___data_sampleData_test_ts__should_have_valid_email_addresses"
      ],
      "type": "unit",
      "featureArea": "core",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": false
      }
    },
    {
      "id": "tracking_unit",
      "name": "tracking unit tests",
      "tests": [
        "src_utils___tests___quarterIterationGeneration_test_ts__T",
        "src_utils___tests___quarterIterationGeneration_test_ts__T",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_4_quarters_from_January_1st_FY_start",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_4_quarters_from_April_1st_FY_start__UK_Australia_",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_4_quarters_from_July_1st_FY_start__common_in_organizations_",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_4_quarters_from_October_1st_FY_start__US_Government_",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_handle_leap_year_correctly",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_unique_IDs_for_each_quarter",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_throw_error_for_invalid_financial_year_date",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_handle_month_boundaries_correctly",
        "src_utils___tests___quarterIterationGeneration_test_ts__T",
        "src_utils___tests___quarterIterationGeneration_test_ts__T",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_fortnightly_iterations__2_week_sprints_",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_monthly_iterations",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_6_weekly_iterations",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_handle_iteration_overflow_by_truncating_to_quarter_end",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_unique_iteration_IDs_and_names",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_handle_leap_year_February_correctly",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_handle_cross_year_quarters",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_handle_very_short_quarters_gracefully",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_default_to_fortnightly_for_invalid_iteration_length",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_generate_complete_quarter_and_iteration_structure_for_a_full_FY",
        "src_utils___tests___quarterIterationGeneration_test_ts__T",
        "src_utils___tests___quarterIterationGeneration_test_ts__T",
        "src_utils___tests___quarterIterationGeneration_test_ts__T",
        "src_utils___tests___quarterIterationGeneration_test_ts__T",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_maintain_referential_integrity_between_quarters_and_iterations",
        "src_utils___tests___quarterIterationGeneration_test_ts__T",
        "src_utils___tests___quarterIterationGeneration_test_ts__T",
        "src_utils___tests___quarterIterationGeneration_test_ts__should_handle_different_iteration_lengths_consistently_across_quarters",
        "src_utils___tests___quarterIterationGeneration_test_ts__T",
        "src_utils___tests___quarterIterationGeneration_test_ts__T",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__T",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__T",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__T",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__T",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_leap_year_financial_years_correctly",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_custom_quarter_lengths",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_very_short_financial_years",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_validate_financial_year_date_consistency",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_invalid_date_formats",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_include_metadata_when_requested",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_cross_year_financial_years",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_generate_weekly_iterations_correctly",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_generate_tri_weekly_iterations_correctly",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_custom_iteration_lengths",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_align_iterations_to_Monday_start",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_different_naming_schemes",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_partial_iterations_appropriately",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_include_comprehensive_metadata",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_calculate_working_days_correctly_when_excluding_weekends",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_month_based_iterations_with_different_month_lengths",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_edge_case_of_same_day_quarter",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_generate_complete_quarterly_structure_for_multiple_financial_years",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_mixed_iteration_lengths_within_same_quarter",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_maintain_referential_integrity_across_quarters_and_iterations",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_organizational_change_scenarios",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_validate_business_rules_for_iteration_planning",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_timezone_independent_date_calculations",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_provide_comprehensive_quarter_and_iteration_statistics",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_handle_large_scale_generation_efficiently",
        "src_utils___tests___quarterIterationGeneration_comprehensive_test_ts__should_optimize_memory_usage_for_large_datasets"
      ],
      "type": "unit",
      "featureArea": "tracking",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": false
      }
    },
    {
      "id": "core_integration",
      "name": "core integration tests",
      "tests": [
        "src_context___tests___TeamContext_test_tsx__should_add_a_new_team",
        "src_context___tests___TeamContext_test_tsx__should_update_a_team",
        "src_context___tests___TeamContext_test_tsx__should_delete_a_team",
        "src_context___tests___ProjectContext_test_tsx__should_add_a_new_project",
        "src_context___tests___ProjectContext_test_tsx__should_update_a_project",
        "src_context___tests___GoalContext_test_tsx__should_add_a_new_goal",
        "src_context___tests___GoalContext_test_tsx__should_update_a_goal"
      ],
      "type": "integration",
      "featureArea": "core",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": false
      }
    },
    {
      "id": "settings_integration",
      "name": "settings integration tests",
      "tests": [
        "src_context___tests___SettingsContext_test_tsx__should_update_the_config",
        "src_context___tests___SettingsContext_test_tsx__should_update_the_setup_complete_flag"
      ],
      "type": "integration",
      "featureArea": "settings",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": false
      }
    },
    {
      "id": "scenarios_integration",
      "name": "scenarios integration tests",
      "tests": [
        "src_context___tests___ScenarioContext_test_tsx__should_provide_initial_scenario_state",
        "src_context___tests___ScenarioContext_test_tsx__should_create_a_new_scenario",
        "src_context___tests___ScenarioContext_test_tsx__should_switch_to_a_scenario",
        "src_context___tests___ScenarioContext_test_tsx__should_switch_back_to_live_mode",
        "src_context___tests___ScenarioContext_test_tsx__should_delete_a_scenario",
        "src_context___tests___ScenarioContext_test_tsx__should_return_current_data_when_not_in_scenario_mode",
        "src_context___tests___ScenarioContext_test_tsx__should_have_built_in_templates_available",
        "src_context___tests___ScenarioContext_test_tsx__should_create_scenario_from_template",
        "src_context___tests___ScenarioContext_test_tsx__should_handle_scenario_expiration",
        "src_context___tests___ScenarioContext_test_tsx__should_generate_scenario_comparison"
      ],
      "type": "integration",
      "featureArea": "scenarios",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": false
      }
    },
    {
      "id": "planning_integration",
      "name": "planning integration tests",
      "tests": [
        "src_context___tests___PlanningContext_test_tsx__should_add_a_new_allocation",
        "src_pages___tests___Calendar_test_tsx__should_render_without_crashing",
        "src_pages___tests___Calendar_test_tsx__should_render_calendar_component",
        "src_pages___tests___Calendar_test_tsx__should_have_proper_page_structure",
        "src_pages___tests___Calendar_test_tsx__should_integrate_with_navigation_breadcrumbs"
      ],
      "type": "integration",
      "featureArea": "planning",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": false
      }
    },
    {
      "id": "dashboard_integration",
      "name": "dashboard integration tests",
      "tests": [
        "src_pages___tests___Dashboard_test_tsx__renders_dashboard_components_when_setup_is_complete",
        "src_pages___tests___Dashboard_test_tsx__shows_setup_required_message_when_setup_is_not_complete",
        "src_pages___tests___Dashboard_test_tsx__shows_loading_state_when_data_is_loading",
        "src_pages___tests___Dashboard_test_tsx__handles_error_state_gracefully",
        "src_pages___tests___Dashboard_test_tsx__renders_with_empty_data_gracefully",
        "src_pages___tests___Dashboard_test_tsx__renders_setup_required_card_structure_correctly",
        "src_pages___tests___Dashboard_test_tsx__computes_dashboard_data_correctly",
        "src_pages___tests___Dashboard_test_tsx__handles_dashboard_data_computation_errors",
        "src_pages___tests___Dashboard_test_tsx__shows_appropriate_warning_when_no_cycles_are_configured",
        "src_pages___tests___Dashboard_test_tsx__displays_correct_layout_structure"
      ],
      "type": "integration",
      "featureArea": "dashboard",
      "enabled": true,
      "ciConfig": {
        "lightning": false,
        "comprehensive": true,
        "quality": false
      }
    }
  ],
  "pyramidMetrics": {
    "unit": {
      "count": 2457,
      "percentage": 99,
      "avgDuration": 232,
      "stability": 0.95
    },
    "integration": {
      "count": 34,
      "percentage": 1,
      "avgDuration": 600,
      "stability": 0.95
    },
    "e2e": {
      "count": 0,
      "percentage": 0,
      "avgDuration": 0,
      "stability": 1
    },
    "total": 2491,
    "pyramidHealth": "optimal",
    "recommendations": []
  },
  "summary": {
    "byType": {
      "unit": 2457,
      "integration": 34
    },
    "byFeature": {
      "skills": 94,
      "settings": 356,
      "teams": 255,
      "dashboard": 459,
      "financials": 69,
      "projects": 205,
      "scenarios": 108,
      "canvas": 153,
      "planning": 280,
      "mobile": 57,
      "core": 393,
      "tracking": 62
    },
    "byPriority": {
      "medium": 1447,
      "high": 90,
      "low": 459,
      "critical": 495
    },
    "byStatus": {
      "active": 2476,
      "flaky": 15
    }
  }
}
